

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Jan  2 21:22:40 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18325
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cinit,global,class=CODE,merge=1,delta=2
     9                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2
    18                           	psect	text3,local,class=CODE,merge=1,delta=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2
    22                           	psect	text7,local,class=CODE,merge=1,delta=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2
    35                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    36                           	dabs	1,0x7E,2
    37  0000                     
    38                           ; Version 2.35
    39                           ; Generated 13/04/2021 GMT
    40                           ; 
    41                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution. Publication is not required when
    55                           ;        this file is used in an embedded application.
    56                           ; 
    57                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    58                           ;        software without specific prior written permission.
    59                           ; 
    60                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    61                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    62                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    63                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    64                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    65                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    66                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    67                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    68                           ; 
    69                           ; 
    70                           ; Code-generator required, PIC16F18325 Definitions
    71                           ; 
    72                           ; SFR Addresses
    73  0000                     	;# 
    74  0001                     	;# 
    75  0002                     	;# 
    76  0003                     	;# 
    77  0004                     	;# 
    78  0005                     	;# 
    79  0006                     	;# 
    80  0007                     	;# 
    81  0008                     	;# 
    82  0009                     	;# 
    83  000A                     	;# 
    84  000B                     	;# 
    85  000C                     	;# 
    86  000E                     	;# 
    87  0010                     	;# 
    88  0011                     	;# 
    89  0012                     	;# 
    90  0013                     	;# 
    91  0014                     	;# 
    92  0015                     	;# 
    93  0015                     	;# 
    94  0016                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  0019                     	;# 
   100  001A                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  008C                     	;# 
   107  008E                     	;# 
   108  0090                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0097                     	;# 
   114  009B                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010E                     	;# 
   122  0111                     	;# 
   123  0112                     	;# 
   124  0113                     	;# 
   125  0114                     	;# 
   126  0115                     	;# 
   127  0116                     	;# 
   128  0117                     	;# 
   129  0118                     	;# 
   130  0119                     	;# 
   131  018C                     	;# 
   132  018E                     	;# 
   133  0197                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  0199                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019A                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019B                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019C                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019D                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019E                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  019F                     	;# 
   159  020C                     	;# 
   160  020E                     	;# 
   161  0211                     	;# 
   162  0211                     	;# 
   163  0212                     	;# 
   164  0212                     	;# 
   165  0213                     	;# 
   166  0213                     	;# 
   167  0214                     	;# 
   168  0214                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0215                     	;# 
   173  0216                     	;# 
   174  0216                     	;# 
   175  0217                     	;# 
   176  0217                     	;# 
   177  0219                     	;# 
   178  021A                     	;# 
   179  021B                     	;# 
   180  021C                     	;# 
   181  021D                     	;# 
   182  021D                     	;# 
   183  021E                     	;# 
   184  021F                     	;# 
   185  028C                     	;# 
   186  028E                     	;# 
   187  0291                     	;# 
   188  0291                     	;# 
   189  0292                     	;# 
   190  0293                     	;# 
   191  0294                     	;# 
   192  0295                     	;# 
   193  0295                     	;# 
   194  0296                     	;# 
   195  0297                     	;# 
   196  0298                     	;# 
   197  029F                     	;# 
   198  030C                     	;# 
   199  030E                     	;# 
   200  0311                     	;# 
   201  0311                     	;# 
   202  0312                     	;# 
   203  0313                     	;# 
   204  0314                     	;# 
   205  0315                     	;# 
   206  0315                     	;# 
   207  0316                     	;# 
   208  0317                     	;# 
   209  0318                     	;# 
   210  038C                     	;# 
   211  038E                     	;# 
   212  0391                     	;# 
   213  0392                     	;# 
   214  0393                     	;# 
   215  0397                     	;# 
   216  0398                     	;# 
   217  0399                     	;# 
   218  039A                     	;# 
   219  039C                     	;# 
   220  039D                     	;# 
   221  039E                     	;# 
   222  039F                     	;# 
   223  0411                     	;# 
   224  0411                     	;# 
   225  0412                     	;# 
   226  0413                     	;# 
   227  0414                     	;# 
   228  0415                     	;# 
   229  0416                     	;# 
   230  0417                     	;# 
   231  0418                     	;# 
   232  0418                     	;# 
   233  0419                     	;# 
   234  041A                     	;# 
   235  041B                     	;# 
   236  041C                     	;# 
   237  041D                     	;# 
   238  041E                     	;# 
   239  041F                     	;# 
   240  0498                     	;# 
   241  0498                     	;# 
   242  0499                     	;# 
   243  049A                     	;# 
   244  049B                     	;# 
   245  049B                     	;# 
   246  049C                     	;# 
   247  049D                     	;# 
   248  049E                     	;# 
   249  049F                     	;# 
   250  0617                     	;# 
   251  0618                     	;# 
   252  0619                     	;# 
   253  0619                     	;# 
   254  061A                     	;# 
   255  061B                     	;# 
   256  061C                     	;# 
   257  061C                     	;# 
   258  061F                     	;# 
   259  0691                     	;# 
   260  0692                     	;# 
   261  0693                     	;# 
   262  0694                     	;# 
   263  0695                     	;# 
   264  0696                     	;# 
   265  0697                     	;# 
   266  0698                     	;# 
   267  0699                     	;# 
   268  0711                     	;# 
   269  0712                     	;# 
   270  0713                     	;# 
   271  0714                     	;# 
   272  0715                     	;# 
   273  0716                     	;# 
   274  0717                     	;# 
   275  0718                     	;# 
   276  0719                     	;# 
   277  0891                     	;# 
   278  0891                     	;# 
   279  0891                     	;# 
   280  0891                     	;# 
   281  0891                     	;# 
   282  0891                     	;# 
   283  0892                     	;# 
   284  0892                     	;# 
   285  0892                     	;# 
   286  0893                     	;# 
   287  0893                     	;# 
   288  0893                     	;# 
   289  0893                     	;# 
   290  0893                     	;# 
   291  0893                     	;# 
   292  0894                     	;# 
   293  0894                     	;# 
   294  0894                     	;# 
   295  0895                     	;# 
   296  0895                     	;# 
   297  0895                     	;# 
   298  0896                     	;# 
   299  0896                     	;# 
   300  0896                     	;# 
   301  089B                     	;# 
   302  0911                     	;# 
   303  0912                     	;# 
   304  0913                     	;# 
   305  0914                     	;# 
   306  0915                     	;# 
   307  0916                     	;# 
   308  0918                     	;# 
   309  0919                     	;# 
   310  091A                     	;# 
   311  091B                     	;# 
   312  091C                     	;# 
   313  091D                     	;# 
   314  091E                     	;# 
   315  091F                     	;# 
   316  0E0F                     	;# 
   317  0E10                     	;# 
   318  0E11                     	;# 
   319  0E12                     	;# 
   320  0E13                     	;# 
   321  0E14                     	;# 
   322  0E15                     	;# 
   323  0E16                     	;# 
   324  0E17                     	;# 
   325  0E18                     	;# 
   326  0E19                     	;# 
   327  0E1A                     	;# 
   328  0E1B                     	;# 
   329  0E1C                     	;# 
   330  0E1D                     	;# 
   331  0E1E                     	;# 
   332  0E1F                     	;# 
   333  0E20                     	;# 
   334  0E21                     	;# 
   335  0E22                     	;# 
   336  0E24                     	;# 
   337  0E25                     	;# 
   338  0E28                     	;# 
   339  0E29                     	;# 
   340  0E2A                     	;# 
   341  0E2B                     	;# 
   342  0E2C                     	;# 
   343  0E2D                     	;# 
   344  0E2E                     	;# 
   345  0E2F                     	;# 
   346  0E90                     	;# 
   347  0E91                     	;# 
   348  0E92                     	;# 
   349  0E94                     	;# 
   350  0E95                     	;# 
   351  0EA0                     	;# 
   352  0EA1                     	;# 
   353  0EA2                     	;# 
   354  0EA3                     	;# 
   355  0EA4                     	;# 
   356  0EA5                     	;# 
   357  0F0F                     	;# 
   358  0F10                     	;# 
   359  0F11                     	;# 
   360  0F12                     	;# 
   361  0F13                     	;# 
   362  0F14                     	;# 
   363  0F15                     	;# 
   364  0F16                     	;# 
   365  0F17                     	;# 
   366  0F18                     	;# 
   367  0F19                     	;# 
   368  0F1A                     	;# 
   369  0F1B                     	;# 
   370  0F1C                     	;# 
   371  0F1D                     	;# 
   372  0F1E                     	;# 
   373  0F1F                     	;# 
   374  0F20                     	;# 
   375  0F21                     	;# 
   376  0F22                     	;# 
   377  0F23                     	;# 
   378  0F24                     	;# 
   379  0F25                     	;# 
   380  0F26                     	;# 
   381  0F27                     	;# 
   382  0F28                     	;# 
   383  0F29                     	;# 
   384  0F2A                     	;# 
   385  0F2B                     	;# 
   386  0F2C                     	;# 
   387  0F2D                     	;# 
   388  0F2E                     	;# 
   389  0F2F                     	;# 
   390  0F30                     	;# 
   391  0F31                     	;# 
   392  0F32                     	;# 
   393  0F33                     	;# 
   394  0F34                     	;# 
   395  0F35                     	;# 
   396  0F36                     	;# 
   397  0F37                     	;# 
   398  0FE4                     	;# 
   399  0FE5                     	;# 
   400  0FE6                     	;# 
   401  0FE7                     	;# 
   402  0FE8                     	;# 
   403  0FE9                     	;# 
   404  0FEA                     	;# 
   405  0FEB                     	;# 
   406  0FED                     	;# 
   407  0FEE                     	;# 
   408  0FEF                     	;# 
   409  0000                     	;# 
   410  0001                     	;# 
   411  0002                     	;# 
   412  0003                     	;# 
   413  0004                     	;# 
   414  0005                     	;# 
   415  0006                     	;# 
   416  0007                     	;# 
   417  0008                     	;# 
   418  0009                     	;# 
   419  000A                     	;# 
   420  000B                     	;# 
   421  000C                     	;# 
   422  000E                     	;# 
   423  0010                     	;# 
   424  0011                     	;# 
   425  0012                     	;# 
   426  0013                     	;# 
   427  0014                     	;# 
   428  0015                     	;# 
   429  0015                     	;# 
   430  0016                     	;# 
   431  0016                     	;# 
   432  0017                     	;# 
   433  0018                     	;# 
   434  0019                     	;# 
   435  0019                     	;# 
   436  001A                     	;# 
   437  001B                     	;# 
   438  001C                     	;# 
   439  001D                     	;# 
   440  001E                     	;# 
   441  001F                     	;# 
   442  008C                     	;# 
   443  008E                     	;# 
   444  0090                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0097                     	;# 
   450  009B                     	;# 
   451  009B                     	;# 
   452  009C                     	;# 
   453  009D                     	;# 
   454  009E                     	;# 
   455  009F                     	;# 
   456  010C                     	;# 
   457  010E                     	;# 
   458  0111                     	;# 
   459  0112                     	;# 
   460  0113                     	;# 
   461  0114                     	;# 
   462  0115                     	;# 
   463  0116                     	;# 
   464  0117                     	;# 
   465  0118                     	;# 
   466  0119                     	;# 
   467  018C                     	;# 
   468  018E                     	;# 
   469  0197                     	;# 
   470  0199                     	;# 
   471  0199                     	;# 
   472  0199                     	;# 
   473  019A                     	;# 
   474  019A                     	;# 
   475  019A                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019B                     	;# 
   481  019C                     	;# 
   482  019C                     	;# 
   483  019C                     	;# 
   484  019D                     	;# 
   485  019D                     	;# 
   486  019D                     	;# 
   487  019E                     	;# 
   488  019E                     	;# 
   489  019E                     	;# 
   490  019F                     	;# 
   491  019F                     	;# 
   492  019F                     	;# 
   493  019F                     	;# 
   494  019F                     	;# 
   495  020C                     	;# 
   496  020E                     	;# 
   497  0211                     	;# 
   498  0211                     	;# 
   499  0212                     	;# 
   500  0212                     	;# 
   501  0213                     	;# 
   502  0213                     	;# 
   503  0214                     	;# 
   504  0214                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0215                     	;# 
   508  0215                     	;# 
   509  0216                     	;# 
   510  0216                     	;# 
   511  0217                     	;# 
   512  0217                     	;# 
   513  0219                     	;# 
   514  021A                     	;# 
   515  021B                     	;# 
   516  021C                     	;# 
   517  021D                     	;# 
   518  021D                     	;# 
   519  021E                     	;# 
   520  021F                     	;# 
   521  028C                     	;# 
   522  028E                     	;# 
   523  0291                     	;# 
   524  0291                     	;# 
   525  0292                     	;# 
   526  0293                     	;# 
   527  0294                     	;# 
   528  0295                     	;# 
   529  0295                     	;# 
   530  0296                     	;# 
   531  0297                     	;# 
   532  0298                     	;# 
   533  029F                     	;# 
   534  030C                     	;# 
   535  030E                     	;# 
   536  0311                     	;# 
   537  0311                     	;# 
   538  0312                     	;# 
   539  0313                     	;# 
   540  0314                     	;# 
   541  0315                     	;# 
   542  0315                     	;# 
   543  0316                     	;# 
   544  0317                     	;# 
   545  0318                     	;# 
   546  038C                     	;# 
   547  038E                     	;# 
   548  0391                     	;# 
   549  0392                     	;# 
   550  0393                     	;# 
   551  0397                     	;# 
   552  0398                     	;# 
   553  0399                     	;# 
   554  039A                     	;# 
   555  039C                     	;# 
   556  039D                     	;# 
   557  039E                     	;# 
   558  039F                     	;# 
   559  0411                     	;# 
   560  0411                     	;# 
   561  0412                     	;# 
   562  0413                     	;# 
   563  0414                     	;# 
   564  0415                     	;# 
   565  0416                     	;# 
   566  0417                     	;# 
   567  0418                     	;# 
   568  0418                     	;# 
   569  0419                     	;# 
   570  041A                     	;# 
   571  041B                     	;# 
   572  041C                     	;# 
   573  041D                     	;# 
   574  041E                     	;# 
   575  041F                     	;# 
   576  0498                     	;# 
   577  0498                     	;# 
   578  0499                     	;# 
   579  049A                     	;# 
   580  049B                     	;# 
   581  049B                     	;# 
   582  049C                     	;# 
   583  049D                     	;# 
   584  049E                     	;# 
   585  049F                     	;# 
   586  0617                     	;# 
   587  0618                     	;# 
   588  0619                     	;# 
   589  0619                     	;# 
   590  061A                     	;# 
   591  061B                     	;# 
   592  061C                     	;# 
   593  061C                     	;# 
   594  061F                     	;# 
   595  0691                     	;# 
   596  0692                     	;# 
   597  0693                     	;# 
   598  0694                     	;# 
   599  0695                     	;# 
   600  0696                     	;# 
   601  0697                     	;# 
   602  0698                     	;# 
   603  0699                     	;# 
   604  0711                     	;# 
   605  0712                     	;# 
   606  0713                     	;# 
   607  0714                     	;# 
   608  0715                     	;# 
   609  0716                     	;# 
   610  0717                     	;# 
   611  0718                     	;# 
   612  0719                     	;# 
   613  0891                     	;# 
   614  0891                     	;# 
   615  0891                     	;# 
   616  0891                     	;# 
   617  0891                     	;# 
   618  0891                     	;# 
   619  0892                     	;# 
   620  0892                     	;# 
   621  0892                     	;# 
   622  0893                     	;# 
   623  0893                     	;# 
   624  0893                     	;# 
   625  0893                     	;# 
   626  0893                     	;# 
   627  0893                     	;# 
   628  0894                     	;# 
   629  0894                     	;# 
   630  0894                     	;# 
   631  0895                     	;# 
   632  0895                     	;# 
   633  0895                     	;# 
   634  0896                     	;# 
   635  0896                     	;# 
   636  0896                     	;# 
   637  089B                     	;# 
   638  0911                     	;# 
   639  0912                     	;# 
   640  0913                     	;# 
   641  0914                     	;# 
   642  0915                     	;# 
   643  0916                     	;# 
   644  0918                     	;# 
   645  0919                     	;# 
   646  091A                     	;# 
   647  091B                     	;# 
   648  091C                     	;# 
   649  091D                     	;# 
   650  091E                     	;# 
   651  091F                     	;# 
   652  0E0F                     	;# 
   653  0E10                     	;# 
   654  0E11                     	;# 
   655  0E12                     	;# 
   656  0E13                     	;# 
   657  0E14                     	;# 
   658  0E15                     	;# 
   659  0E16                     	;# 
   660  0E17                     	;# 
   661  0E18                     	;# 
   662  0E19                     	;# 
   663  0E1A                     	;# 
   664  0E1B                     	;# 
   665  0E1C                     	;# 
   666  0E1D                     	;# 
   667  0E1E                     	;# 
   668  0E1F                     	;# 
   669  0E20                     	;# 
   670  0E21                     	;# 
   671  0E22                     	;# 
   672  0E24                     	;# 
   673  0E25                     	;# 
   674  0E28                     	;# 
   675  0E29                     	;# 
   676  0E2A                     	;# 
   677  0E2B                     	;# 
   678  0E2C                     	;# 
   679  0E2D                     	;# 
   680  0E2E                     	;# 
   681  0E2F                     	;# 
   682  0E90                     	;# 
   683  0E91                     	;# 
   684  0E92                     	;# 
   685  0E94                     	;# 
   686  0E95                     	;# 
   687  0EA0                     	;# 
   688  0EA1                     	;# 
   689  0EA2                     	;# 
   690  0EA3                     	;# 
   691  0EA4                     	;# 
   692  0EA5                     	;# 
   693  0F0F                     	;# 
   694  0F10                     	;# 
   695  0F11                     	;# 
   696  0F12                     	;# 
   697  0F13                     	;# 
   698  0F14                     	;# 
   699  0F15                     	;# 
   700  0F16                     	;# 
   701  0F17                     	;# 
   702  0F18                     	;# 
   703  0F19                     	;# 
   704  0F1A                     	;# 
   705  0F1B                     	;# 
   706  0F1C                     	;# 
   707  0F1D                     	;# 
   708  0F1E                     	;# 
   709  0F1F                     	;# 
   710  0F20                     	;# 
   711  0F21                     	;# 
   712  0F22                     	;# 
   713  0F23                     	;# 
   714  0F24                     	;# 
   715  0F25                     	;# 
   716  0F26                     	;# 
   717  0F27                     	;# 
   718  0F28                     	;# 
   719  0F29                     	;# 
   720  0F2A                     	;# 
   721  0F2B                     	;# 
   722  0F2C                     	;# 
   723  0F2D                     	;# 
   724  0F2E                     	;# 
   725  0F2F                     	;# 
   726  0F30                     	;# 
   727  0F31                     	;# 
   728  0F32                     	;# 
   729  0F33                     	;# 
   730  0F34                     	;# 
   731  0F35                     	;# 
   732  0F36                     	;# 
   733  0F37                     	;# 
   734  0FE4                     	;# 
   735  0FE5                     	;# 
   736  0FE6                     	;# 
   737  0FE7                     	;# 
   738  0FE8                     	;# 
   739  0FE9                     	;# 
   740  0FEA                     	;# 
   741  0FEB                     	;# 
   742  0FED                     	;# 
   743  0FEE                     	;# 
   744  0FEF                     	;# 
   745  0000                     	;# 
   746  0001                     	;# 
   747  0002                     	;# 
   748  0003                     	;# 
   749  0004                     	;# 
   750  0005                     	;# 
   751  0006                     	;# 
   752  0007                     	;# 
   753  0008                     	;# 
   754  0009                     	;# 
   755  000A                     	;# 
   756  000B                     	;# 
   757  000C                     	;# 
   758  000E                     	;# 
   759  0010                     	;# 
   760  0011                     	;# 
   761  0012                     	;# 
   762  0013                     	;# 
   763  0014                     	;# 
   764  0015                     	;# 
   765  0015                     	;# 
   766  0016                     	;# 
   767  0016                     	;# 
   768  0017                     	;# 
   769  0018                     	;# 
   770  0019                     	;# 
   771  0019                     	;# 
   772  001A                     	;# 
   773  001B                     	;# 
   774  001C                     	;# 
   775  001D                     	;# 
   776  001E                     	;# 
   777  001F                     	;# 
   778  008C                     	;# 
   779  008E                     	;# 
   780  0090                     	;# 
   781  0091                     	;# 
   782  0092                     	;# 
   783  0093                     	;# 
   784  0094                     	;# 
   785  0097                     	;# 
   786  009B                     	;# 
   787  009B                     	;# 
   788  009C                     	;# 
   789  009D                     	;# 
   790  009E                     	;# 
   791  009F                     	;# 
   792  010C                     	;# 
   793  010E                     	;# 
   794  0111                     	;# 
   795  0112                     	;# 
   796  0113                     	;# 
   797  0114                     	;# 
   798  0115                     	;# 
   799  0116                     	;# 
   800  0117                     	;# 
   801  0118                     	;# 
   802  0119                     	;# 
   803  018C                     	;# 
   804  018E                     	;# 
   805  0197                     	;# 
   806  0199                     	;# 
   807  0199                     	;# 
   808  0199                     	;# 
   809  019A                     	;# 
   810  019A                     	;# 
   811  019A                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019B                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019C                     	;# 
   820  019D                     	;# 
   821  019D                     	;# 
   822  019D                     	;# 
   823  019E                     	;# 
   824  019E                     	;# 
   825  019E                     	;# 
   826  019F                     	;# 
   827  019F                     	;# 
   828  019F                     	;# 
   829  019F                     	;# 
   830  019F                     	;# 
   831  020C                     	;# 
   832  020E                     	;# 
   833  0211                     	;# 
   834  0211                     	;# 
   835  0212                     	;# 
   836  0212                     	;# 
   837  0213                     	;# 
   838  0213                     	;# 
   839  0214                     	;# 
   840  0214                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0215                     	;# 
   844  0215                     	;# 
   845  0216                     	;# 
   846  0216                     	;# 
   847  0217                     	;# 
   848  0217                     	;# 
   849  0219                     	;# 
   850  021A                     	;# 
   851  021B                     	;# 
   852  021C                     	;# 
   853  021D                     	;# 
   854  021D                     	;# 
   855  021E                     	;# 
   856  021F                     	;# 
   857  028C                     	;# 
   858  028E                     	;# 
   859  0291                     	;# 
   860  0291                     	;# 
   861  0292                     	;# 
   862  0293                     	;# 
   863  0294                     	;# 
   864  0295                     	;# 
   865  0295                     	;# 
   866  0296                     	;# 
   867  0297                     	;# 
   868  0298                     	;# 
   869  029F                     	;# 
   870  030C                     	;# 
   871  030E                     	;# 
   872  0311                     	;# 
   873  0311                     	;# 
   874  0312                     	;# 
   875  0313                     	;# 
   876  0314                     	;# 
   877  0315                     	;# 
   878  0315                     	;# 
   879  0316                     	;# 
   880  0317                     	;# 
   881  0318                     	;# 
   882  038C                     	;# 
   883  038E                     	;# 
   884  0391                     	;# 
   885  0392                     	;# 
   886  0393                     	;# 
   887  0397                     	;# 
   888  0398                     	;# 
   889  0399                     	;# 
   890  039A                     	;# 
   891  039C                     	;# 
   892  039D                     	;# 
   893  039E                     	;# 
   894  039F                     	;# 
   895  0411                     	;# 
   896  0411                     	;# 
   897  0412                     	;# 
   898  0413                     	;# 
   899  0414                     	;# 
   900  0415                     	;# 
   901  0416                     	;# 
   902  0417                     	;# 
   903  0418                     	;# 
   904  0418                     	;# 
   905  0419                     	;# 
   906  041A                     	;# 
   907  041B                     	;# 
   908  041C                     	;# 
   909  041D                     	;# 
   910  041E                     	;# 
   911  041F                     	;# 
   912  0498                     	;# 
   913  0498                     	;# 
   914  0499                     	;# 
   915  049A                     	;# 
   916  049B                     	;# 
   917  049B                     	;# 
   918  049C                     	;# 
   919  049D                     	;# 
   920  049E                     	;# 
   921  049F                     	;# 
   922  0617                     	;# 
   923  0618                     	;# 
   924  0619                     	;# 
   925  0619                     	;# 
   926  061A                     	;# 
   927  061B                     	;# 
   928  061C                     	;# 
   929  061C                     	;# 
   930  061F                     	;# 
   931  0691                     	;# 
   932  0692                     	;# 
   933  0693                     	;# 
   934  0694                     	;# 
   935  0695                     	;# 
   936  0696                     	;# 
   937  0697                     	;# 
   938  0698                     	;# 
   939  0699                     	;# 
   940  0711                     	;# 
   941  0712                     	;# 
   942  0713                     	;# 
   943  0714                     	;# 
   944  0715                     	;# 
   945  0716                     	;# 
   946  0717                     	;# 
   947  0718                     	;# 
   948  0719                     	;# 
   949  0891                     	;# 
   950  0891                     	;# 
   951  0891                     	;# 
   952  0891                     	;# 
   953  0891                     	;# 
   954  0891                     	;# 
   955  0892                     	;# 
   956  0892                     	;# 
   957  0892                     	;# 
   958  0893                     	;# 
   959  0893                     	;# 
   960  0893                     	;# 
   961  0893                     	;# 
   962  0893                     	;# 
   963  0893                     	;# 
   964  0894                     	;# 
   965  0894                     	;# 
   966  0894                     	;# 
   967  0895                     	;# 
   968  0895                     	;# 
   969  0895                     	;# 
   970  0896                     	;# 
   971  0896                     	;# 
   972  0896                     	;# 
   973  089B                     	;# 
   974  0911                     	;# 
   975  0912                     	;# 
   976  0913                     	;# 
   977  0914                     	;# 
   978  0915                     	;# 
   979  0916                     	;# 
   980  0918                     	;# 
   981  0919                     	;# 
   982  091A                     	;# 
   983  091B                     	;# 
   984  091C                     	;# 
   985  091D                     	;# 
   986  091E                     	;# 
   987  091F                     	;# 
   988  0E0F                     	;# 
   989  0E10                     	;# 
   990  0E11                     	;# 
   991  0E12                     	;# 
   992  0E13                     	;# 
   993  0E14                     	;# 
   994  0E15                     	;# 
   995  0E16                     	;# 
   996  0E17                     	;# 
   997  0E18                     	;# 
   998  0E19                     	;# 
   999  0E1A                     	;# 
  1000  0E1B                     	;# 
  1001  0E1C                     	;# 
  1002  0E1D                     	;# 
  1003  0E1E                     	;# 
  1004  0E1F                     	;# 
  1005  0E20                     	;# 
  1006  0E21                     	;# 
  1007  0E22                     	;# 
  1008  0E24                     	;# 
  1009  0E25                     	;# 
  1010  0E28                     	;# 
  1011  0E29                     	;# 
  1012  0E2A                     	;# 
  1013  0E2B                     	;# 
  1014  0E2C                     	;# 
  1015  0E2D                     	;# 
  1016  0E2E                     	;# 
  1017  0E2F                     	;# 
  1018  0E90                     	;# 
  1019  0E91                     	;# 
  1020  0E92                     	;# 
  1021  0E94                     	;# 
  1022  0E95                     	;# 
  1023  0EA0                     	;# 
  1024  0EA1                     	;# 
  1025  0EA2                     	;# 
  1026  0EA3                     	;# 
  1027  0EA4                     	;# 
  1028  0EA5                     	;# 
  1029  0F0F                     	;# 
  1030  0F10                     	;# 
  1031  0F11                     	;# 
  1032  0F12                     	;# 
  1033  0F13                     	;# 
  1034  0F14                     	;# 
  1035  0F15                     	;# 
  1036  0F16                     	;# 
  1037  0F17                     	;# 
  1038  0F18                     	;# 
  1039  0F19                     	;# 
  1040  0F1A                     	;# 
  1041  0F1B                     	;# 
  1042  0F1C                     	;# 
  1043  0F1D                     	;# 
  1044  0F1E                     	;# 
  1045  0F1F                     	;# 
  1046  0F20                     	;# 
  1047  0F21                     	;# 
  1048  0F22                     	;# 
  1049  0F23                     	;# 
  1050  0F24                     	;# 
  1051  0F25                     	;# 
  1052  0F26                     	;# 
  1053  0F27                     	;# 
  1054  0F28                     	;# 
  1055  0F29                     	;# 
  1056  0F2A                     	;# 
  1057  0F2B                     	;# 
  1058  0F2C                     	;# 
  1059  0F2D                     	;# 
  1060  0F2E                     	;# 
  1061  0F2F                     	;# 
  1062  0F30                     	;# 
  1063  0F31                     	;# 
  1064  0F32                     	;# 
  1065  0F33                     	;# 
  1066  0F34                     	;# 
  1067  0F35                     	;# 
  1068  0F36                     	;# 
  1069  0F37                     	;# 
  1070  0FE4                     	;# 
  1071  0FE5                     	;# 
  1072  0FE6                     	;# 
  1073  0FE7                     	;# 
  1074  0FE8                     	;# 
  1075  0FE9                     	;# 
  1076  0FEA                     	;# 
  1077  0FEB                     	;# 
  1078  0FED                     	;# 
  1079  0FEE                     	;# 
  1080  0FEF                     	;# 
  1081  0000                     	;# 
  1082  0001                     	;# 
  1083  0002                     	;# 
  1084  0003                     	;# 
  1085  0004                     	;# 
  1086  0005                     	;# 
  1087  0006                     	;# 
  1088  0007                     	;# 
  1089  0008                     	;# 
  1090  0009                     	;# 
  1091  000A                     	;# 
  1092  000B                     	;# 
  1093  000C                     	;# 
  1094  000E                     	;# 
  1095  0010                     	;# 
  1096  0011                     	;# 
  1097  0012                     	;# 
  1098  0013                     	;# 
  1099  0014                     	;# 
  1100  0015                     	;# 
  1101  0015                     	;# 
  1102  0016                     	;# 
  1103  0016                     	;# 
  1104  0017                     	;# 
  1105  0018                     	;# 
  1106  0019                     	;# 
  1107  0019                     	;# 
  1108  001A                     	;# 
  1109  001B                     	;# 
  1110  001C                     	;# 
  1111  001D                     	;# 
  1112  001E                     	;# 
  1113  001F                     	;# 
  1114  008C                     	;# 
  1115  008E                     	;# 
  1116  0090                     	;# 
  1117  0091                     	;# 
  1118  0092                     	;# 
  1119  0093                     	;# 
  1120  0094                     	;# 
  1121  0097                     	;# 
  1122  009B                     	;# 
  1123  009B                     	;# 
  1124  009C                     	;# 
  1125  009D                     	;# 
  1126  009E                     	;# 
  1127  009F                     	;# 
  1128  010C                     	;# 
  1129  010E                     	;# 
  1130  0111                     	;# 
  1131  0112                     	;# 
  1132  0113                     	;# 
  1133  0114                     	;# 
  1134  0115                     	;# 
  1135  0116                     	;# 
  1136  0117                     	;# 
  1137  0118                     	;# 
  1138  0119                     	;# 
  1139  018C                     	;# 
  1140  018E                     	;# 
  1141  0197                     	;# 
  1142  0199                     	;# 
  1143  0199                     	;# 
  1144  0199                     	;# 
  1145  019A                     	;# 
  1146  019A                     	;# 
  1147  019A                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019B                     	;# 
  1151  019B                     	;# 
  1152  019B                     	;# 
  1153  019C                     	;# 
  1154  019C                     	;# 
  1155  019C                     	;# 
  1156  019D                     	;# 
  1157  019D                     	;# 
  1158  019D                     	;# 
  1159  019E                     	;# 
  1160  019E                     	;# 
  1161  019E                     	;# 
  1162  019F                     	;# 
  1163  019F                     	;# 
  1164  019F                     	;# 
  1165  019F                     	;# 
  1166  019F                     	;# 
  1167  020C                     	;# 
  1168  020E                     	;# 
  1169  0211                     	;# 
  1170  0211                     	;# 
  1171  0212                     	;# 
  1172  0212                     	;# 
  1173  0213                     	;# 
  1174  0213                     	;# 
  1175  0214                     	;# 
  1176  0214                     	;# 
  1177  0215                     	;# 
  1178  0215                     	;# 
  1179  0215                     	;# 
  1180  0215                     	;# 
  1181  0216                     	;# 
  1182  0216                     	;# 
  1183  0217                     	;# 
  1184  0217                     	;# 
  1185  0219                     	;# 
  1186  021A                     	;# 
  1187  021B                     	;# 
  1188  021C                     	;# 
  1189  021D                     	;# 
  1190  021D                     	;# 
  1191  021E                     	;# 
  1192  021F                     	;# 
  1193  028C                     	;# 
  1194  028E                     	;# 
  1195  0291                     	;# 
  1196  0291                     	;# 
  1197  0292                     	;# 
  1198  0293                     	;# 
  1199  0294                     	;# 
  1200  0295                     	;# 
  1201  0295                     	;# 
  1202  0296                     	;# 
  1203  0297                     	;# 
  1204  0298                     	;# 
  1205  029F                     	;# 
  1206  030C                     	;# 
  1207  030E                     	;# 
  1208  0311                     	;# 
  1209  0311                     	;# 
  1210  0312                     	;# 
  1211  0313                     	;# 
  1212  0314                     	;# 
  1213  0315                     	;# 
  1214  0315                     	;# 
  1215  0316                     	;# 
  1216  0317                     	;# 
  1217  0318                     	;# 
  1218  038C                     	;# 
  1219  038E                     	;# 
  1220  0391                     	;# 
  1221  0392                     	;# 
  1222  0393                     	;# 
  1223  0397                     	;# 
  1224  0398                     	;# 
  1225  0399                     	;# 
  1226  039A                     	;# 
  1227  039C                     	;# 
  1228  039D                     	;# 
  1229  039E                     	;# 
  1230  039F                     	;# 
  1231  0411                     	;# 
  1232  0411                     	;# 
  1233  0412                     	;# 
  1234  0413                     	;# 
  1235  0414                     	;# 
  1236  0415                     	;# 
  1237  0416                     	;# 
  1238  0417                     	;# 
  1239  0418                     	;# 
  1240  0418                     	;# 
  1241  0419                     	;# 
  1242  041A                     	;# 
  1243  041B                     	;# 
  1244  041C                     	;# 
  1245  041D                     	;# 
  1246  041E                     	;# 
  1247  041F                     	;# 
  1248  0498                     	;# 
  1249  0498                     	;# 
  1250  0499                     	;# 
  1251  049A                     	;# 
  1252  049B                     	;# 
  1253  049B                     	;# 
  1254  049C                     	;# 
  1255  049D                     	;# 
  1256  049E                     	;# 
  1257  049F                     	;# 
  1258  0617                     	;# 
  1259  0618                     	;# 
  1260  0619                     	;# 
  1261  0619                     	;# 
  1262  061A                     	;# 
  1263  061B                     	;# 
  1264  061C                     	;# 
  1265  061C                     	;# 
  1266  061F                     	;# 
  1267  0691                     	;# 
  1268  0692                     	;# 
  1269  0693                     	;# 
  1270  0694                     	;# 
  1271  0695                     	;# 
  1272  0696                     	;# 
  1273  0697                     	;# 
  1274  0698                     	;# 
  1275  0699                     	;# 
  1276  0711                     	;# 
  1277  0712                     	;# 
  1278  0713                     	;# 
  1279  0714                     	;# 
  1280  0715                     	;# 
  1281  0716                     	;# 
  1282  0717                     	;# 
  1283  0718                     	;# 
  1284  0719                     	;# 
  1285  0891                     	;# 
  1286  0891                     	;# 
  1287  0891                     	;# 
  1288  0891                     	;# 
  1289  0891                     	;# 
  1290  0891                     	;# 
  1291  0892                     	;# 
  1292  0892                     	;# 
  1293  0892                     	;# 
  1294  0893                     	;# 
  1295  0893                     	;# 
  1296  0893                     	;# 
  1297  0893                     	;# 
  1298  0893                     	;# 
  1299  0893                     	;# 
  1300  0894                     	;# 
  1301  0894                     	;# 
  1302  0894                     	;# 
  1303  0895                     	;# 
  1304  0895                     	;# 
  1305  0895                     	;# 
  1306  0896                     	;# 
  1307  0896                     	;# 
  1308  0896                     	;# 
  1309  089B                     	;# 
  1310  0911                     	;# 
  1311  0912                     	;# 
  1312  0913                     	;# 
  1313  0914                     	;# 
  1314  0915                     	;# 
  1315  0916                     	;# 
  1316  0918                     	;# 
  1317  0919                     	;# 
  1318  091A                     	;# 
  1319  091B                     	;# 
  1320  091C                     	;# 
  1321  091D                     	;# 
  1322  091E                     	;# 
  1323  091F                     	;# 
  1324  0E0F                     	;# 
  1325  0E10                     	;# 
  1326  0E11                     	;# 
  1327  0E12                     	;# 
  1328  0E13                     	;# 
  1329  0E14                     	;# 
  1330  0E15                     	;# 
  1331  0E16                     	;# 
  1332  0E17                     	;# 
  1333  0E18                     	;# 
  1334  0E19                     	;# 
  1335  0E1A                     	;# 
  1336  0E1B                     	;# 
  1337  0E1C                     	;# 
  1338  0E1D                     	;# 
  1339  0E1E                     	;# 
  1340  0E1F                     	;# 
  1341  0E20                     	;# 
  1342  0E21                     	;# 
  1343  0E22                     	;# 
  1344  0E24                     	;# 
  1345  0E25                     	;# 
  1346  0E28                     	;# 
  1347  0E29                     	;# 
  1348  0E2A                     	;# 
  1349  0E2B                     	;# 
  1350  0E2C                     	;# 
  1351  0E2D                     	;# 
  1352  0E2E                     	;# 
  1353  0E2F                     	;# 
  1354  0E90                     	;# 
  1355  0E91                     	;# 
  1356  0E92                     	;# 
  1357  0E94                     	;# 
  1358  0E95                     	;# 
  1359  0EA0                     	;# 
  1360  0EA1                     	;# 
  1361  0EA2                     	;# 
  1362  0EA3                     	;# 
  1363  0EA4                     	;# 
  1364  0EA5                     	;# 
  1365  0F0F                     	;# 
  1366  0F10                     	;# 
  1367  0F11                     	;# 
  1368  0F12                     	;# 
  1369  0F13                     	;# 
  1370  0F14                     	;# 
  1371  0F15                     	;# 
  1372  0F16                     	;# 
  1373  0F17                     	;# 
  1374  0F18                     	;# 
  1375  0F19                     	;# 
  1376  0F1A                     	;# 
  1377  0F1B                     	;# 
  1378  0F1C                     	;# 
  1379  0F1D                     	;# 
  1380  0F1E                     	;# 
  1381  0F1F                     	;# 
  1382  0F20                     	;# 
  1383  0F21                     	;# 
  1384  0F22                     	;# 
  1385  0F23                     	;# 
  1386  0F24                     	;# 
  1387  0F25                     	;# 
  1388  0F26                     	;# 
  1389  0F27                     	;# 
  1390  0F28                     	;# 
  1391  0F29                     	;# 
  1392  0F2A                     	;# 
  1393  0F2B                     	;# 
  1394  0F2C                     	;# 
  1395  0F2D                     	;# 
  1396  0F2E                     	;# 
  1397  0F2F                     	;# 
  1398  0F30                     	;# 
  1399  0F31                     	;# 
  1400  0F32                     	;# 
  1401  0F33                     	;# 
  1402  0F34                     	;# 
  1403  0F35                     	;# 
  1404  0F36                     	;# 
  1405  0F37                     	;# 
  1406  0FE4                     	;# 
  1407  0FE5                     	;# 
  1408  0FE6                     	;# 
  1409  0FE7                     	;# 
  1410  0FE8                     	;# 
  1411  0FE9                     	;# 
  1412  0FEA                     	;# 
  1413  0FEB                     	;# 
  1414  0FED                     	;# 
  1415  0FEE                     	;# 
  1416  0FEF                     	;# 
  1417  0000                     	;# 
  1418  0001                     	;# 
  1419  0002                     	;# 
  1420  0003                     	;# 
  1421  0004                     	;# 
  1422  0005                     	;# 
  1423  0006                     	;# 
  1424  0007                     	;# 
  1425  0008                     	;# 
  1426  0009                     	;# 
  1427  000A                     	;# 
  1428  000B                     	;# 
  1429  000C                     	;# 
  1430  000E                     	;# 
  1431  0010                     	;# 
  1432  0011                     	;# 
  1433  0012                     	;# 
  1434  0013                     	;# 
  1435  0014                     	;# 
  1436  0015                     	;# 
  1437  0015                     	;# 
  1438  0016                     	;# 
  1439  0016                     	;# 
  1440  0017                     	;# 
  1441  0018                     	;# 
  1442  0019                     	;# 
  1443  0019                     	;# 
  1444  001A                     	;# 
  1445  001B                     	;# 
  1446  001C                     	;# 
  1447  001D                     	;# 
  1448  001E                     	;# 
  1449  001F                     	;# 
  1450  008C                     	;# 
  1451  008E                     	;# 
  1452  0090                     	;# 
  1453  0091                     	;# 
  1454  0092                     	;# 
  1455  0093                     	;# 
  1456  0094                     	;# 
  1457  0097                     	;# 
  1458  009B                     	;# 
  1459  009B                     	;# 
  1460  009C                     	;# 
  1461  009D                     	;# 
  1462  009E                     	;# 
  1463  009F                     	;# 
  1464  010C                     	;# 
  1465  010E                     	;# 
  1466  0111                     	;# 
  1467  0112                     	;# 
  1468  0113                     	;# 
  1469  0114                     	;# 
  1470  0115                     	;# 
  1471  0116                     	;# 
  1472  0117                     	;# 
  1473  0118                     	;# 
  1474  0119                     	;# 
  1475  018C                     	;# 
  1476  018E                     	;# 
  1477  0197                     	;# 
  1478  0199                     	;# 
  1479  0199                     	;# 
  1480  0199                     	;# 
  1481  019A                     	;# 
  1482  019A                     	;# 
  1483  019A                     	;# 
  1484  019B                     	;# 
  1485  019B                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019B                     	;# 
  1489  019C                     	;# 
  1490  019C                     	;# 
  1491  019C                     	;# 
  1492  019D                     	;# 
  1493  019D                     	;# 
  1494  019D                     	;# 
  1495  019E                     	;# 
  1496  019E                     	;# 
  1497  019E                     	;# 
  1498  019F                     	;# 
  1499  019F                     	;# 
  1500  019F                     	;# 
  1501  019F                     	;# 
  1502  019F                     	;# 
  1503  020C                     	;# 
  1504  020E                     	;# 
  1505  0211                     	;# 
  1506  0211                     	;# 
  1507  0212                     	;# 
  1508  0212                     	;# 
  1509  0213                     	;# 
  1510  0213                     	;# 
  1511  0214                     	;# 
  1512  0214                     	;# 
  1513  0215                     	;# 
  1514  0215                     	;# 
  1515  0215                     	;# 
  1516  0215                     	;# 
  1517  0216                     	;# 
  1518  0216                     	;# 
  1519  0217                     	;# 
  1520  0217                     	;# 
  1521  0219                     	;# 
  1522  021A                     	;# 
  1523  021B                     	;# 
  1524  021C                     	;# 
  1525  021D                     	;# 
  1526  021D                     	;# 
  1527  021E                     	;# 
  1528  021F                     	;# 
  1529  028C                     	;# 
  1530  028E                     	;# 
  1531  0291                     	;# 
  1532  0291                     	;# 
  1533  0292                     	;# 
  1534  0293                     	;# 
  1535  0294                     	;# 
  1536  0295                     	;# 
  1537  0295                     	;# 
  1538  0296                     	;# 
  1539  0297                     	;# 
  1540  0298                     	;# 
  1541  029F                     	;# 
  1542  030C                     	;# 
  1543  030E                     	;# 
  1544  0311                     	;# 
  1545  0311                     	;# 
  1546  0312                     	;# 
  1547  0313                     	;# 
  1548  0314                     	;# 
  1549  0315                     	;# 
  1550  0315                     	;# 
  1551  0316                     	;# 
  1552  0317                     	;# 
  1553  0318                     	;# 
  1554  038C                     	;# 
  1555  038E                     	;# 
  1556  0391                     	;# 
  1557  0392                     	;# 
  1558  0393                     	;# 
  1559  0397                     	;# 
  1560  0398                     	;# 
  1561  0399                     	;# 
  1562  039A                     	;# 
  1563  039C                     	;# 
  1564  039D                     	;# 
  1565  039E                     	;# 
  1566  039F                     	;# 
  1567  0411                     	;# 
  1568  0411                     	;# 
  1569  0412                     	;# 
  1570  0413                     	;# 
  1571  0414                     	;# 
  1572  0415                     	;# 
  1573  0416                     	;# 
  1574  0417                     	;# 
  1575  0418                     	;# 
  1576  0418                     	;# 
  1577  0419                     	;# 
  1578  041A                     	;# 
  1579  041B                     	;# 
  1580  041C                     	;# 
  1581  041D                     	;# 
  1582  041E                     	;# 
  1583  041F                     	;# 
  1584  0498                     	;# 
  1585  0498                     	;# 
  1586  0499                     	;# 
  1587  049A                     	;# 
  1588  049B                     	;# 
  1589  049B                     	;# 
  1590  049C                     	;# 
  1591  049D                     	;# 
  1592  049E                     	;# 
  1593  049F                     	;# 
  1594  0617                     	;# 
  1595  0618                     	;# 
  1596  0619                     	;# 
  1597  0619                     	;# 
  1598  061A                     	;# 
  1599  061B                     	;# 
  1600  061C                     	;# 
  1601  061C                     	;# 
  1602  061F                     	;# 
  1603  0691                     	;# 
  1604  0692                     	;# 
  1605  0693                     	;# 
  1606  0694                     	;# 
  1607  0695                     	;# 
  1608  0696                     	;# 
  1609  0697                     	;# 
  1610  0698                     	;# 
  1611  0699                     	;# 
  1612  0711                     	;# 
  1613  0712                     	;# 
  1614  0713                     	;# 
  1615  0714                     	;# 
  1616  0715                     	;# 
  1617  0716                     	;# 
  1618  0717                     	;# 
  1619  0718                     	;# 
  1620  0719                     	;# 
  1621  0891                     	;# 
  1622  0891                     	;# 
  1623  0891                     	;# 
  1624  0891                     	;# 
  1625  0891                     	;# 
  1626  0891                     	;# 
  1627  0892                     	;# 
  1628  0892                     	;# 
  1629  0892                     	;# 
  1630  0893                     	;# 
  1631  0893                     	;# 
  1632  0893                     	;# 
  1633  0893                     	;# 
  1634  0893                     	;# 
  1635  0893                     	;# 
  1636  0894                     	;# 
  1637  0894                     	;# 
  1638  0894                     	;# 
  1639  0895                     	;# 
  1640  0895                     	;# 
  1641  0895                     	;# 
  1642  0896                     	;# 
  1643  0896                     	;# 
  1644  0896                     	;# 
  1645  089B                     	;# 
  1646  0911                     	;# 
  1647  0912                     	;# 
  1648  0913                     	;# 
  1649  0914                     	;# 
  1650  0915                     	;# 
  1651  0916                     	;# 
  1652  0918                     	;# 
  1653  0919                     	;# 
  1654  091A                     	;# 
  1655  091B                     	;# 
  1656  091C                     	;# 
  1657  091D                     	;# 
  1658  091E                     	;# 
  1659  091F                     	;# 
  1660  0E0F                     	;# 
  1661  0E10                     	;# 
  1662  0E11                     	;# 
  1663  0E12                     	;# 
  1664  0E13                     	;# 
  1665  0E14                     	;# 
  1666  0E15                     	;# 
  1667  0E16                     	;# 
  1668  0E17                     	;# 
  1669  0E18                     	;# 
  1670  0E19                     	;# 
  1671  0E1A                     	;# 
  1672  0E1B                     	;# 
  1673  0E1C                     	;# 
  1674  0E1D                     	;# 
  1675  0E1E                     	;# 
  1676  0E1F                     	;# 
  1677  0E20                     	;# 
  1678  0E21                     	;# 
  1679  0E22                     	;# 
  1680  0E24                     	;# 
  1681  0E25                     	;# 
  1682  0E28                     	;# 
  1683  0E29                     	;# 
  1684  0E2A                     	;# 
  1685  0E2B                     	;# 
  1686  0E2C                     	;# 
  1687  0E2D                     	;# 
  1688  0E2E                     	;# 
  1689  0E2F                     	;# 
  1690  0E90                     	;# 
  1691  0E91                     	;# 
  1692  0E92                     	;# 
  1693  0E94                     	;# 
  1694  0E95                     	;# 
  1695  0EA0                     	;# 
  1696  0EA1                     	;# 
  1697  0EA2                     	;# 
  1698  0EA3                     	;# 
  1699  0EA4                     	;# 
  1700  0EA5                     	;# 
  1701  0F0F                     	;# 
  1702  0F10                     	;# 
  1703  0F11                     	;# 
  1704  0F12                     	;# 
  1705  0F13                     	;# 
  1706  0F14                     	;# 
  1707  0F15                     	;# 
  1708  0F16                     	;# 
  1709  0F17                     	;# 
  1710  0F18                     	;# 
  1711  0F19                     	;# 
  1712  0F1A                     	;# 
  1713  0F1B                     	;# 
  1714  0F1C                     	;# 
  1715  0F1D                     	;# 
  1716  0F1E                     	;# 
  1717  0F1F                     	;# 
  1718  0F20                     	;# 
  1719  0F21                     	;# 
  1720  0F22                     	;# 
  1721  0F23                     	;# 
  1722  0F24                     	;# 
  1723  0F25                     	;# 
  1724  0F26                     	;# 
  1725  0F27                     	;# 
  1726  0F28                     	;# 
  1727  0F29                     	;# 
  1728  0F2A                     	;# 
  1729  0F2B                     	;# 
  1730  0F2C                     	;# 
  1731  0F2D                     	;# 
  1732  0F2E                     	;# 
  1733  0F2F                     	;# 
  1734  0F30                     	;# 
  1735  0F31                     	;# 
  1736  0F32                     	;# 
  1737  0F33                     	;# 
  1738  0F34                     	;# 
  1739  0F35                     	;# 
  1740  0F36                     	;# 
  1741  0F37                     	;# 
  1742  0FE4                     	;# 
  1743  0FE5                     	;# 
  1744  0FE6                     	;# 
  1745  0FE7                     	;# 
  1746  0FE8                     	;# 
  1747  0FE9                     	;# 
  1748  0FEA                     	;# 
  1749  0FEB                     	;# 
  1750  0FED                     	;# 
  1751  0FEE                     	;# 
  1752  0FEF                     	;# 
  1753  0000                     	;# 
  1754  0001                     	;# 
  1755  0002                     	;# 
  1756  0003                     	;# 
  1757  0004                     	;# 
  1758  0005                     	;# 
  1759  0006                     	;# 
  1760  0007                     	;# 
  1761  0008                     	;# 
  1762  0009                     	;# 
  1763  000A                     	;# 
  1764  000B                     	;# 
  1765  000C                     	;# 
  1766  000E                     	;# 
  1767  0010                     	;# 
  1768  0011                     	;# 
  1769  0012                     	;# 
  1770  0013                     	;# 
  1771  0014                     	;# 
  1772  0015                     	;# 
  1773  0015                     	;# 
  1774  0016                     	;# 
  1775  0016                     	;# 
  1776  0017                     	;# 
  1777  0018                     	;# 
  1778  0019                     	;# 
  1779  0019                     	;# 
  1780  001A                     	;# 
  1781  001B                     	;# 
  1782  001C                     	;# 
  1783  001D                     	;# 
  1784  001E                     	;# 
  1785  001F                     	;# 
  1786  008C                     	;# 
  1787  008E                     	;# 
  1788  0090                     	;# 
  1789  0091                     	;# 
  1790  0092                     	;# 
  1791  0093                     	;# 
  1792  0094                     	;# 
  1793  0097                     	;# 
  1794  009B                     	;# 
  1795  009B                     	;# 
  1796  009C                     	;# 
  1797  009D                     	;# 
  1798  009E                     	;# 
  1799  009F                     	;# 
  1800  010C                     	;# 
  1801  010E                     	;# 
  1802  0111                     	;# 
  1803  0112                     	;# 
  1804  0113                     	;# 
  1805  0114                     	;# 
  1806  0115                     	;# 
  1807  0116                     	;# 
  1808  0117                     	;# 
  1809  0118                     	;# 
  1810  0119                     	;# 
  1811  018C                     	;# 
  1812  018E                     	;# 
  1813  0197                     	;# 
  1814  0199                     	;# 
  1815  0199                     	;# 
  1816  0199                     	;# 
  1817  019A                     	;# 
  1818  019A                     	;# 
  1819  019A                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019B                     	;# 
  1825  019C                     	;# 
  1826  019C                     	;# 
  1827  019C                     	;# 
  1828  019D                     	;# 
  1829  019D                     	;# 
  1830  019D                     	;# 
  1831  019E                     	;# 
  1832  019E                     	;# 
  1833  019E                     	;# 
  1834  019F                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  019F                     	;# 
  1839  020C                     	;# 
  1840  020E                     	;# 
  1841  0211                     	;# 
  1842  0211                     	;# 
  1843  0212                     	;# 
  1844  0212                     	;# 
  1845  0213                     	;# 
  1846  0213                     	;# 
  1847  0214                     	;# 
  1848  0214                     	;# 
  1849  0215                     	;# 
  1850  0215                     	;# 
  1851  0215                     	;# 
  1852  0215                     	;# 
  1853  0216                     	;# 
  1854  0216                     	;# 
  1855  0217                     	;# 
  1856  0217                     	;# 
  1857  0219                     	;# 
  1858  021A                     	;# 
  1859  021B                     	;# 
  1860  021C                     	;# 
  1861  021D                     	;# 
  1862  021D                     	;# 
  1863  021E                     	;# 
  1864  021F                     	;# 
  1865  028C                     	;# 
  1866  028E                     	;# 
  1867  0291                     	;# 
  1868  0291                     	;# 
  1869  0292                     	;# 
  1870  0293                     	;# 
  1871  0294                     	;# 
  1872  0295                     	;# 
  1873  0295                     	;# 
  1874  0296                     	;# 
  1875  0297                     	;# 
  1876  0298                     	;# 
  1877  029F                     	;# 
  1878  030C                     	;# 
  1879  030E                     	;# 
  1880  0311                     	;# 
  1881  0311                     	;# 
  1882  0312                     	;# 
  1883  0313                     	;# 
  1884  0314                     	;# 
  1885  0315                     	;# 
  1886  0315                     	;# 
  1887  0316                     	;# 
  1888  0317                     	;# 
  1889  0318                     	;# 
  1890  038C                     	;# 
  1891  038E                     	;# 
  1892  0391                     	;# 
  1893  0392                     	;# 
  1894  0393                     	;# 
  1895  0397                     	;# 
  1896  0398                     	;# 
  1897  0399                     	;# 
  1898  039A                     	;# 
  1899  039C                     	;# 
  1900  039D                     	;# 
  1901  039E                     	;# 
  1902  039F                     	;# 
  1903  0411                     	;# 
  1904  0411                     	;# 
  1905  0412                     	;# 
  1906  0413                     	;# 
  1907  0414                     	;# 
  1908  0415                     	;# 
  1909  0416                     	;# 
  1910  0417                     	;# 
  1911  0418                     	;# 
  1912  0418                     	;# 
  1913  0419                     	;# 
  1914  041A                     	;# 
  1915  041B                     	;# 
  1916  041C                     	;# 
  1917  041D                     	;# 
  1918  041E                     	;# 
  1919  041F                     	;# 
  1920  0498                     	;# 
  1921  0498                     	;# 
  1922  0499                     	;# 
  1923  049A                     	;# 
  1924  049B                     	;# 
  1925  049B                     	;# 
  1926  049C                     	;# 
  1927  049D                     	;# 
  1928  049E                     	;# 
  1929  049F                     	;# 
  1930  0617                     	;# 
  1931  0618                     	;# 
  1932  0619                     	;# 
  1933  0619                     	;# 
  1934  061A                     	;# 
  1935  061B                     	;# 
  1936  061C                     	;# 
  1937  061C                     	;# 
  1938  061F                     	;# 
  1939  0691                     	;# 
  1940  0692                     	;# 
  1941  0693                     	;# 
  1942  0694                     	;# 
  1943  0695                     	;# 
  1944  0696                     	;# 
  1945  0697                     	;# 
  1946  0698                     	;# 
  1947  0699                     	;# 
  1948  0711                     	;# 
  1949  0712                     	;# 
  1950  0713                     	;# 
  1951  0714                     	;# 
  1952  0715                     	;# 
  1953  0716                     	;# 
  1954  0717                     	;# 
  1955  0718                     	;# 
  1956  0719                     	;# 
  1957  0891                     	;# 
  1958  0891                     	;# 
  1959  0891                     	;# 
  1960  0891                     	;# 
  1961  0891                     	;# 
  1962  0891                     	;# 
  1963  0892                     	;# 
  1964  0892                     	;# 
  1965  0892                     	;# 
  1966  0893                     	;# 
  1967  0893                     	;# 
  1968  0893                     	;# 
  1969  0893                     	;# 
  1970  0893                     	;# 
  1971  0893                     	;# 
  1972  0894                     	;# 
  1973  0894                     	;# 
  1974  0894                     	;# 
  1975  0895                     	;# 
  1976  0895                     	;# 
  1977  0895                     	;# 
  1978  0896                     	;# 
  1979  0896                     	;# 
  1980  0896                     	;# 
  1981  089B                     	;# 
  1982  0911                     	;# 
  1983  0912                     	;# 
  1984  0913                     	;# 
  1985  0914                     	;# 
  1986  0915                     	;# 
  1987  0916                     	;# 
  1988  0918                     	;# 
  1989  0919                     	;# 
  1990  091A                     	;# 
  1991  091B                     	;# 
  1992  091C                     	;# 
  1993  091D                     	;# 
  1994  091E                     	;# 
  1995  091F                     	;# 
  1996  0E0F                     	;# 
  1997  0E10                     	;# 
  1998  0E11                     	;# 
  1999  0E12                     	;# 
  2000  0E13                     	;# 
  2001  0E14                     	;# 
  2002  0E15                     	;# 
  2003  0E16                     	;# 
  2004  0E17                     	;# 
  2005  0E18                     	;# 
  2006  0E19                     	;# 
  2007  0E1A                     	;# 
  2008  0E1B                     	;# 
  2009  0E1C                     	;# 
  2010  0E1D                     	;# 
  2011  0E1E                     	;# 
  2012  0E1F                     	;# 
  2013  0E20                     	;# 
  2014  0E21                     	;# 
  2015  0E22                     	;# 
  2016  0E24                     	;# 
  2017  0E25                     	;# 
  2018  0E28                     	;# 
  2019  0E29                     	;# 
  2020  0E2A                     	;# 
  2021  0E2B                     	;# 
  2022  0E2C                     	;# 
  2023  0E2D                     	;# 
  2024  0E2E                     	;# 
  2025  0E2F                     	;# 
  2026  0E90                     	;# 
  2027  0E91                     	;# 
  2028  0E92                     	;# 
  2029  0E94                     	;# 
  2030  0E95                     	;# 
  2031  0EA0                     	;# 
  2032  0EA1                     	;# 
  2033  0EA2                     	;# 
  2034  0EA3                     	;# 
  2035  0EA4                     	;# 
  2036  0EA5                     	;# 
  2037  0F0F                     	;# 
  2038  0F10                     	;# 
  2039  0F11                     	;# 
  2040  0F12                     	;# 
  2041  0F13                     	;# 
  2042  0F14                     	;# 
  2043  0F15                     	;# 
  2044  0F16                     	;# 
  2045  0F17                     	;# 
  2046  0F18                     	;# 
  2047  0F19                     	;# 
  2048  0F1A                     	;# 
  2049  0F1B                     	;# 
  2050  0F1C                     	;# 
  2051  0F1D                     	;# 
  2052  0F1E                     	;# 
  2053  0F1F                     	;# 
  2054  0F20                     	;# 
  2055  0F21                     	;# 
  2056  0F22                     	;# 
  2057  0F23                     	;# 
  2058  0F24                     	;# 
  2059  0F25                     	;# 
  2060  0F26                     	;# 
  2061  0F27                     	;# 
  2062  0F28                     	;# 
  2063  0F29                     	;# 
  2064  0F2A                     	;# 
  2065  0F2B                     	;# 
  2066  0F2C                     	;# 
  2067  0F2D                     	;# 
  2068  0F2E                     	;# 
  2069  0F2F                     	;# 
  2070  0F30                     	;# 
  2071  0F31                     	;# 
  2072  0F32                     	;# 
  2073  0F33                     	;# 
  2074  0F34                     	;# 
  2075  0F35                     	;# 
  2076  0F36                     	;# 
  2077  0F37                     	;# 
  2078  0FE4                     	;# 
  2079  0FE5                     	;# 
  2080  0FE6                     	;# 
  2081  0FE7                     	;# 
  2082  0FE8                     	;# 
  2083  0FE9                     	;# 
  2084  0FEA                     	;# 
  2085  0FEB                     	;# 
  2086  0FED                     	;# 
  2087  0FEE                     	;# 
  2088  0FEF                     	;# 
  2089  0000                     	;# 
  2090  0001                     	;# 
  2091  0002                     	;# 
  2092  0003                     	;# 
  2093  0004                     	;# 
  2094  0005                     	;# 
  2095  0006                     	;# 
  2096  0007                     	;# 
  2097  0008                     	;# 
  2098  0009                     	;# 
  2099  000A                     	;# 
  2100  000B                     	;# 
  2101  000C                     	;# 
  2102  000E                     	;# 
  2103  0010                     	;# 
  2104  0011                     	;# 
  2105  0012                     	;# 
  2106  0013                     	;# 
  2107  0014                     	;# 
  2108  0015                     	;# 
  2109  0015                     	;# 
  2110  0016                     	;# 
  2111  0016                     	;# 
  2112  0017                     	;# 
  2113  0018                     	;# 
  2114  0019                     	;# 
  2115  0019                     	;# 
  2116  001A                     	;# 
  2117  001B                     	;# 
  2118  001C                     	;# 
  2119  001D                     	;# 
  2120  001E                     	;# 
  2121  001F                     	;# 
  2122  008C                     	;# 
  2123  008E                     	;# 
  2124  0090                     	;# 
  2125  0091                     	;# 
  2126  0092                     	;# 
  2127  0093                     	;# 
  2128  0094                     	;# 
  2129  0097                     	;# 
  2130  009B                     	;# 
  2131  009B                     	;# 
  2132  009C                     	;# 
  2133  009D                     	;# 
  2134  009E                     	;# 
  2135  009F                     	;# 
  2136  010C                     	;# 
  2137  010E                     	;# 
  2138  0111                     	;# 
  2139  0112                     	;# 
  2140  0113                     	;# 
  2141  0114                     	;# 
  2142  0115                     	;# 
  2143  0116                     	;# 
  2144  0117                     	;# 
  2145  0118                     	;# 
  2146  0119                     	;# 
  2147  018C                     	;# 
  2148  018E                     	;# 
  2149  0197                     	;# 
  2150  0199                     	;# 
  2151  0199                     	;# 
  2152  0199                     	;# 
  2153  019A                     	;# 
  2154  019A                     	;# 
  2155  019A                     	;# 
  2156  019B                     	;# 
  2157  019B                     	;# 
  2158  019B                     	;# 
  2159  019B                     	;# 
  2160  019B                     	;# 
  2161  019C                     	;# 
  2162  019C                     	;# 
  2163  019C                     	;# 
  2164  019D                     	;# 
  2165  019D                     	;# 
  2166  019D                     	;# 
  2167  019E                     	;# 
  2168  019E                     	;# 
  2169  019E                     	;# 
  2170  019F                     	;# 
  2171  019F                     	;# 
  2172  019F                     	;# 
  2173  019F                     	;# 
  2174  019F                     	;# 
  2175  020C                     	;# 
  2176  020E                     	;# 
  2177  0211                     	;# 
  2178  0211                     	;# 
  2179  0212                     	;# 
  2180  0212                     	;# 
  2181  0213                     	;# 
  2182  0213                     	;# 
  2183  0214                     	;# 
  2184  0214                     	;# 
  2185  0215                     	;# 
  2186  0215                     	;# 
  2187  0215                     	;# 
  2188  0215                     	;# 
  2189  0216                     	;# 
  2190  0216                     	;# 
  2191  0217                     	;# 
  2192  0217                     	;# 
  2193  0219                     	;# 
  2194  021A                     	;# 
  2195  021B                     	;# 
  2196  021C                     	;# 
  2197  021D                     	;# 
  2198  021D                     	;# 
  2199  021E                     	;# 
  2200  021F                     	;# 
  2201  028C                     	;# 
  2202  028E                     	;# 
  2203  0291                     	;# 
  2204  0291                     	;# 
  2205  0292                     	;# 
  2206  0293                     	;# 
  2207  0294                     	;# 
  2208  0295                     	;# 
  2209  0295                     	;# 
  2210  0296                     	;# 
  2211  0297                     	;# 
  2212  0298                     	;# 
  2213  029F                     	;# 
  2214  030C                     	;# 
  2215  030E                     	;# 
  2216  0311                     	;# 
  2217  0311                     	;# 
  2218  0312                     	;# 
  2219  0313                     	;# 
  2220  0314                     	;# 
  2221  0315                     	;# 
  2222  0315                     	;# 
  2223  0316                     	;# 
  2224  0317                     	;# 
  2225  0318                     	;# 
  2226  038C                     	;# 
  2227  038E                     	;# 
  2228  0391                     	;# 
  2229  0392                     	;# 
  2230  0393                     	;# 
  2231  0397                     	;# 
  2232  0398                     	;# 
  2233  0399                     	;# 
  2234  039A                     	;# 
  2235  039C                     	;# 
  2236  039D                     	;# 
  2237  039E                     	;# 
  2238  039F                     	;# 
  2239  0411                     	;# 
  2240  0411                     	;# 
  2241  0412                     	;# 
  2242  0413                     	;# 
  2243  0414                     	;# 
  2244  0415                     	;# 
  2245  0416                     	;# 
  2246  0417                     	;# 
  2247  0418                     	;# 
  2248  0418                     	;# 
  2249  0419                     	;# 
  2250  041A                     	;# 
  2251  041B                     	;# 
  2252  041C                     	;# 
  2253  041D                     	;# 
  2254  041E                     	;# 
  2255  041F                     	;# 
  2256  0498                     	;# 
  2257  0498                     	;# 
  2258  0499                     	;# 
  2259  049A                     	;# 
  2260  049B                     	;# 
  2261  049B                     	;# 
  2262  049C                     	;# 
  2263  049D                     	;# 
  2264  049E                     	;# 
  2265  049F                     	;# 
  2266  0617                     	;# 
  2267  0618                     	;# 
  2268  0619                     	;# 
  2269  0619                     	;# 
  2270  061A                     	;# 
  2271  061B                     	;# 
  2272  061C                     	;# 
  2273  061C                     	;# 
  2274  061F                     	;# 
  2275  0691                     	;# 
  2276  0692                     	;# 
  2277  0693                     	;# 
  2278  0694                     	;# 
  2279  0695                     	;# 
  2280  0696                     	;# 
  2281  0697                     	;# 
  2282  0698                     	;# 
  2283  0699                     	;# 
  2284  0711                     	;# 
  2285  0712                     	;# 
  2286  0713                     	;# 
  2287  0714                     	;# 
  2288  0715                     	;# 
  2289  0716                     	;# 
  2290  0717                     	;# 
  2291  0718                     	;# 
  2292  0719                     	;# 
  2293  0891                     	;# 
  2294  0891                     	;# 
  2295  0891                     	;# 
  2296  0891                     	;# 
  2297  0891                     	;# 
  2298  0891                     	;# 
  2299  0892                     	;# 
  2300  0892                     	;# 
  2301  0892                     	;# 
  2302  0893                     	;# 
  2303  0893                     	;# 
  2304  0893                     	;# 
  2305  0893                     	;# 
  2306  0893                     	;# 
  2307  0893                     	;# 
  2308  0894                     	;# 
  2309  0894                     	;# 
  2310  0894                     	;# 
  2311  0895                     	;# 
  2312  0895                     	;# 
  2313  0895                     	;# 
  2314  0896                     	;# 
  2315  0896                     	;# 
  2316  0896                     	;# 
  2317  089B                     	;# 
  2318  0911                     	;# 
  2319  0912                     	;# 
  2320  0913                     	;# 
  2321  0914                     	;# 
  2322  0915                     	;# 
  2323  0916                     	;# 
  2324  0918                     	;# 
  2325  0919                     	;# 
  2326  091A                     	;# 
  2327  091B                     	;# 
  2328  091C                     	;# 
  2329  091D                     	;# 
  2330  091E                     	;# 
  2331  091F                     	;# 
  2332  0E0F                     	;# 
  2333  0E10                     	;# 
  2334  0E11                     	;# 
  2335  0E12                     	;# 
  2336  0E13                     	;# 
  2337  0E14                     	;# 
  2338  0E15                     	;# 
  2339  0E16                     	;# 
  2340  0E17                     	;# 
  2341  0E18                     	;# 
  2342  0E19                     	;# 
  2343  0E1A                     	;# 
  2344  0E1B                     	;# 
  2345  0E1C                     	;# 
  2346  0E1D                     	;# 
  2347  0E1E                     	;# 
  2348  0E1F                     	;# 
  2349  0E20                     	;# 
  2350  0E21                     	;# 
  2351  0E22                     	;# 
  2352  0E24                     	;# 
  2353  0E25                     	;# 
  2354  0E28                     	;# 
  2355  0E29                     	;# 
  2356  0E2A                     	;# 
  2357  0E2B                     	;# 
  2358  0E2C                     	;# 
  2359  0E2D                     	;# 
  2360  0E2E                     	;# 
  2361  0E2F                     	;# 
  2362  0E90                     	;# 
  2363  0E91                     	;# 
  2364  0E92                     	;# 
  2365  0E94                     	;# 
  2366  0E95                     	;# 
  2367  0EA0                     	;# 
  2368  0EA1                     	;# 
  2369  0EA2                     	;# 
  2370  0EA3                     	;# 
  2371  0EA4                     	;# 
  2372  0EA5                     	;# 
  2373  0F0F                     	;# 
  2374  0F10                     	;# 
  2375  0F11                     	;# 
  2376  0F12                     	;# 
  2377  0F13                     	;# 
  2378  0F14                     	;# 
  2379  0F15                     	;# 
  2380  0F16                     	;# 
  2381  0F17                     	;# 
  2382  0F18                     	;# 
  2383  0F19                     	;# 
  2384  0F1A                     	;# 
  2385  0F1B                     	;# 
  2386  0F1C                     	;# 
  2387  0F1D                     	;# 
  2388  0F1E                     	;# 
  2389  0F1F                     	;# 
  2390  0F20                     	;# 
  2391  0F21                     	;# 
  2392  0F22                     	;# 
  2393  0F23                     	;# 
  2394  0F24                     	;# 
  2395  0F25                     	;# 
  2396  0F26                     	;# 
  2397  0F27                     	;# 
  2398  0F28                     	;# 
  2399  0F29                     	;# 
  2400  0F2A                     	;# 
  2401  0F2B                     	;# 
  2402  0F2C                     	;# 
  2403  0F2D                     	;# 
  2404  0F2E                     	;# 
  2405  0F2F                     	;# 
  2406  0F30                     	;# 
  2407  0F31                     	;# 
  2408  0F32                     	;# 
  2409  0F33                     	;# 
  2410  0F34                     	;# 
  2411  0F35                     	;# 
  2412  0F36                     	;# 
  2413  0F37                     	;# 
  2414  0FE4                     	;# 
  2415  0FE5                     	;# 
  2416  0FE6                     	;# 
  2417  0FE7                     	;# 
  2418  0FE8                     	;# 
  2419  0FE9                     	;# 
  2420  0FEA                     	;# 
  2421  0FEB                     	;# 
  2422  0FED                     	;# 
  2423  0FEE                     	;# 
  2424  0FEF                     	;# 
  2425                           
  2426 ;; Function _EUSART_is_tx_ready is unused but had its address taken
  2427  0000                     
  2428 ;; Function _EUSART_is_rx_ready is unused but had its address taken
  2429  0000                     
  2430 ;; Function _EUSART_is_tx_done is unused but had its address taken
  2431  0000                     
  2432 ;; Function _EUSART_Read is unused but had its address taken
  2433  0000                     
  2434                           	psect	stringtext1
  2435  041E                     __pstringtext1:
  2436  041E                     _uart:
  2437  041E  3400               	retlw	0
  2438  041F  3400               	retlw	0
  2439  0420  348E               	retlw	low _EUSART_Write
  2440  0421  3403               	retlw	high _EUSART_Write
  2441  0422  3400               	retlw	0
  2442  0423  3400               	retlw	0
  2443  0424  3400               	retlw	0
  2444  0425  3400               	retlw	0
  2445  0426  3460               	retlw	low _EUSART_SetTxInterruptHandler
  2446  0427  3404               	retlw	high _EUSART_SetTxInterruptHandler
  2447  0428  3455               	retlw	low _EUSART_Receive_ISR
  2448  0429  3403               	retlw	high _EUSART_Receive_ISR
  2449  042A  3466               	retlw	low _EUSART_SetRxInterruptHandler
  2450  042B  3404               	retlw	high _EUSART_SetRxInterruptHandler
  2451  042C  3400               	retlw	0
  2452  042D  3400               	retlw	0
  2453  042E  34DB               	retlw	low _EUSART_Transmit_ISR
  2454  042F  3403               	retlw	high _EUSART_Transmit_ISR
  2455  0430  3416               	retlw	low _EUSART_Initialize
  2456  0431  3403               	retlw	high _EUSART_Initialize
  2457  0432                     __end_of_uart:
  2458                           
  2459                           	psect	stringtext2
  2460  0453                     __pstringtext2:
  2461  0453                     main@header_g:
  2462  0453  3424               	retlw	36
  2463  0454  3447               	retlw	71
  2464  0455  344E               	retlw	78
  2465  0456  3447               	retlw	71
  2466  0457  3447               	retlw	71
  2467  0458  3441               	retlw	65
  2468  0459  3400               	retlw	0
  2469  045A                     __end_ofmain@header_g:
  2470                           
  2471                           	psect	nvBANK0
  2472  002E                     __pnvBANK0:
  2473  002E                     _eusartTxBufferRemaining:
  2474  002E                     	ds	1
  2475                           
  2476                           	psect	nvBANK1
  2477  00E3                     __pnvBANK1:
  2478  00E3                     _EUSART_ErrorHandler:
  2479  00E3                     	ds	2
  2480  00E5                     _EUSART_OverrunErrorHandler:
  2481  00E5                     	ds	2
  2482  00E7                     _EUSART_FramingErrorHandler:
  2483  00E7                     	ds	2
  2484  00E9                     _EUSART_RxDefaultInterruptHandler:
  2485  00E9                     	ds	2
  2486  00EB                     _EUSART_TxDefaultInterruptHandler:
  2487  00EB                     	ds	2
  2488  0011                     _PIR1bits	set	17
  2489  000B                     _INTCONbits	set	11
  2490  0091                     _PIE1bits	set	145
  2491  0097                     _WDTCON	set	151
  2492  008E                     _TRISC	set	142
  2493  008C                     _TRISA	set	140
  2494  010E                     _LATC	set	270
  2495  010C                     _LATA	set	268
  2496  0199                     _RC1REG	set	409
  2497  019D                     _RC1STAbits	set	413
  2498  019A                     _TX1REG	set	410
  2499  019E                     _TX1STAbits	set	414
  2500  019C                     _SP1BRGH	set	412
  2501  019B                     _SP1BRGL	set	411
  2502  019E                     _TX1STA	set	414
  2503  019D                     _RC1STA	set	413
  2504  019F                     _BAUD1CON	set	415
  2505  018C                     _ANSELA	set	396
  2506  018E                     _ANSELC	set	398
  2507  020E                     _WPUC	set	526
  2508  020C                     _WPUA	set	524
  2509  028E                     _ODCONC	set	654
  2510  028C                     _ODCONA	set	652
  2511  030E                     _SLRCONC	set	782
  2512  030C                     _SLRCONA	set	780
  2513  038E                     _INLVLC	set	910
  2514  038C                     _INLVLA	set	908
  2515  0916                     _PMD5	set	2326
  2516  0915                     _PMD4	set	2325
  2517  0914                     _PMD3	set	2324
  2518  0913                     _PMD2	set	2323
  2519  0912                     _PMD1	set	2322
  2520  0911                     _PMD0	set	2321
  2521  091E                     _OSCTUNE	set	2334
  2522  091F                     _OSCFRQ	set	2335
  2523  091D                     _OSCEN	set	2333
  2524  091B                     _OSCCON3	set	2331
  2525  0919                     _OSCCON1	set	2329
  2526  0E24                     _RXPPS	set	3620
  2527  0EA4                     _RC4PPS	set	3748
  2528                           
  2529                           	psect	cinit
  2530  0030                     start_initialization:	
  2531                           ; #config settings
  2532                           
  2533  0030                     __initialization:
  2534                           
  2535                           ; Clear objects allocated to COMMON
  2536  0030  3070               	movlw	low __pbssCOMMON
  2537  0031  0084               	movwf	4
  2538  0032  3000               	movlw	high __pbssCOMMON
  2539  0033  0085               	movwf	5
  2540  0034  3008               	movlw	8
  2541  0035  3184  245A  3180   	fcall	clear_ram0
  2542                           
  2543                           ; Clear objects allocated to BANK0
  2544  0038  3020               	movlw	low __pbssBANK0
  2545  0039  0084               	movwf	4
  2546  003A  3000               	movlw	high __pbssBANK0
  2547  003B  0085               	movwf	5
  2548  003C  300C               	movlw	12
  2549  003D  3184  245A  3180   	fcall	clear_ram0
  2550  0040                     end_of_initialization:	
  2551                           ;End of C runtime variable initialization code
  2552                           
  2553  0040                     __end_of__initialization:
  2554  0040  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2555  0041  0020               	movlb	0
  2556  0042  3180  2844         	ljmp	_main	;jump to C main() function
  2557                           
  2558                           	psect	bssCOMMON
  2559  0070                     __pbssCOMMON:
  2560  0070                     _eusartRxCount:
  2561  0070                     	ds	1
  2562  0071                     _eusartRxStatusBuffer:
  2563  0071                     	ds	1
  2564  0072                     _eusartRxBuffer:
  2565  0072                     	ds	1
  2566  0073                     _eusartRxTail:
  2567  0073                     	ds	1
  2568  0074                     _eusartRxHead:
  2569  0074                     	ds	1
  2570  0075                     _eusartTxTail:
  2571  0075                     	ds	1
  2572  0076                     _eusartTxHead:
  2573  0076                     	ds	1
  2574  0077                     _parserFlag:
  2575  0077                     	ds	1
  2576                           
  2577                           	psect	bssBANK0
  2578  0020                     __pbssBANK0:
  2579  0020                     _eusartTxBuffer:
  2580  0020                     	ds	8
  2581  0028                     _eusartRxLastError:
  2582  0028                     	ds	1
  2583  0029                     _rxData:
  2584  0029                     	ds	1
  2585  002A                     _dollarFlag:
  2586  002A                     	ds	1
  2587  002B                     _uartFlag:
  2588  002B                     	ds	1
  2589                           
  2590                           	psect	clrtext
  2591  045A                     clear_ram0:	
  2592                           ;	Called with FSR0 containing the base address, and
  2593                           ;	WREG with the size to clear
  2594                           
  2595  045A  0064               	clrwdt	;clear the watchdog before getting into this loop
  2596  045B                     clrloop0:
  2597  045B  0180               	clrf	0	;clear RAM location pointed to by FSR
  2598  045C  3101               	addfsr 0,1
  2599  045D  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2600  045E  2C5B               	goto	clrloop0	;have we reached the end yet?
  2601  045F  3400               	retlw	0	;all done for this memory range, return
  2602                           
  2603                           	psect	cstackBANK1
  2604  00A0                     __pcstackBANK1:
  2605  00A0                     main@rx_gps:
  2606                           
  2607                           ; 6 bytes @ 0x0
  2608  00A0                     	ds	6
  2609  00A6                     main@rx_time:
  2610                           
  2611                           ; 9 bytes @ 0x6
  2612  00A6                     	ds	9
  2613  00AF                     main@rx_lat:
  2614                           
  2615                           ; 9 bytes @ 0xF
  2616  00AF                     	ds	9
  2617  00B8                     main@rx_long:
  2618                           
  2619                           ; 10 bytes @ 0x18
  2620  00B8                     	ds	10
  2621  00C2                     main@i:
  2622                           
  2623                           ; 2 bytes @ 0x22
  2624  00C2                     	ds	2
  2625  00C4                     main@i_507:
  2626                           
  2627                           ; 2 bytes @ 0x24
  2628  00C4                     	ds	2
  2629  00C6                     main@i_508:
  2630                           
  2631                           ; 2 bytes @ 0x26
  2632  00C6                     	ds	2
  2633  00C8                     main@i_509:
  2634                           
  2635                           ; 2 bytes @ 0x28
  2636  00C8                     	ds	2
  2637  00CA                     main@i_510:
  2638                           
  2639                           ; 2 bytes @ 0x2A
  2640  00CA                     	ds	2
  2641  00CC                     main@i_511:
  2642                           
  2643                           ; 2 bytes @ 0x2C
  2644  00CC                     	ds	2
  2645  00CE                     main@nsSize:
  2646                           
  2647                           ; 1 bytes @ 0x2E
  2648  00CE                     	ds	1
  2649  00CF                     main@ewSize:
  2650                           
  2651                           ; 1 bytes @ 0x2F
  2652  00CF                     	ds	1
  2653  00D0                     main@rx_ns:
  2654                           
  2655                           ; 1 bytes @ 0x30
  2656  00D0                     	ds	1
  2657  00D1                     main@rx_ew:
  2658                           
  2659                           ; 1 bytes @ 0x31
  2660  00D1                     	ds	1
  2661  00D2                     main@cpos:
  2662                           
  2663                           ; 1 bytes @ 0x32
  2664  00D2                     	ds	1
  2665  00D3                     main@g_ok:
  2666                           
  2667                           ; 1 bytes @ 0x33
  2668  00D3                     	ds	1
  2669  00D4                     main@time_go:
  2670                           
  2671                           ; 1 bytes @ 0x34
  2672  00D4                     	ds	1
  2673  00D5                     main@lat_go:
  2674                           
  2675                           ; 1 bytes @ 0x35
  2676  00D5                     	ds	1
  2677  00D6                     main@long_go:
  2678                           
  2679                           ; 1 bytes @ 0x36
  2680  00D6                     	ds	1
  2681  00D7                     main@ns_go:
  2682                           
  2683                           ; 1 bytes @ 0x37
  2684  00D7                     	ds	1
  2685  00D8                     main@ew_go:
  2686                           
  2687                           ; 1 bytes @ 0x38
  2688  00D8                     	ds	1
  2689  00D9                     main@gnggaSize:
  2690                           
  2691                           ; 1 bytes @ 0x39
  2692  00D9                     	ds	1
  2693  00DA                     main@nspos:
  2694                           
  2695                           ; 1 bytes @ 0x3A
  2696  00DA                     	ds	1
  2697  00DB                     main@ewpos:
  2698                           
  2699                           ; 1 bytes @ 0x3B
  2700  00DB                     	ds	1
  2701  00DC                     main@timeSize:
  2702                           
  2703                           ; 1 bytes @ 0x3C
  2704  00DC                     	ds	1
  2705  00DD                     main@latSize:
  2706                           
  2707                           ; 1 bytes @ 0x3D
  2708  00DD                     	ds	1
  2709  00DE                     main@longSize:
  2710                           
  2711                           ; 1 bytes @ 0x3E
  2712  00DE                     	ds	1
  2713  00DF                     main@timepos:
  2714                           
  2715                           ; 1 bytes @ 0x3F
  2716  00DF                     	ds	1
  2717  00E0                     main@latpos:
  2718                           
  2719                           ; 1 bytes @ 0x40
  2720  00E0                     	ds	1
  2721  00E1                     main@longpos:
  2722                           
  2723                           ; 1 bytes @ 0x41
  2724  00E1                     	ds	1
  2725  00E2                     main@fpos:
  2726                           
  2727                           ; 1 bytes @ 0x42
  2728  00E2                     	ds	1
  2729                           
  2730                           	psect	cstackCOMMON
  2731  0078                     __pcstackCOMMON:
  2732  0078                     ?_EUSART_Receive_ISR:
  2733  0078                     ?_EUSART_Transmit_ISR:	
  2734                           ; 1 bytes @ 0x0
  2735                           
  2736  0078                     ??_EUSART_Transmit_ISR:	
  2737                           ; 1 bytes @ 0x0
  2738                           
  2739  0078                     ?_EUSART_Initialize:	
  2740                           ; 1 bytes @ 0x0
  2741                           
  2742  0078                     ?_PMD_Initialize:	
  2743                           ; 1 bytes @ 0x0
  2744                           
  2745  0078                     ?_OSCILLATOR_Initialize:	
  2746                           ; 1 bytes @ 0x0
  2747                           
  2748  0078                     ?_WDT_Initialize:	
  2749                           ; 1 bytes @ 0x0
  2750                           
  2751  0078                     ?_EUSART_DefaultFramingErrorHandler:	
  2752                           ; 1 bytes @ 0x0
  2753                           
  2754  0078                     ??_EUSART_DefaultFramingErrorHandler:	
  2755                           ; 1 bytes @ 0x0
  2756                           
  2757  0078                     ?_EUSART_DefaultOverrunErrorHandler:	
  2758                           ; 1 bytes @ 0x0
  2759                           
  2760  0078                     ??_EUSART_DefaultOverrunErrorHandler:	
  2761                           ; 1 bytes @ 0x0
  2762                           
  2763  0078                     ?_EUSART_DefaultErrorHandler:	
  2764                           ; 1 bytes @ 0x0
  2765                           
  2766  0078                     ?_EUSART_RxDataHandler:	
  2767                           ; 1 bytes @ 0x0
  2768                           
  2769  0078                     ??_EUSART_RxDataHandler:	
  2770                           ; 1 bytes @ 0x0
  2771                           
  2772  0078                     ?_PIN_MANAGER_Initialize:	
  2773                           ; 1 bytes @ 0x0
  2774                           
  2775  0078                     ?_SYSTEM_Initialize:	
  2776                           ; 1 bytes @ 0x0
  2777                           
  2778  0078                     ?_INTERRUPT_InterruptManager:	
  2779                           ; 1 bytes @ 0x0
  2780                           
  2781  0078                     ?_main:	
  2782                           ; 1 bytes @ 0x0
  2783                           
  2784                           
  2785                           ; 1 bytes @ 0x0
  2786  0078                     	ds	1
  2787  0079                     ?_EUSART_Write:
  2788  0079                     ?_EUSART_SetTxInterruptHandler:	
  2789                           ; 1 bytes @ 0x1
  2790                           
  2791  0079                     ??_EUSART_Receive_ISR:	
  2792                           ; 1 bytes @ 0x1
  2793                           
  2794  0079                     ?_EUSART_SetRxInterruptHandler:	
  2795                           ; 1 bytes @ 0x1
  2796                           
  2797  0079                     ??_PMD_Initialize:	
  2798                           ; 1 bytes @ 0x1
  2799                           
  2800  0079                     ??_OSCILLATOR_Initialize:	
  2801                           ; 1 bytes @ 0x1
  2802                           
  2803  0079                     ??_WDT_Initialize:	
  2804                           ; 1 bytes @ 0x1
  2805                           
  2806  0079                     ?_EUSART_SetFramingErrorHandler:	
  2807                           ; 1 bytes @ 0x1
  2808                           
  2809  0079                     ?_EUSART_SetOverrunErrorHandler:	
  2810                           ; 1 bytes @ 0x1
  2811                           
  2812  0079                     ?_EUSART_SetErrorHandler:	
  2813                           ; 1 bytes @ 0x1
  2814                           
  2815  0079                     ??_EUSART_DefaultErrorHandler:	
  2816                           ; 1 bytes @ 0x1
  2817                           
  2818  0079                     ??_PIN_MANAGER_Initialize:	
  2819                           ; 1 bytes @ 0x1
  2820                           
  2821  0079                     ??_INTERRUPT_InterruptManager:	
  2822                           ; 1 bytes @ 0x1
  2823                           
  2824  0079                     EUSART_Write@txData:	
  2825                           ; 1 bytes @ 0x1
  2826                           
  2827  0079                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2828                           ; 1 bytes @ 0x1
  2829                           
  2830  0079                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2831                           ; 2 bytes @ 0x1
  2832                           
  2833  0079                     EUSART_SetErrorHandler@interruptHandler:	
  2834                           ; 2 bytes @ 0x1
  2835                           
  2836  0079                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2837                           ; 2 bytes @ 0x1
  2838                           
  2839  0079                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2840                           ; 2 bytes @ 0x1
  2841                           
  2842                           
  2843                           ; 2 bytes @ 0x1
  2844  0079                     	ds	1
  2845  007A                     ??_EUSART_Write:
  2846                           
  2847                           ; 1 bytes @ 0x2
  2848  007A                     	ds	1
  2849  007B                     ??_EUSART_SetTxInterruptHandler:
  2850  007B                     ??_EUSART_SetRxInterruptHandler:	
  2851                           ; 1 bytes @ 0x3
  2852                           
  2853  007B                     ??_EUSART_Initialize:	
  2854                           ; 1 bytes @ 0x3
  2855                           
  2856  007B                     ??_EUSART_SetFramingErrorHandler:	
  2857                           ; 1 bytes @ 0x3
  2858                           
  2859  007B                     ??_EUSART_SetOverrunErrorHandler:	
  2860                           ; 1 bytes @ 0x3
  2861                           
  2862  007B                     ??_EUSART_SetErrorHandler:	
  2863                           ; 1 bytes @ 0x3
  2864                           
  2865                           
  2866                           ; 1 bytes @ 0x3
  2867  007B                     	ds	1
  2868  007C                     ??_SYSTEM_Initialize:
  2869                           
  2870                           	psect	cstackBANK0
  2871  002C                     __pcstackBANK0:	
  2872                           ; 1 bytes @ 0x4
  2873                           
  2874  002C                     ??_main:
  2875                           
  2876                           ; 1 bytes @ 0x0
  2877  002C                     	ds	2
  2878                           
  2879                           	psect	maintext
  2880  0044                     __pmaintext:	
  2881 ;;
  2882 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2883 ;;
  2884 ;; *************** function _main *****************
  2885 ;; Defined at:
  2886 ;;		line 9 in file "main.c"
  2887 ;; Parameters:    Size  Location     Type
  2888 ;;		None
  2889 ;; Auto vars:     Size  Location     Type
  2890 ;;  i               2   44[BANK1 ] int 
  2891 ;;  i               2   42[BANK1 ] int 
  2892 ;;  i               2   40[BANK1 ] int 
  2893 ;;  i               2   38[BANK1 ] int 
  2894 ;;  i               2   36[BANK1 ] int 
  2895 ;;  i               2   34[BANK1 ] int 
  2896 ;;  rx_long        10   24[BANK1 ] volatile unsigned char [
  2897 ;;  rx_lat          9   15[BANK1 ] unsigned char [9]
  2898 ;;  rx_time         9    6[BANK1 ] unsigned char [9]
  2899 ;;  rx_gps          6    0[BANK1 ] unsigned char [6]
  2900 ;;  fpos            1   66[BANK1 ] volatile unsigned char 
  2901 ;;  longpos         1   65[BANK1 ] volatile unsigned char 
  2902 ;;  latpos          1   64[BANK1 ] volatile unsigned char 
  2903 ;;  timepos         1   63[BANK1 ] volatile unsigned char 
  2904 ;;  longSize        1   62[BANK1 ] volatile unsigned char 
  2905 ;;  latSize         1   61[BANK1 ] volatile unsigned char 
  2906 ;;  timeSize        1   60[BANK1 ] volatile unsigned char 
  2907 ;;  ewpos           1   59[BANK1 ] volatile unsigned char 
  2908 ;;  nspos           1   58[BANK1 ] volatile unsigned char 
  2909 ;;  gnggaSize       1   57[BANK1 ] volatile unsigned char 
  2910 ;;  ew_go           1   56[BANK1 ] volatile _Bool 
  2911 ;;  ns_go           1   55[BANK1 ] volatile _Bool 
  2912 ;;  long_go         1   54[BANK1 ] volatile _Bool 
  2913 ;;  lat_go          1   53[BANK1 ] volatile _Bool 
  2914 ;;  time_go         1   52[BANK1 ] volatile _Bool 
  2915 ;;  g_ok            1   51[BANK1 ] volatile _Bool 
  2916 ;;  cpos            1   50[BANK1 ] volatile unsigned char 
  2917 ;;  rx_ew           1   49[BANK1 ] volatile unsigned char 
  2918 ;;  rx_ns           1   48[BANK1 ] volatile unsigned char 
  2919 ;;  ewSize          1   47[BANK1 ] volatile unsigned char 
  2920 ;;  nsSize          1   46[BANK1 ] volatile unsigned char 
  2921 ;; Return value:  Size  Location     Type
  2922 ;;                  1    wreg      void 
  2923 ;; Registers used:
  2924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2925 ;; Tracked objects:
  2926 ;;		On entry : B1F/0
  2927 ;;		On exit  : 0/0
  2928 ;;		Unchanged: 0/0
  2929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2931 ;;      Locals:         0       0      67       0       0       0       0       0       0       0       0       0       
      +0       0
  2932 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2933 ;;      Totals:         0       2      67       0       0       0       0       0       0       0       0       0       
      +0       0
  2934 ;;Total ram usage:       69 bytes
  2935 ;; Hardware stack levels required when called: 7
  2936 ;; This function calls:
  2937 ;;		_EUSART_Write
  2938 ;;		_SYSTEM_Initialize
  2939 ;; This function is called by:
  2940 ;;		Startup code after reset
  2941 ;; This function uses a non-reentrant model
  2942 ;;
  2943                           
  2944                           
  2945                           ;psect for function _main
  2946  0044                     _main:
  2947  0044                     l1975:	
  2948                           ;incstack = 0
  2949                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2950                           
  2951                           
  2952                           ;main.c: 11:     SYSTEM_Initialize();
  2953  0044  3184  2432  3180   	fcall	_SYSTEM_Initialize
  2954  0047                     l1977:
  2955                           
  2956                           ;main.c: 12:     (INTCONbits.GIE = 1);
  2957  0047  178B               	bsf	11,7	;volatile
  2958  0048                     l1979:
  2959                           
  2960                           ;main.c: 13:     (INTCONbits.PEIE = 1);
  2961  0048  170B               	bsf	11,6	;volatile
  2962  0049                     l1981:
  2963                           
  2964                           ;main.c: 17:     volatile uint8_t gnggaSize = 6;
  2965  0049  3006               	movlw	6
  2966  004A  0020               	movlb	0	; select bank0
  2967  004B  00AC               	movwf	??_main
  2968  004C  082C               	movf	??_main,w
  2969  004D  0021               	movlb	1	; select bank1
  2970  004E  00D9               	movwf	main@gnggaSize^(0+128)	;volatile
  2971  004F                     l1983:
  2972                           
  2973                           ;main.c: 18:     volatile uint8_t timeSize =9;
  2974  004F  3009               	movlw	9
  2975  0050  0020               	movlb	0	; select bank0
  2976  0051  00AC               	movwf	??_main
  2977  0052  082C               	movf	??_main,w
  2978  0053  0021               	movlb	1	; select bank1
  2979  0054  00DC               	movwf	main@timeSize^(0+128)	;volatile
  2980  0055                     l1985:
  2981                           
  2982                           ;main.c: 19:     volatile uint8_t latSize =9;
  2983  0055  3009               	movlw	9
  2984  0056  0020               	movlb	0	; select bank0
  2985  0057  00AC               	movwf	??_main
  2986  0058  082C               	movf	??_main,w
  2987  0059  0021               	movlb	1	; select bank1
  2988  005A  00DD               	movwf	main@latSize^(0+128)	;volatile
  2989  005B                     l1987:
  2990                           
  2991                           ;main.c: 20:     volatile uint8_t nsSize =1;
  2992  005B  3001               	movlw	1
  2993  005C  0020               	movlb	0	; select bank0
  2994  005D  00AC               	movwf	??_main
  2995  005E  082C               	movf	??_main,w
  2996  005F  0021               	movlb	1	; select bank1
  2997  0060  00CE               	movwf	main@nsSize^(0+128)	;volatile
  2998  0061                     l1989:
  2999                           
  3000                           ;main.c: 21:     volatile uint8_t longSize =11;
  3001  0061  300B               	movlw	11
  3002  0062  0020               	movlb	0	; select bank0
  3003  0063  00AC               	movwf	??_main
  3004  0064  082C               	movf	??_main,w
  3005  0065  0021               	movlb	1	; select bank1
  3006  0066  00DE               	movwf	main@longSize^(0+128)	;volatile
  3007  0067                     l1991:
  3008                           
  3009                           ;main.c: 22:     volatile uint8_t ewSize =1;
  3010  0067  3001               	movlw	1
  3011  0068  0020               	movlb	0	; select bank0
  3012  0069  00AC               	movwf	??_main
  3013  006A  082C               	movf	??_main,w
  3014  006B  0021               	movlb	1	; select bank1
  3015  006C  00CF               	movwf	main@ewSize^(0+128)	;volatile
  3016  006D                     l1993:
  3017                           
  3018                           ;main.c: 24:     unsigned char rx_gps[6];;main.c: 25:     unsigned char rx_time[9];;main
      +                          .c: 26:     unsigned char rx_lat[9];;main.c: 27:     volatile unsigned char rx_ns;;main.
      +                          c: 28:     volatile unsigned char rx_long[10];;main.c: 29:     volatile unsigned char rx
      +                          _ew;;main.c: 31:     volatile uint8_t fpos = 0;
  3019  006D  01E2               	clrf	main@fpos^(0+128)	;volatile
  3020  006E                     l1995:
  3021                           
  3022                           ;main.c: 32:     volatile uint8_t cpos = 0;
  3023  006E  01D2               	clrf	main@cpos^(0+128)	;volatile
  3024  006F                     l1997:
  3025                           
  3026                           ;main.c: 33:     volatile uint8_t timepos = 0;
  3027  006F  01DF               	clrf	main@timepos^(0+128)	;volatile
  3028  0070                     l1999:
  3029                           
  3030                           ;main.c: 34:     volatile uint8_t latpos = 0;
  3031  0070  01E0               	clrf	main@latpos^(0+128)	;volatile
  3032  0071                     l2001:
  3033                           
  3034                           ;main.c: 35:     volatile uint8_t nspos = 0;
  3035  0071  01DA               	clrf	main@nspos^(0+128)	;volatile
  3036  0072                     l2003:
  3037                           
  3038                           ;main.c: 36:     volatile uint8_t longpos = 0;
  3039  0072  01E1               	clrf	main@longpos^(0+128)	;volatile
  3040  0073                     l2005:
  3041                           
  3042                           ;main.c: 37:     volatile uint8_t ewpos = 0;
  3043  0073  01DB               	clrf	main@ewpos^(0+128)	;volatile
  3044  0074                     l2007:
  3045                           
  3046                           ;main.c: 40:     volatile _Bool g_ok = 0;
  3047  0074  01D3               	clrf	main@g_ok^(0+128)	;volatile
  3048  0075                     l2009:
  3049                           
  3050                           ;main.c: 41:     volatile _Bool time_go = 0;
  3051  0075  01D4               	clrf	main@time_go^(0+128)	;volatile
  3052  0076                     l2011:
  3053                           
  3054                           ;main.c: 42:     volatile _Bool lat_go = 0;
  3055  0076  01D5               	clrf	main@lat_go^(0+128)	;volatile
  3056  0077                     l2013:
  3057                           
  3058                           ;main.c: 43:     volatile _Bool long_go = 0;
  3059  0077  01D6               	clrf	main@long_go^(0+128)	;volatile
  3060  0078                     l2015:
  3061                           
  3062                           ;main.c: 44:     volatile _Bool ns_go = 0;
  3063  0078  01D7               	clrf	main@ns_go^(0+128)	;volatile
  3064  0079                     l2017:
  3065                           
  3066                           ;main.c: 45:     volatile _Bool ew_go = 0;
  3067  0079  01D8               	clrf	main@ew_go^(0+128)	;volatile
  3068  007A                     l2019:
  3069                           
  3070                           ;main.c: 47:     const unsigned char header_g[] = {"$GNGGA"};;main.c: 49:     for(int i=
      +                          0; i < latSize ; i++){
  3071  007A  01C2               	clrf	main@i^(0+128)
  3072  007B  01C3               	clrf	(main@i+1)^(0+128)
  3073  007C  2887               	goto	l2025
  3074  007D                     l2021:
  3075                           
  3076                           ;main.c: 50:         rx_lat[i] = 0;
  3077  007D  0021               	movlb	1	; select bank1
  3078  007E  0842               	movf	main@i^(0+128),w
  3079  007F  3EAF               	addlw	(low (main@rx_lat| 0))& (0+255)
  3080  0080  0086               	movwf	6
  3081  0081  0187               	clrf	7
  3082  0082  0181               	clrf	1
  3083  0083                     l2023:
  3084                           
  3085                           ;main.c: 51:     }
  3086  0083  3001               	movlw	1
  3087  0084  07C2               	addwf	main@i^(0+128),f
  3088  0085  3000               	movlw	0
  3089  0086  3DC3               	addwfc	(main@i+1)^(0+128),f
  3090  0087                     l2025:
  3091  0087  0843               	movf	(main@i+1)^(0+128),w
  3092  0088  3A80               	xorlw	128
  3093  0089  0020               	movlb	0	; select bank0
  3094  008A  00AC               	movwf	??_main
  3095  008B  3080               	movlw	128
  3096  008C  022C               	subwf	??_main,w
  3097  008D  1D03               	skipz
  3098  008E  2892               	goto	u1045
  3099  008F  0021               	movlb	1	; select bank1
  3100  0090  085D               	movf	main@latSize^(0+128),w	;volatile
  3101  0091  0242               	subwf	main@i^(0+128),w
  3102  0092                     u1045:
  3103  0092  1C03               	skipc
  3104  0093  2895               	goto	u1041
  3105  0094  2896               	goto	u1040
  3106  0095                     u1041:
  3107  0095  287D               	goto	l2021
  3108  0096                     u1040:
  3109  0096                     l2027:
  3110                           
  3111                           ;main.c: 52:     for(int i=0; i < longSize ; i++){
  3112  0096  0021               	movlb	1	; select bank1
  3113  0097  01C4               	clrf	main@i_507^(0+128)
  3114  0098  01C5               	clrf	(main@i_507+1)^(0+128)
  3115  0099  28A4               	goto	l2033
  3116  009A                     l2029:
  3117                           
  3118                           ;main.c: 53:         rx_long[i] = 0;
  3119  009A  0021               	movlb	1	; select bank1
  3120  009B  0844               	movf	main@i_507^(0+128),w
  3121  009C  3EB8               	addlw	(low (main@rx_long| 0))& (0+255)
  3122  009D  0086               	movwf	6
  3123  009E  0187               	clrf	7
  3124  009F  0181               	clrf	1
  3125  00A0                     l2031:
  3126                           
  3127                           ;main.c: 54:     }
  3128  00A0  3001               	movlw	1
  3129  00A1  07C4               	addwf	main@i_507^(0+128),f
  3130  00A2  3000               	movlw	0
  3131  00A3  3DC5               	addwfc	(main@i_507+1)^(0+128),f
  3132  00A4                     l2033:
  3133  00A4  0845               	movf	(main@i_507+1)^(0+128),w
  3134  00A5  3A80               	xorlw	128
  3135  00A6  0020               	movlb	0	; select bank0
  3136  00A7  00AC               	movwf	??_main
  3137  00A8  3080               	movlw	128
  3138  00A9  022C               	subwf	??_main,w
  3139  00AA  1D03               	skipz
  3140  00AB  28AF               	goto	u1055
  3141  00AC  0021               	movlb	1	; select bank1
  3142  00AD  085E               	movf	main@longSize^(0+128),w	;volatile
  3143  00AE  0244               	subwf	main@i_507^(0+128),w
  3144  00AF                     u1055:
  3145  00AF  1C03               	skipc
  3146  00B0  28B2               	goto	u1051
  3147  00B1  28B3               	goto	u1050
  3148  00B2                     u1051:
  3149  00B2  289A               	goto	l2029
  3150  00B3                     u1050:
  3151  00B3                     l2035:
  3152                           
  3153                           ;main.c: 55:     for(int i=0; i < timeSize ; i++){
  3154  00B3  0021               	movlb	1	; select bank1
  3155  00B4  01C6               	clrf	main@i_508^(0+128)
  3156  00B5  01C7               	clrf	(main@i_508+1)^(0+128)
  3157  00B6  28C1               	goto	l2041
  3158  00B7                     l2037:
  3159                           
  3160                           ;main.c: 56:         rx_time[i] = 0;
  3161  00B7  0021               	movlb	1	; select bank1
  3162  00B8  0846               	movf	main@i_508^(0+128),w
  3163  00B9  3EA6               	addlw	(low (main@rx_time| 0))& (0+255)
  3164  00BA  0086               	movwf	6
  3165  00BB  0187               	clrf	7
  3166  00BC  0181               	clrf	1
  3167  00BD                     l2039:
  3168                           
  3169                           ;main.c: 57:     }
  3170  00BD  3001               	movlw	1
  3171  00BE  07C6               	addwf	main@i_508^(0+128),f
  3172  00BF  3000               	movlw	0
  3173  00C0  3DC7               	addwfc	(main@i_508+1)^(0+128),f
  3174  00C1                     l2041:
  3175  00C1  0847               	movf	(main@i_508+1)^(0+128),w
  3176  00C2  3A80               	xorlw	128
  3177  00C3  0020               	movlb	0	; select bank0
  3178  00C4  00AC               	movwf	??_main
  3179  00C5  3080               	movlw	128
  3180  00C6  022C               	subwf	??_main,w
  3181  00C7  1D03               	skipz
  3182  00C8  28CC               	goto	u1065
  3183  00C9  0021               	movlb	1	; select bank1
  3184  00CA  085C               	movf	main@timeSize^(0+128),w	;volatile
  3185  00CB  0246               	subwf	main@i_508^(0+128),w
  3186  00CC                     u1065:
  3187  00CC  1C03               	skipc
  3188  00CD  28CF               	goto	u1061
  3189  00CE  28D0               	goto	u1060
  3190  00CF                     u1061:
  3191  00CF  28B7               	goto	l2037
  3192  00D0                     u1060:
  3193  00D0                     l2043:
  3194                           
  3195                           ;main.c: 60:         if(uartFlag){
  3196  00D0  0020               	movlb	0	; select bank0
  3197  00D1  082B               	movf	_uartFlag,w	;volatile
  3198  00D2  1903               	btfsc	3,2
  3199  00D3  28D5               	goto	u1071
  3200  00D4  28D6               	goto	u1070
  3201  00D5                     u1071:
  3202  00D5  28D0               	goto	l2043
  3203  00D6                     u1070:
  3204  00D6                     l2045:
  3205                           
  3206                           ;main.c: 61:             if(rxData == '$'){
  3207  00D6  3024               	movlw	36
  3208  00D7  0629               	xorwf	_rxData,w	;volatile
  3209  00D8  1D03               	btfss	3,2
  3210  00D9  28DB               	goto	u1081
  3211  00DA  28DC               	goto	u1080
  3212  00DB                     u1081:
  3213  00DB  28E0               	goto	l2049
  3214  00DC                     u1080:
  3215  00DC                     l2047:
  3216                           
  3217                           ;main.c: 62:                 dollarFlag =1;
  3218  00DC  3001               	movlw	1
  3219  00DD  00AC               	movwf	??_main
  3220  00DE  082C               	movf	??_main,w
  3221  00DF  00AA               	movwf	_dollarFlag	;volatile
  3222  00E0                     l2049:
  3223                           
  3224                           ;main.c: 65:             if(dollarFlag){
  3225  00E0  082A               	movf	_dollarFlag,w	;volatile
  3226  00E1  1903               	btfsc	3,2
  3227  00E2  28E4               	goto	u1091
  3228  00E3  28E5               	goto	u1090
  3229  00E4                     u1091:
  3230  00E4  2919               	goto	l2067
  3231  00E5                     u1090:
  3232  00E5                     l2051:
  3233                           
  3234                           ;main.c: 66:                 if(fpos < gnggaSize ){
  3235  00E5  0021               	movlb	1	; select bank1
  3236  00E6  0859               	movf	main@gnggaSize^(0+128),w	;volatile
  3237  00E7  0262               	subwf	main@fpos^(0+128),w	;volatile
  3238  00E8  1803               	skipnc
  3239  00E9  28EB               	goto	u1101
  3240  00EA  28EC               	goto	u1100
  3241  00EB                     u1101:
  3242  00EB  2919               	goto	l2067
  3243  00EC                     u1100:
  3244  00EC                     l2053:
  3245                           
  3246                           ;main.c: 67:                     if(rxData == header_g[fpos] ){
  3247  00EC  0862               	movf	main@fpos^(0+128),w	;volatile
  3248  00ED  3E53               	addlw	low (main@header_g| (0+32768))
  3249  00EE  0084               	movwf	4
  3250  00EF  3084               	movlw	high (main@header_g| (0+32768))
  3251  00F0  1803               	skipnc
  3252  00F1  3E01               	addlw	1
  3253  00F2  0085               	movwf	5
  3254  00F3  0800               	movf	0,w	;code access
  3255  00F4  0020               	movlb	0	; select bank0
  3256  00F5  0629               	xorwf	_rxData,w	;volatile
  3257  00F6  1D03               	skipz
  3258  00F7  28F9               	goto	u1111
  3259  00F8  28FA               	goto	u1110
  3260  00F9                     u1111:
  3261  00F9  2909               	goto	l2059
  3262  00FA                     u1110:
  3263  00FA                     l2055:
  3264                           
  3265                           ;main.c: 68:                         rx_gps[fpos]=rxData;
  3266  00FA  0829               	movf	_rxData,w	;volatile
  3267  00FB  00AC               	movwf	??_main
  3268  00FC  0021               	movlb	1	; select bank1
  3269  00FD  0862               	movf	main@fpos^(0+128),w
  3270  00FE  3EA0               	addlw	(low (main@rx_gps| 0))& (0+255)
  3271  00FF  0086               	movwf	6
  3272  0100  0187               	clrf	7
  3273  0101  0020               	movlb	0	; select bank0
  3274  0102  082C               	movf	??_main,w
  3275  0103  0081               	movwf	1
  3276  0104                     l2057:
  3277                           
  3278                           ;main.c: 69:                         fpos++;
  3279  0104  3001               	movlw	1
  3280  0105  00AC               	movwf	??_main
  3281  0106  082C               	movf	??_main,w
  3282  0107  0021               	movlb	1	; select bank1
  3283  0108  07E2               	addwf	main@fpos^(0+128),f	;volatile
  3284  0109                     l2059:
  3285                           
  3286                           ;main.c: 71:                     if(fpos == gnggaSize){
  3287  0109  0021               	movlb	1	; select bank1
  3288  010A  0862               	movf	main@fpos^(0+128),w	;volatile
  3289  010B  0659               	xorwf	main@gnggaSize^(0+128),w	;volatile
  3290  010C  1D03               	skipz
  3291  010D  290F               	goto	u1121
  3292  010E  2910               	goto	u1120
  3293  010F                     u1121:
  3294  010F  2919               	goto	l2067
  3295  0110                     u1120:
  3296  0110                     l2061:
  3297                           
  3298                           ;main.c: 72:                         g_ok=1;
  3299  0110  3001               	movlw	1
  3300  0111  0020               	movlb	0	; select bank0
  3301  0112  00AC               	movwf	??_main
  3302  0113  082C               	movf	??_main,w
  3303  0114  0021               	movlb	1	; select bank1
  3304  0115  00D3               	movwf	main@g_ok^(0+128)	;volatile
  3305  0116                     l2063:
  3306                           
  3307                           ;main.c: 73:                         fpos=0;
  3308  0116  01E2               	clrf	main@fpos^(0+128)	;volatile
  3309  0117                     l2065:
  3310                           
  3311                           ;main.c: 74:                         dollarFlag=0;
  3312  0117  0020               	movlb	0	; select bank0
  3313  0118  01AA               	clrf	_dollarFlag	;volatile
  3314  0119                     l2067:
  3315                           
  3316                           ;main.c: 79:             if(g_ok){
  3317  0119  0021               	movlb	1	; select bank1
  3318  011A  0853               	movf	main@g_ok^(0+128),w	;volatile
  3319  011B  1903               	btfsc	3,2
  3320  011C  291E               	goto	u1131
  3321  011D  291F               	goto	u1130
  3322  011E                     u1131:
  3323  011E  2A1E               	goto	l2115
  3324  011F                     u1130:
  3325  011F                     l2069:
  3326                           
  3327                           ;main.c: 80:                 if(rxData == ','){
  3328  011F  302C               	movlw	44
  3329  0120  0020               	movlb	0	; select bank0
  3330  0121  0629               	xorwf	_rxData,w	;volatile
  3331  0122  1D03               	btfss	3,2
  3332  0123  2925               	goto	u1141
  3333  0124  2926               	goto	u1140
  3334  0125                     u1141:
  3335  0125  2A1E               	goto	l2115
  3336  0126                     u1140:
  3337  0126                     l2071:
  3338                           
  3339                           ;main.c: 81:                     cpos++;
  3340  0126  3001               	movlw	1
  3341  0127  00AC               	movwf	??_main
  3342  0128  082C               	movf	??_main,w
  3343  0129  0021               	movlb	1	; select bank1
  3344  012A  07D2               	addwf	main@cpos^(0+128),f	;volatile
  3345  012B  2A1E               	goto	l2115
  3346  012C                     l2073:
  3347                           
  3348                           ;main.c: 89:                     time_go = 1;
  3349  012C  3001               	movlw	1
  3350  012D  00AC               	movwf	??_main
  3351  012E  082C               	movf	??_main,w
  3352  012F  0021               	movlb	1	; select bank1
  3353  0130  00D4               	movwf	main@time_go^(0+128)	;volatile
  3354                           
  3355                           ;main.c: 90:                     break;
  3356  0131  2A3C               	goto	l2117
  3357  0132                     l2075:
  3358                           
  3359                           ;main.c: 93:                     lat_go = 1;
  3360  0132  3001               	movlw	1
  3361  0133  00AC               	movwf	??_main
  3362  0134  082C               	movf	??_main,w
  3363  0135  0021               	movlb	1	; select bank1
  3364  0136  00D5               	movwf	main@lat_go^(0+128)	;volatile
  3365                           
  3366                           ;main.c: 94:                     break;
  3367  0137  2A3C               	goto	l2117
  3368  0138                     l2077:
  3369                           
  3370                           ;main.c: 97:                     ns_go = 1;
  3371  0138  3001               	movlw	1
  3372  0139  00AC               	movwf	??_main
  3373  013A  082C               	movf	??_main,w
  3374  013B  0021               	movlb	1	; select bank1
  3375  013C  00D7               	movwf	main@ns_go^(0+128)	;volatile
  3376                           
  3377                           ;main.c: 98:                     break;
  3378  013D  2A3C               	goto	l2117
  3379  013E                     l2079:
  3380                           
  3381                           ;main.c: 101:                     long_go = 1;
  3382  013E  3001               	movlw	1
  3383  013F  00AC               	movwf	??_main
  3384  0140  082C               	movf	??_main,w
  3385  0141  0021               	movlb	1	; select bank1
  3386  0142  00D6               	movwf	main@long_go^(0+128)	;volatile
  3387                           
  3388                           ;main.c: 102:                     break;
  3389  0143  2A3C               	goto	l2117
  3390  0144                     l2081:
  3391                           
  3392                           ;main.c: 105:                     ew_go = 1;
  3393  0144  3001               	movlw	1
  3394  0145  00AC               	movwf	??_main
  3395  0146  082C               	movf	??_main,w
  3396  0147  0021               	movlb	1	; select bank1
  3397  0148  00D8               	movwf	main@ew_go^(0+128)	;volatile
  3398                           
  3399                           ;main.c: 106:                     break;
  3400  0149  2A3C               	goto	l2117
  3401  014A                     l2083:
  3402                           
  3403                           ;main.c: 108:                     g_ok=0;
  3404  014A  0021               	movlb	1	; select bank1
  3405  014B  01D3               	clrf	main@g_ok^(0+128)	;volatile
  3406                           
  3407                           ;main.c: 109:                     cpos = 0;
  3408  014C  01D2               	clrf	main@cpos^(0+128)	;volatile
  3409                           
  3410                           ;main.c: 111:      for(int i=0; i < timeSize ; i++){
  3411  014D  01C8               	clrf	main@i_509^(0+128)
  3412  014E  01C9               	clrf	(main@i_509+1)^(0+128)
  3413  014F  2962               	goto	l2089
  3414  0150                     l2085:
  3415                           
  3416                           ;main.c: 112:                         EUSART_Write(rx_time[i]);
  3417  0150  0021               	movlb	1	; select bank1
  3418  0151  0848               	movf	main@i_509^(0+128),w
  3419  0152  3EA6               	addlw	(low (main@rx_time| 0))& (0+255)
  3420  0153  0086               	movwf	6
  3421  0154  0187               	clrf	7
  3422  0155  0801               	movf	1,w
  3423  0156  0020               	movlb	0	; select bank0
  3424  0157  00AC               	movwf	??_main
  3425  0158  082C               	movf	??_main,w
  3426  0159  00F9               	movwf	EUSART_Write@txData
  3427  015A  3183  238E  3180   	fcall	_EUSART_Write
  3428  015D                     l2087:
  3429                           
  3430                           ;main.c: 113:                     }
  3431  015D  3001               	movlw	1
  3432  015E  0021               	movlb	1	; select bank1
  3433  015F  07C8               	addwf	main@i_509^(0+128),f
  3434  0160  3000               	movlw	0
  3435  0161  3DC9               	addwfc	(main@i_509+1)^(0+128),f
  3436  0162                     l2089:
  3437  0162  0849               	movf	(main@i_509+1)^(0+128),w
  3438  0163  3A80               	xorlw	128
  3439  0164  0020               	movlb	0	; select bank0
  3440  0165  00AC               	movwf	??_main
  3441  0166  3080               	movlw	128
  3442  0167  022C               	subwf	??_main,w
  3443  0168  1D03               	skipz
  3444  0169  296D               	goto	u1155
  3445  016A  0021               	movlb	1	; select bank1
  3446  016B  085C               	movf	main@timeSize^(0+128),w	;volatile
  3447  016C  0248               	subwf	main@i_509^(0+128),w
  3448  016D                     u1155:
  3449  016D  1C03               	skipc
  3450  016E  2970               	goto	u1151
  3451  016F  2971               	goto	u1150
  3452  0170                     u1151:
  3453  0170  2950               	goto	l2085
  3454  0171                     u1150:
  3455  0171                     l2091:
  3456                           
  3457                           ;main.c: 114:                     EUSART_Write(10);
  3458  0171  300A               	movlw	10
  3459  0172  0020               	movlb	0	; select bank0
  3460  0173  00AC               	movwf	??_main
  3461  0174  082C               	movf	??_main,w
  3462  0175  00F9               	movwf	EUSART_Write@txData
  3463  0176  3183  238E  3180   	fcall	_EUSART_Write
  3464                           
  3465                           ;main.c: 115:      EUSART_Write(13);
  3466  0179  300D               	movlw	13
  3467  017A  0020               	movlb	0	; select bank0
  3468  017B  00AC               	movwf	??_main
  3469  017C  082C               	movf	??_main,w
  3470  017D  00F9               	movwf	EUSART_Write@txData
  3471  017E  3183  238E  3180   	fcall	_EUSART_Write
  3472  0181                     l2093:
  3473                           
  3474                           ;main.c: 117:      for(int i=0; i < latSize ; i++){
  3475  0181  0021               	movlb	1	; select bank1
  3476  0182  01CA               	clrf	main@i_510^(0+128)
  3477  0183  01CB               	clrf	(main@i_510+1)^(0+128)
  3478  0184  2997               	goto	l2099
  3479  0185                     l2095:
  3480                           
  3481                           ;main.c: 118:                         EUSART_Write(rx_lat[i]);
  3482  0185  0021               	movlb	1	; select bank1
  3483  0186  084A               	movf	main@i_510^(0+128),w
  3484  0187  3EAF               	addlw	(low (main@rx_lat| 0))& (0+255)
  3485  0188  0086               	movwf	6
  3486  0189  0187               	clrf	7
  3487  018A  0801               	movf	1,w
  3488  018B  0020               	movlb	0	; select bank0
  3489  018C  00AC               	movwf	??_main
  3490  018D  082C               	movf	??_main,w
  3491  018E  00F9               	movwf	EUSART_Write@txData
  3492  018F  3183  238E  3180   	fcall	_EUSART_Write
  3493  0192                     l2097:
  3494                           
  3495                           ;main.c: 119:                     }
  3496  0192  3001               	movlw	1
  3497  0193  0021               	movlb	1	; select bank1
  3498  0194  07CA               	addwf	main@i_510^(0+128),f
  3499  0195  3000               	movlw	0
  3500  0196  3DCB               	addwfc	(main@i_510+1)^(0+128),f
  3501  0197                     l2099:
  3502  0197  084B               	movf	(main@i_510+1)^(0+128),w
  3503  0198  3A80               	xorlw	128
  3504  0199  0020               	movlb	0	; select bank0
  3505  019A  00AC               	movwf	??_main
  3506  019B  3080               	movlw	128
  3507  019C  022C               	subwf	??_main,w
  3508  019D  1D03               	skipz
  3509  019E  29A2               	goto	u1165
  3510  019F  0021               	movlb	1	; select bank1
  3511  01A0  085D               	movf	main@latSize^(0+128),w	;volatile
  3512  01A1  024A               	subwf	main@i_510^(0+128),w
  3513  01A2                     u1165:
  3514  01A2  1C03               	skipc
  3515  01A3  29A5               	goto	u1161
  3516  01A4  29A6               	goto	u1160
  3517  01A5                     u1161:
  3518  01A5  2985               	goto	l2095
  3519  01A6                     u1160:
  3520  01A6                     l2101:
  3521                           
  3522                           ;main.c: 120:                     EUSART_Write(10);
  3523  01A6  300A               	movlw	10
  3524  01A7  0020               	movlb	0	; select bank0
  3525  01A8  00AC               	movwf	??_main
  3526  01A9  082C               	movf	??_main,w
  3527  01AA  00F9               	movwf	EUSART_Write@txData
  3528  01AB  3183  238E  3180   	fcall	_EUSART_Write
  3529                           
  3530                           ;main.c: 121:      EUSART_Write(13);
  3531  01AE  300D               	movlw	13
  3532  01AF  0020               	movlb	0	; select bank0
  3533  01B0  00AC               	movwf	??_main
  3534  01B1  082C               	movf	??_main,w
  3535  01B2  00F9               	movwf	EUSART_Write@txData
  3536  01B3  3183  238E  3180   	fcall	_EUSART_Write
  3537                           
  3538                           ;main.c: 123:      EUSART_Write(rx_ns);
  3539  01B6  0021               	movlb	1	; select bank1
  3540  01B7  0850               	movf	main@rx_ns^(0+128),w	;volatile
  3541  01B8  0020               	movlb	0	; select bank0
  3542  01B9  00AC               	movwf	??_main
  3543  01BA  082C               	movf	??_main,w
  3544  01BB  00F9               	movwf	EUSART_Write@txData
  3545  01BC  3183  238E  3180   	fcall	_EUSART_Write
  3546                           
  3547                           ;main.c: 124:      EUSART_Write(10);
  3548  01BF  300A               	movlw	10
  3549  01C0  0020               	movlb	0	; select bank0
  3550  01C1  00AC               	movwf	??_main
  3551  01C2  082C               	movf	??_main,w
  3552  01C3  00F9               	movwf	EUSART_Write@txData
  3553  01C4  3183  238E  3180   	fcall	_EUSART_Write
  3554                           
  3555                           ;main.c: 125:      EUSART_Write(13);
  3556  01C7  300D               	movlw	13
  3557  01C8  0020               	movlb	0	; select bank0
  3558  01C9  00AC               	movwf	??_main
  3559  01CA  082C               	movf	??_main,w
  3560  01CB  00F9               	movwf	EUSART_Write@txData
  3561  01CC  3183  238E  3180   	fcall	_EUSART_Write
  3562  01CF                     l2103:
  3563                           
  3564                           ;main.c: 127:      for(int i=0; i < longSize ; i++){
  3565  01CF  0021               	movlb	1	; select bank1
  3566  01D0  01CC               	clrf	main@i_511^(0+128)
  3567  01D1  01CD               	clrf	(main@i_511+1)^(0+128)
  3568  01D2  29E5               	goto	l2109
  3569  01D3                     l2105:
  3570                           
  3571                           ;main.c: 128:                         EUSART_Write(rx_long[i]);
  3572  01D3  0021               	movlb	1	; select bank1
  3573  01D4  084C               	movf	main@i_511^(0+128),w
  3574  01D5  3EB8               	addlw	(low (main@rx_long| 0))& (0+255)
  3575  01D6  0086               	movwf	6
  3576  01D7  0187               	clrf	7
  3577  01D8  0801               	movf	1,w
  3578  01D9  0020               	movlb	0	; select bank0
  3579  01DA  00AC               	movwf	??_main
  3580  01DB  082C               	movf	??_main,w
  3581  01DC  00F9               	movwf	EUSART_Write@txData
  3582  01DD  3183  238E  3180   	fcall	_EUSART_Write
  3583  01E0                     l2107:
  3584                           
  3585                           ;main.c: 129:      }
  3586  01E0  3001               	movlw	1
  3587  01E1  0021               	movlb	1	; select bank1
  3588  01E2  07CC               	addwf	main@i_511^(0+128),f
  3589  01E3  3000               	movlw	0
  3590  01E4  3DCD               	addwfc	(main@i_511+1)^(0+128),f
  3591  01E5                     l2109:
  3592  01E5  084D               	movf	(main@i_511+1)^(0+128),w
  3593  01E6  3A80               	xorlw	128
  3594  01E7  0020               	movlb	0	; select bank0
  3595  01E8  00AC               	movwf	??_main
  3596  01E9  3080               	movlw	128
  3597  01EA  022C               	subwf	??_main,w
  3598  01EB  1D03               	skipz
  3599  01EC  29F0               	goto	u1175
  3600  01ED  0021               	movlb	1	; select bank1
  3601  01EE  085E               	movf	main@longSize^(0+128),w	;volatile
  3602  01EF  024C               	subwf	main@i_511^(0+128),w
  3603  01F0                     u1175:
  3604  01F0  1C03               	skipc
  3605  01F1  29F3               	goto	u1171
  3606  01F2  29F4               	goto	u1170
  3607  01F3                     u1171:
  3608  01F3  29D3               	goto	l2105
  3609  01F4                     u1170:
  3610  01F4                     l2111:
  3611                           
  3612                           ;main.c: 130:      EUSART_Write(10);
  3613  01F4  300A               	movlw	10
  3614  01F5  0020               	movlb	0	; select bank0
  3615  01F6  00AC               	movwf	??_main
  3616  01F7  082C               	movf	??_main,w
  3617  01F8  00F9               	movwf	EUSART_Write@txData
  3618  01F9  3183  238E  3180   	fcall	_EUSART_Write
  3619                           
  3620                           ;main.c: 131:      EUSART_Write(13);
  3621  01FC  300D               	movlw	13
  3622  01FD  0020               	movlb	0	; select bank0
  3623  01FE  00AC               	movwf	??_main
  3624  01FF  082C               	movf	??_main,w
  3625  0200  00F9               	movwf	EUSART_Write@txData
  3626  0201  3183  238E  3180   	fcall	_EUSART_Write
  3627                           
  3628                           ;main.c: 133:      EUSART_Write(rx_ew);
  3629  0204  0021               	movlb	1	; select bank1
  3630  0205  0851               	movf	main@rx_ew^(0+128),w	;volatile
  3631  0206  0020               	movlb	0	; select bank0
  3632  0207  00AC               	movwf	??_main
  3633  0208  082C               	movf	??_main,w
  3634  0209  00F9               	movwf	EUSART_Write@txData
  3635  020A  3183  238E  3180   	fcall	_EUSART_Write
  3636                           
  3637                           ;main.c: 135:      EUSART_Write(10);
  3638  020D  300A               	movlw	10
  3639  020E  0020               	movlb	0	; select bank0
  3640  020F  00AC               	movwf	??_main
  3641  0210  082C               	movf	??_main,w
  3642  0211  00F9               	movwf	EUSART_Write@txData
  3643  0212  3183  238E  3180   	fcall	_EUSART_Write
  3644                           
  3645                           ;main.c: 136:      EUSART_Write(13);
  3646  0215  300D               	movlw	13
  3647  0216  0020               	movlb	0	; select bank0
  3648  0217  00AC               	movwf	??_main
  3649  0218  082C               	movf	??_main,w
  3650  0219  00F9               	movwf	EUSART_Write@txData
  3651  021A  3183  238E  3180   	fcall	_EUSART_Write
  3652                           
  3653                           ;main.c: 137:      break;
  3654  021D  2A3C               	goto	l2117
  3655  021E                     l2115:
  3656  021E  0021               	movlb	1	; select bank1
  3657  021F  0852               	movf	main@cpos^(0+128),w	;volatile
  3658  0220  0020               	movlb	0	; select bank0
  3659  0221  00AC               	movwf	??_main
  3660  0222  01AD               	clrf	??_main+1
  3661                           
  3662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3663                           ; Switch size 1, requested type "simple"
  3664                           ; Number of cases is 1, Range of values is 0 to 0
  3665                           ; switch strategies available:
  3666                           ; Name         Instructions Cycles
  3667                           ; simple_byte            4     3 (average)
  3668                           ; direct_byte            8     6 (fixed)
  3669                           ; jumptable            260     6 (fixed)
  3670                           ;	Chosen strategy is simple_byte
  3671  0223  082D               	movf	??_main+1,w
  3672  0224  3A00               	xorlw	0	; case 0
  3673  0225  1903               	skipnz
  3674  0226  2A28               	goto	l2223
  3675  0227  2A3C               	goto	l2117
  3676  0228                     l2223:
  3677                           
  3678                           ; Switch size 1, requested type "simple"
  3679                           ; Number of cases is 6, Range of values is 1 to 6
  3680                           ; switch strategies available:
  3681                           ; Name         Instructions Cycles
  3682                           ; simple_byte           19    10 (average)
  3683                           ; direct_byte           21     9 (fixed)
  3684                           ; jumptable            263     9 (fixed)
  3685                           ;	Chosen strategy is simple_byte
  3686  0228  082C               	movf	??_main,w
  3687  0229  3A01               	xorlw	1	; case 1
  3688  022A  1903               	skipnz
  3689  022B  292C               	goto	l2073
  3690  022C  3A03               	xorlw	3	; case 2
  3691  022D  1903               	skipnz
  3692  022E  2932               	goto	l2075
  3693  022F  3A01               	xorlw	1	; case 3
  3694  0230  1903               	skipnz
  3695  0231  2938               	goto	l2077
  3696  0232  3A07               	xorlw	7	; case 4
  3697  0233  1903               	skipnz
  3698  0234  293E               	goto	l2079
  3699  0235  3A01               	xorlw	1	; case 5
  3700  0236  1903               	skipnz
  3701  0237  2944               	goto	l2081
  3702  0238  3A03               	xorlw	3	; case 6
  3703  0239  1903               	skipnz
  3704  023A  294A               	goto	l2083
  3705  023B  2A3C               	goto	l2117
  3706  023C                     l2117:
  3707                           
  3708                           ;main.c: 144:             if(time_go){
  3709  023C  0021               	movlb	1	; select bank1
  3710  023D  0854               	movf	main@time_go^(0+128),w	;volatile
  3711  023E  1903               	btfsc	3,2
  3712  023F  2A41               	goto	u1181
  3713  0240  2A42               	goto	u1180
  3714  0241                     u1181:
  3715  0241  2A69               	goto	l2131
  3716  0242                     u1180:
  3717  0242                     l2119:
  3718                           
  3719                           ;main.c: 145:                 if(rxData != ','){
  3720  0242  302C               	movlw	44
  3721  0243  0020               	movlb	0	; select bank0
  3722  0244  0629               	xorwf	_rxData,w	;volatile
  3723  0245  1903               	btfsc	3,2
  3724  0246  2A48               	goto	u1191
  3725  0247  2A49               	goto	u1190
  3726  0248                     u1191:
  3727  0248  2A61               	goto	l2127
  3728  0249                     u1190:
  3729  0249                     l2121:
  3730                           
  3731                           ;main.c: 146:                     if(timepos < timeSize){
  3732  0249  0021               	movlb	1	; select bank1
  3733  024A  085C               	movf	main@timeSize^(0+128),w	;volatile
  3734  024B  025F               	subwf	main@timepos^(0+128),w	;volatile
  3735  024C  1803               	skipnc
  3736  024D  2A4F               	goto	u1201
  3737  024E  2A50               	goto	u1200
  3738  024F                     u1201:
  3739  024F  2A69               	goto	l2131
  3740  0250                     u1200:
  3741  0250                     l2123:
  3742                           
  3743                           ;main.c: 147:                         rx_time[timepos]=rxData;
  3744  0250  0020               	movlb	0	; select bank0
  3745  0251  0829               	movf	_rxData,w	;volatile
  3746  0252  00AC               	movwf	??_main
  3747  0253  0021               	movlb	1	; select bank1
  3748  0254  085F               	movf	main@timepos^(0+128),w
  3749  0255  3EA6               	addlw	(low (main@rx_time| 0))& (0+255)
  3750  0256  0086               	movwf	6
  3751  0257  0187               	clrf	7
  3752  0258  0020               	movlb	0	; select bank0
  3753  0259  082C               	movf	??_main,w
  3754  025A  0081               	movwf	1
  3755  025B                     l2125:
  3756                           
  3757                           ;main.c: 148:                         timepos++;
  3758  025B  3001               	movlw	1
  3759  025C  00AC               	movwf	??_main
  3760  025D  082C               	movf	??_main,w
  3761  025E  0021               	movlb	1	; select bank1
  3762  025F  07DF               	addwf	main@timepos^(0+128),f	;volatile
  3763  0260  2A69               	goto	l2131
  3764  0261                     l2127:
  3765  0261  0021               	movlb	1	; select bank1
  3766  0262  085F               	movf	main@timepos^(0+128),w	;volatile
  3767  0263  1903               	btfsc	3,2
  3768  0264  2A66               	goto	u1211
  3769  0265  2A67               	goto	u1210
  3770  0266                     u1211:
  3771  0266  2A69               	goto	l2131
  3772  0267                     u1210:
  3773  0267                     l2129:
  3774                           
  3775                           ;main.c: 151:                  time_go=0;
  3776  0267  01D4               	clrf	main@time_go^(0+128)	;volatile
  3777                           
  3778                           ;main.c: 152:                     timepos=0;
  3779  0268  01DF               	clrf	main@timepos^(0+128)	;volatile
  3780  0269                     l2131:
  3781                           
  3782                           ;main.c: 157:             if(lat_go){
  3783  0269  0855               	movf	main@lat_go^(0+128),w	;volatile
  3784  026A  1903               	btfsc	3,2
  3785  026B  2A6D               	goto	u1221
  3786  026C  2A6E               	goto	u1220
  3787  026D                     u1221:
  3788  026D  2A95               	goto	l2145
  3789  026E                     u1220:
  3790  026E                     l2133:
  3791                           
  3792                           ;main.c: 158:                 if(rxData != ','){
  3793  026E  302C               	movlw	44
  3794  026F  0020               	movlb	0	; select bank0
  3795  0270  0629               	xorwf	_rxData,w	;volatile
  3796  0271  1903               	btfsc	3,2
  3797  0272  2A74               	goto	u1231
  3798  0273  2A75               	goto	u1230
  3799  0274                     u1231:
  3800  0274  2A8D               	goto	l2141
  3801  0275                     u1230:
  3802  0275                     l2135:
  3803                           
  3804                           ;main.c: 159:                     if(latpos < latSize){
  3805  0275  0021               	movlb	1	; select bank1
  3806  0276  085D               	movf	main@latSize^(0+128),w	;volatile
  3807  0277  0260               	subwf	main@latpos^(0+128),w	;volatile
  3808  0278  1803               	skipnc
  3809  0279  2A7B               	goto	u1241
  3810  027A  2A7C               	goto	u1240
  3811  027B                     u1241:
  3812  027B  2A95               	goto	l2145
  3813  027C                     u1240:
  3814  027C                     l2137:
  3815                           
  3816                           ;main.c: 160:                         rx_lat[latpos]=rxData;
  3817  027C  0020               	movlb	0	; select bank0
  3818  027D  0829               	movf	_rxData,w	;volatile
  3819  027E  00AC               	movwf	??_main
  3820  027F  0021               	movlb	1	; select bank1
  3821  0280  0860               	movf	main@latpos^(0+128),w
  3822  0281  3EAF               	addlw	(low (main@rx_lat| 0))& (0+255)
  3823  0282  0086               	movwf	6
  3824  0283  0187               	clrf	7
  3825  0284  0020               	movlb	0	; select bank0
  3826  0285  082C               	movf	??_main,w
  3827  0286  0081               	movwf	1
  3828  0287                     l2139:
  3829                           
  3830                           ;main.c: 161:                         latpos++;
  3831  0287  3001               	movlw	1
  3832  0288  00AC               	movwf	??_main
  3833  0289  082C               	movf	??_main,w
  3834  028A  0021               	movlb	1	; select bank1
  3835  028B  07E0               	addwf	main@latpos^(0+128),f	;volatile
  3836  028C  2A95               	goto	l2145
  3837  028D                     l2141:
  3838  028D  0021               	movlb	1	; select bank1
  3839  028E  0860               	movf	main@latpos^(0+128),w	;volatile
  3840  028F  1903               	btfsc	3,2
  3841  0290  2A92               	goto	u1251
  3842  0291  2A93               	goto	u1250
  3843  0292                     u1251:
  3844  0292  2A95               	goto	l2145
  3845  0293                     u1250:
  3846  0293                     l2143:
  3847                           
  3848                           ;main.c: 164:                     lat_go=0;
  3849  0293  01D5               	clrf	main@lat_go^(0+128)	;volatile
  3850                           
  3851                           ;main.c: 165:                     latpos =0;
  3852  0294  01E0               	clrf	main@latpos^(0+128)	;volatile
  3853  0295                     l2145:
  3854                           
  3855                           ;main.c: 170:             if(ns_go){
  3856  0295  0857               	movf	main@ns_go^(0+128),w	;volatile
  3857  0296  1903               	btfsc	3,2
  3858  0297  2A99               	goto	u1261
  3859  0298  2A9A               	goto	u1260
  3860  0299                     u1261:
  3861  0299  2ABD               	goto	l2159
  3862  029A                     u1260:
  3863  029A                     l2147:
  3864                           
  3865                           ;main.c: 171:                 if(rxData != ','){
  3866  029A  302C               	movlw	44
  3867  029B  0020               	movlb	0	; select bank0
  3868  029C  0629               	xorwf	_rxData,w	;volatile
  3869  029D  1903               	btfsc	3,2
  3870  029E  2AA0               	goto	u1271
  3871  029F  2AA1               	goto	u1270
  3872  02A0                     u1271:
  3873  02A0  2AB5               	goto	l2155
  3874  02A1                     u1270:
  3875  02A1                     l2149:
  3876                           
  3877                           ;main.c: 172:                     if(nspos < nsSize){
  3878  02A1  0021               	movlb	1	; select bank1
  3879  02A2  084E               	movf	main@nsSize^(0+128),w	;volatile
  3880  02A3  025A               	subwf	main@nspos^(0+128),w	;volatile
  3881  02A4  1803               	skipnc
  3882  02A5  2AA7               	goto	u1281
  3883  02A6  2AA8               	goto	u1280
  3884  02A7                     u1281:
  3885  02A7  2ABD               	goto	l2159
  3886  02A8                     u1280:
  3887  02A8                     l2151:
  3888                           
  3889                           ;main.c: 173:                         rx_ns=rxData;
  3890  02A8  0020               	movlb	0	; select bank0
  3891  02A9  0829               	movf	_rxData,w	;volatile
  3892  02AA  00AC               	movwf	??_main
  3893  02AB  082C               	movf	??_main,w
  3894  02AC  0021               	movlb	1	; select bank1
  3895  02AD  00D0               	movwf	main@rx_ns^(0+128)	;volatile
  3896  02AE                     l2153:
  3897                           
  3898                           ;main.c: 174:                         nspos++;
  3899  02AE  3001               	movlw	1
  3900  02AF  0020               	movlb	0	; select bank0
  3901  02B0  00AC               	movwf	??_main
  3902  02B1  082C               	movf	??_main,w
  3903  02B2  0021               	movlb	1	; select bank1
  3904  02B3  07DA               	addwf	main@nspos^(0+128),f	;volatile
  3905  02B4  2ABD               	goto	l2159
  3906  02B5                     l2155:
  3907  02B5  0021               	movlb	1	; select bank1
  3908  02B6  085A               	movf	main@nspos^(0+128),w	;volatile
  3909  02B7  1903               	btfsc	3,2
  3910  02B8  2ABA               	goto	u1291
  3911  02B9  2ABB               	goto	u1290
  3912  02BA                     u1291:
  3913  02BA  2ABD               	goto	l2159
  3914  02BB                     u1290:
  3915  02BB                     l2157:
  3916                           
  3917                           ;main.c: 177:      ns_go=0;
  3918  02BB  01D7               	clrf	main@ns_go^(0+128)	;volatile
  3919                           
  3920                           ;main.c: 178:                     nspos=0;
  3921  02BC  01DA               	clrf	main@nspos^(0+128)	;volatile
  3922  02BD                     l2159:
  3923                           
  3924                           ;main.c: 183:             if(long_go){
  3925  02BD  0856               	movf	main@long_go^(0+128),w	;volatile
  3926  02BE  1903               	btfsc	3,2
  3927  02BF  2AC1               	goto	u1301
  3928  02C0  2AC2               	goto	u1300
  3929  02C1                     u1301:
  3930  02C1  2AE9               	goto	l2173
  3931  02C2                     u1300:
  3932  02C2                     l2161:
  3933                           
  3934                           ;main.c: 184:                 if(rxData != ','){
  3935  02C2  302C               	movlw	44
  3936  02C3  0020               	movlb	0	; select bank0
  3937  02C4  0629               	xorwf	_rxData,w	;volatile
  3938  02C5  1903               	btfsc	3,2
  3939  02C6  2AC8               	goto	u1311
  3940  02C7  2AC9               	goto	u1310
  3941  02C8                     u1311:
  3942  02C8  2AE1               	goto	l2169
  3943  02C9                     u1310:
  3944  02C9                     l2163:
  3945                           
  3946                           ;main.c: 185:                     if(longpos < longSize){
  3947  02C9  0021               	movlb	1	; select bank1
  3948  02CA  085E               	movf	main@longSize^(0+128),w	;volatile
  3949  02CB  0261               	subwf	main@longpos^(0+128),w	;volatile
  3950  02CC  1803               	skipnc
  3951  02CD  2ACF               	goto	u1321
  3952  02CE  2AD0               	goto	u1320
  3953  02CF                     u1321:
  3954  02CF  2AE9               	goto	l2173
  3955  02D0                     u1320:
  3956  02D0                     l2165:
  3957                           
  3958                           ;main.c: 186:                         rx_long[longpos]=rxData;
  3959  02D0  0020               	movlb	0	; select bank0
  3960  02D1  0829               	movf	_rxData,w	;volatile
  3961  02D2  00AC               	movwf	??_main
  3962  02D3  0021               	movlb	1	; select bank1
  3963  02D4  0861               	movf	main@longpos^(0+128),w
  3964  02D5  3EB8               	addlw	(low (main@rx_long| 0))& (0+255)
  3965  02D6  0086               	movwf	6
  3966  02D7  0187               	clrf	7
  3967  02D8  0020               	movlb	0	; select bank0
  3968  02D9  082C               	movf	??_main,w
  3969  02DA  0081               	movwf	1
  3970  02DB                     l2167:
  3971                           
  3972                           ;main.c: 187:                         longpos++;
  3973  02DB  3001               	movlw	1
  3974  02DC  00AC               	movwf	??_main
  3975  02DD  082C               	movf	??_main,w
  3976  02DE  0021               	movlb	1	; select bank1
  3977  02DF  07E1               	addwf	main@longpos^(0+128),f	;volatile
  3978  02E0  2AE9               	goto	l2173
  3979  02E1                     l2169:
  3980  02E1  0021               	movlb	1	; select bank1
  3981  02E2  0861               	movf	main@longpos^(0+128),w	;volatile
  3982  02E3  1903               	btfsc	3,2
  3983  02E4  2AE6               	goto	u1331
  3984  02E5  2AE7               	goto	u1330
  3985  02E6                     u1331:
  3986  02E6  2AE9               	goto	l2173
  3987  02E7                     u1330:
  3988  02E7                     l2171:
  3989                           
  3990                           ;main.c: 190:                     long_go=0;
  3991  02E7  01D6               	clrf	main@long_go^(0+128)	;volatile
  3992                           
  3993                           ;main.c: 191:                     longpos=0;
  3994  02E8  01E1               	clrf	main@longpos^(0+128)	;volatile
  3995  02E9                     l2173:
  3996                           
  3997                           ;main.c: 197:             if(ew_go){
  3998  02E9  0858               	movf	main@ew_go^(0+128),w	;volatile
  3999  02EA  1903               	btfsc	3,2
  4000  02EB  2AED               	goto	u1341
  4001  02EC  2AEE               	goto	u1340
  4002  02ED                     u1341:
  4003  02ED  2B11               	goto	l386
  4004  02EE                     u1340:
  4005  02EE                     l2175:
  4006                           
  4007                           ;main.c: 198:                 if(rxData != ','){
  4008  02EE  302C               	movlw	44
  4009  02EF  0020               	movlb	0	; select bank0
  4010  02F0  0629               	xorwf	_rxData,w	;volatile
  4011  02F1  1903               	btfsc	3,2
  4012  02F2  2AF4               	goto	u1351
  4013  02F3  2AF5               	goto	u1350
  4014  02F4                     u1351:
  4015  02F4  2B09               	goto	l2183
  4016  02F5                     u1350:
  4017  02F5                     l2177:
  4018                           
  4019                           ;main.c: 199:                     if(ewpos < ewSize){
  4020  02F5  0021               	movlb	1	; select bank1
  4021  02F6  084F               	movf	main@ewSize^(0+128),w	;volatile
  4022  02F7  025B               	subwf	main@ewpos^(0+128),w	;volatile
  4023  02F8  1803               	skipnc
  4024  02F9  2AFB               	goto	u1361
  4025  02FA  2AFC               	goto	u1360
  4026  02FB                     u1361:
  4027  02FB  2B11               	goto	l386
  4028  02FC                     u1360:
  4029  02FC                     l2179:
  4030                           
  4031                           ;main.c: 200:                         rx_ew=rxData;
  4032  02FC  0020               	movlb	0	; select bank0
  4033  02FD  0829               	movf	_rxData,w	;volatile
  4034  02FE  00AC               	movwf	??_main
  4035  02FF  082C               	movf	??_main,w
  4036  0300  0021               	movlb	1	; select bank1
  4037  0301  00D1               	movwf	main@rx_ew^(0+128)	;volatile
  4038  0302                     l2181:
  4039                           
  4040                           ;main.c: 201:                         ewpos++;
  4041  0302  3001               	movlw	1
  4042  0303  0020               	movlb	0	; select bank0
  4043  0304  00AC               	movwf	??_main
  4044  0305  082C               	movf	??_main,w
  4045  0306  0021               	movlb	1	; select bank1
  4046  0307  07DB               	addwf	main@ewpos^(0+128),f	;volatile
  4047  0308  2B11               	goto	l386
  4048  0309                     l2183:
  4049  0309  0021               	movlb	1	; select bank1
  4050  030A  085B               	movf	main@ewpos^(0+128),w	;volatile
  4051  030B  1903               	btfsc	3,2
  4052  030C  2B0E               	goto	u1371
  4053  030D  2B0F               	goto	u1370
  4054  030E                     u1371:
  4055  030E  2B11               	goto	l386
  4056  030F                     u1370:
  4057  030F                     l2185:
  4058                           
  4059                           ;main.c: 204:                     ew_go=0;
  4060  030F  01D8               	clrf	main@ew_go^(0+128)	;volatile
  4061                           
  4062                           ;main.c: 205:                     ewpos=0;
  4063  0310  01DB               	clrf	main@ewpos^(0+128)	;volatile
  4064  0311                     l386:	
  4065                           ;main.c: 207:             }
  4066                           
  4067                           
  4068                           ;main.c: 208:             uartFlag = 0;
  4069  0311  0020               	movlb	0	; select bank0
  4070  0312  01AB               	clrf	_uartFlag	;volatile
  4071  0313  28D0               	goto	l2043
  4072  0314  3180  282E         	ljmp	start
  4073  0316                     __end_of_main:
  4074                           
  4075                           	psect	text1
  4076  0432                     __ptext1:	
  4077 ;; *************** function _SYSTEM_Initialize *****************
  4078 ;; Defined at:
  4079 ;;		line 50 in file "mcc_generated_files/mcc.c"
  4080 ;; Parameters:    Size  Location     Type
  4081 ;;		None
  4082 ;; Auto vars:     Size  Location     Type
  4083 ;;		None
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      void 
  4086 ;; Registers used:
  4087 ;;		wreg, status,2, status,0, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4093 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4096 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4097 ;;Total ram usage:        0 bytes
  4098 ;; Hardware stack levels used: 1
  4099 ;; Hardware stack levels required when called: 6
  4100 ;; This function calls:
  4101 ;;		_EUSART_Initialize
  4102 ;;		_OSCILLATOR_Initialize
  4103 ;;		_PIN_MANAGER_Initialize
  4104 ;;		_PMD_Initialize
  4105 ;;		_WDT_Initialize
  4106 ;; This function is called by:
  4107 ;;		_main
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _SYSTEM_Initialize
  4113  0432                     _SYSTEM_Initialize:
  4114  0432                     l1945:	
  4115                           ;incstack = 0
  4116                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4117                           
  4118                           
  4119                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  4120  0432  3184  244B  3184   	fcall	_PMD_Initialize
  4121  0435                     l1947:
  4122                           
  4123                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  4124  0435  3183  23B7  3184   	fcall	_PIN_MANAGER_Initialize
  4125  0438                     l1949:
  4126                           
  4127                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  4128  0438  3184  2442  3184   	fcall	_OSCILLATOR_Initialize
  4129  043B                     l1951:
  4130                           
  4131                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  4132  043B  3184  247E  3184   	fcall	_WDT_Initialize
  4133  043E                     l1953:
  4134                           
  4135                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  4136  043E  3183  2316  3184   	fcall	_EUSART_Initialize
  4137  0441                     l113:
  4138  0441  0008               	return
  4139  0442                     __end_of_SYSTEM_Initialize:
  4140                           
  4141                           	psect	text2
  4142  047E                     __ptext2:	
  4143 ;; *************** function _WDT_Initialize *****************
  4144 ;; Defined at:
  4145 ;;		line 74 in file "mcc_generated_files/mcc.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;		None
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;		None
  4150 ;; Return value:  Size  Location     Type
  4151 ;;                  1    wreg      void 
  4152 ;; Registers used:
  4153 ;;		wreg
  4154 ;; Tracked objects:
  4155 ;;		On entry : 0/0
  4156 ;;		On exit  : 0/0
  4157 ;;		Unchanged: 0/0
  4158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4159 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4160 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4162 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4163 ;;Total ram usage:        0 bytes
  4164 ;; Hardware stack levels used: 1
  4165 ;; Hardware stack levels required when called: 4
  4166 ;; This function calls:
  4167 ;;		Nothing
  4168 ;; This function is called by:
  4169 ;;		_SYSTEM_Initialize
  4170 ;; This function uses a non-reentrant model
  4171 ;;
  4172                           
  4173                           
  4174                           ;psect for function _WDT_Initialize
  4175  047E                     _WDT_Initialize:
  4176  047E                     l1911:	
  4177                           ;incstack = 0
  4178                           ; Regs used in _WDT_Initialize: [wreg]
  4179                           
  4180                           
  4181                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  4182  047E  3016               	movlw	22
  4183  047F  0021               	movlb	1	; select bank1
  4184  0480  0097               	movwf	23	;volatile
  4185  0481                     l119:
  4186  0481  0008               	return
  4187  0482                     __end_of_WDT_Initialize:
  4188                           
  4189                           	psect	text3
  4190  044B                     __ptext3:	
  4191 ;; *************** function _PMD_Initialize *****************
  4192 ;; Defined at:
  4193 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4194 ;; Parameters:    Size  Location     Type
  4195 ;;		None
  4196 ;; Auto vars:     Size  Location     Type
  4197 ;;		None
  4198 ;; Return value:  Size  Location     Type
  4199 ;;                  1    wreg      void 
  4200 ;; Registers used:
  4201 ;;		status,2
  4202 ;; Tracked objects:
  4203 ;;		On entry : 0/0
  4204 ;;		On exit  : 0/0
  4205 ;;		Unchanged: 0/0
  4206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;Total ram usage:        0 bytes
  4212 ;; Hardware stack levels used: 1
  4213 ;; Hardware stack levels required when called: 4
  4214 ;; This function calls:
  4215 ;;		Nothing
  4216 ;; This function is called by:
  4217 ;;		_SYSTEM_Initialize
  4218 ;; This function uses a non-reentrant model
  4219 ;;
  4220                           
  4221                           
  4222                           ;psect for function _PMD_Initialize
  4223  044B                     _PMD_Initialize:
  4224  044B                     l1901:	
  4225                           ;incstack = 0
  4226                           ; Regs used in _PMD_Initialize: [status,2]
  4227                           
  4228                           
  4229                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  4230  044B  0032               	movlb	18	; select bank18
  4231  044C  0191               	clrf	17	;volatile
  4232                           
  4233                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  4234  044D  0192               	clrf	18	;volatile
  4235                           
  4236                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  4237  044E  0193               	clrf	19	;volatile
  4238                           
  4239                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  4240  044F  0194               	clrf	20	;volatile
  4241                           
  4242                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  4243  0450  0195               	clrf	21	;volatile
  4244                           
  4245                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  4246  0451  0196               	clrf	22	;volatile
  4247  0452                     l122:
  4248  0452  0008               	return
  4249  0453                     __end_of_PMD_Initialize:
  4250                           
  4251                           	psect	text4
  4252  03B7                     __ptext4:	
  4253 ;; *************** function _PIN_MANAGER_Initialize *****************
  4254 ;; Defined at:
  4255 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;		None
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, status,2
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4270 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4272 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4273 ;;Total ram usage:        0 bytes
  4274 ;; Hardware stack levels used: 1
  4275 ;; Hardware stack levels required when called: 4
  4276 ;; This function calls:
  4277 ;;		Nothing
  4278 ;; This function is called by:
  4279 ;;		_SYSTEM_Initialize
  4280 ;; This function uses a non-reentrant model
  4281 ;;
  4282                           
  4283                           
  4284                           ;psect for function _PIN_MANAGER_Initialize
  4285  03B7                     _PIN_MANAGER_Initialize:
  4286  03B7                     l1879:	
  4287                           ;incstack = 0
  4288                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4289                           
  4290                           
  4291                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  4292  03B7  0022               	movlb	2	; select bank2
  4293  03B8  018C               	clrf	12	;volatile
  4294                           
  4295                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  4296  03B9  018E               	clrf	14	;volatile
  4297  03BA                     l1881:
  4298                           
  4299                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x37;
  4300  03BA  3037               	movlw	55
  4301  03BB  0021               	movlb	1	; select bank1
  4302  03BC  008C               	movwf	12	;volatile
  4303  03BD                     l1883:
  4304                           
  4305                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x2F;
  4306  03BD  302F               	movlw	47
  4307  03BE  008E               	movwf	14	;volatile
  4308  03BF                     l1885:
  4309                           
  4310                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0F;
  4311  03BF  300F               	movlw	15
  4312  03C0  0023               	movlb	3	; select bank3
  4313  03C1  008E               	movwf	14	;volatile
  4314  03C2                     l1887:
  4315                           
  4316                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x37;
  4317  03C2  3037               	movlw	55
  4318  03C3  008C               	movwf	12	;volatile
  4319                           
  4320                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  4321  03C4  0024               	movlb	4	; select bank4
  4322  03C5  018C               	clrf	12	;volatile
  4323                           
  4324                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  4325  03C6  018E               	clrf	14	;volatile
  4326                           
  4327                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  4328  03C7  0025               	movlb	5	; select bank5
  4329  03C8  018C               	clrf	12	;volatile
  4330                           
  4331                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  4332  03C9  018E               	clrf	14	;volatile
  4333  03CA                     l1889:
  4334                           
  4335                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  4336  03CA  3037               	movlw	55
  4337  03CB  0026               	movlb	6	; select bank6
  4338  03CC  008C               	movwf	12	;volatile
  4339  03CD                     l1891:
  4340                           
  4341                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  4342  03CD  303F               	movlw	63
  4343  03CE  008E               	movwf	14	;volatile
  4344  03CF                     l1893:
  4345                           
  4346                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  4347  03CF  303F               	movlw	63
  4348  03D0  0027               	movlb	7	; select bank7
  4349  03D1  008C               	movwf	12	;volatile
  4350  03D2                     l1895:
  4351                           
  4352                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  4353  03D2  303F               	movlw	63
  4354  03D3  008E               	movwf	14	;volatile
  4355  03D4                     l1897:
  4356                           
  4357                           ;mcc_generated_files/pin_manager.c: 106:     RXPPS = 0x15;
  4358  03D4  3015               	movlw	21
  4359  03D5  003C               	movlb	28	; select bank28
  4360  03D6  00A4               	movwf	36	;volatile
  4361  03D7                     l1899:
  4362                           
  4363                           ;mcc_generated_files/pin_manager.c: 107:     RC4PPS = 0x14;
  4364  03D7  3014               	movlw	20
  4365  03D8  003D               	movlb	29	; select bank29
  4366  03D9  00A4               	movwf	36	;volatile
  4367  03DA                     l65:
  4368  03DA  0008               	return
  4369  03DB                     __end_of_PIN_MANAGER_Initialize:
  4370                           
  4371                           	psect	text5
  4372  0442                     __ptext5:	
  4373 ;; *************** function _OSCILLATOR_Initialize *****************
  4374 ;; Defined at:
  4375 ;;		line 60 in file "mcc_generated_files/mcc.c"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, status,2
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4393 ;;Total ram usage:        0 bytes
  4394 ;; Hardware stack levels used: 1
  4395 ;; Hardware stack levels required when called: 4
  4396 ;; This function calls:
  4397 ;;		Nothing
  4398 ;; This function is called by:
  4399 ;;		_SYSTEM_Initialize
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           
  4404                           ;psect for function _OSCILLATOR_Initialize
  4405  0442                     _OSCILLATOR_Initialize:
  4406  0442                     l1903:	
  4407                           ;incstack = 0
  4408                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4409                           
  4410                           
  4411                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  4412  0442  3062               	movlw	98
  4413  0443  0032               	movlb	18	; select bank18
  4414  0444  0099               	movwf	25	;volatile
  4415  0445                     l1905:
  4416                           
  4417                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  4418  0445  019B               	clrf	27	;volatile
  4419  0446                     l1907:
  4420                           
  4421                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  4422  0446  019D               	clrf	29	;volatile
  4423                           
  4424                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  4425  0447  3003               	movlw	3
  4426  0448  009F               	movwf	31	;volatile
  4427  0449                     l1909:
  4428                           
  4429                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  4430  0449  019E               	clrf	30	;volatile
  4431  044A                     l116:
  4432  044A  0008               	return
  4433  044B                     __end_of_OSCILLATOR_Initialize:
  4434                           
  4435                           	psect	text6
  4436  0316                     __ptext6:	
  4437 ;; *************** function _EUSART_Initialize *****************
  4438 ;; Defined at:
  4439 ;;		line 88 in file "mcc_generated_files/eusart.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;		None
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;		None
  4444 ;; Return value:  Size  Location     Type
  4445 ;;                  1    wreg      void 
  4446 ;; Registers used:
  4447 ;;		wreg, status,2, status,0, pclath, cstack
  4448 ;; Tracked objects:
  4449 ;;		On entry : 0/0
  4450 ;;		On exit  : 0/0
  4451 ;;		Unchanged: 0/0
  4452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4453 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4454 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4455 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4456 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4457 ;;Total ram usage:        1 bytes
  4458 ;; Hardware stack levels used: 1
  4459 ;; Hardware stack levels required when called: 5
  4460 ;; This function calls:
  4461 ;;		_EUSART_SetErrorHandler
  4462 ;;		_EUSART_SetFramingErrorHandler
  4463 ;;		_EUSART_SetOverrunErrorHandler
  4464 ;;		_EUSART_SetRxInterruptHandler
  4465 ;;		_EUSART_SetTxInterruptHandler
  4466 ;; This function is called by:
  4467 ;;		_SYSTEM_Initialize
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           
  4472                           ;psect for function _EUSART_Initialize
  4473  0316                     _EUSART_Initialize:
  4474  0316                     l1913:	
  4475                           ;incstack = 0
  4476                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4477                           
  4478                           
  4479                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  4480  0316  0021               	movlb	1	; select bank1
  4481  0317  1291               	bcf	17,5	;volatile
  4482  0318                     l1915:
  4483                           
  4484                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  4485  0318  3055               	movlw	low _EUSART_Receive_ISR
  4486  0319  00F9               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  4487  031A  3003               	movlw	high _EUSART_Receive_ISR
  4488  031B  00FA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4489  031C  3184  2466  3183   	fcall	_EUSART_SetRxInterruptHandler
  4490  031F                     l1917:
  4491                           
  4492                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4493  031F  0021               	movlb	1	; select bank1
  4494  0320  1211               	bcf	17,4	;volatile
  4495                           
  4496                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4497  0321  30DB               	movlw	low _EUSART_Transmit_ISR
  4498  0322  00F9               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4499  0323  3003               	movlw	high _EUSART_Transmit_ISR
  4500  0324  00FA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4501  0325  3184  2460  3183   	fcall	_EUSART_SetTxInterruptHandler
  4502  0328                     l1919:
  4503                           
  4504                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
  4505  0328  3008               	movlw	8
  4506  0329  0023               	movlb	3	; select bank3
  4507  032A  009F               	movwf	31	;volatile
  4508  032B                     l1921:
  4509                           
  4510                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
  4511  032B  3090               	movlw	144
  4512  032C  009D               	movwf	29	;volatile
  4513  032D                     l1923:
  4514                           
  4515                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  4516  032D  3024               	movlw	36
  4517  032E  009E               	movwf	30	;volatile
  4518  032F                     l1925:
  4519                           
  4520                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
  4521  032F  3019               	movlw	25
  4522  0330  009B               	movwf	27	;volatile
  4523  0331                     l1927:
  4524                           
  4525                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
  4526  0331  019C               	clrf	28	;volatile
  4527  0332                     l1929:
  4528                           
  4529                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4530  0332  308A               	movlw	low _EUSART_DefaultFramingErrorHandler
  4531  0333  00F9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4532  0334  3004               	movlw	high _EUSART_DefaultFramingErrorHandler
  4533  0335  00FA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4534  0336  3184  2472  3183   	fcall	_EUSART_SetFramingErrorHandler
  4535  0339                     l1931:
  4536                           
  4537                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4538  0339  3082               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4539  033A  00F9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4540  033B  3004               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4541  033C  00FA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4542  033D  3184  246C  3183   	fcall	_EUSART_SetOverrunErrorHandler
  4543  0340                     l1933:
  4544                           
  4545                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4546  0340  3086               	movlw	low _EUSART_DefaultErrorHandler
  4547  0341  00F9               	movwf	EUSART_SetErrorHandler@interruptHandler
  4548  0342  3004               	movlw	high _EUSART_DefaultErrorHandler
  4549  0343  00FA               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4550  0344  3184  2478  3183   	fcall	_EUSART_SetErrorHandler
  4551                           
  4552                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4553  0347  0020               	movlb	0	; select bank0
  4554  0348  01A8               	clrf	_eusartRxLastError	;volatile
  4555                           
  4556                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4557  0349  01F6               	clrf	_eusartTxHead	;volatile
  4558                           
  4559                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4560  034A  01F5               	clrf	_eusartTxTail	;volatile
  4561  034B                     l1935:
  4562                           
  4563                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4564  034B  3008               	movlw	8
  4565  034C  00FB               	movwf	??_EUSART_Initialize
  4566  034D  087B               	movf	??_EUSART_Initialize,w
  4567  034E  00AE               	movwf	_eusartTxBufferRemaining	;volatile
  4568  034F                     l1937:
  4569                           
  4570                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4571  034F  01F4               	clrf	_eusartRxHead	;volatile
  4572  0350                     l1939:
  4573                           
  4574                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4575  0350  01F3               	clrf	_eusartRxTail	;volatile
  4576  0351                     l1941:
  4577                           
  4578                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4579  0351  01F0               	clrf	_eusartRxCount	;volatile
  4580  0352                     l1943:
  4581                           
  4582                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4583  0352  0021               	movlb	1	; select bank1
  4584  0353  1691               	bsf	17,5	;volatile
  4585  0354                     l234:
  4586  0354  0008               	return
  4587  0355                     __end_of_EUSART_Initialize:
  4588                           
  4589                           	psect	text7
  4590  0460                     __ptext7:	
  4591 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4592 ;; Defined at:
  4593 ;;		line 292 in file "mcc_generated_files/eusart.c"
  4594 ;; Parameters:    Size  Location     Type
  4595 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4596 ;;		 -> EUSART_Transmit_ISR(1), 
  4597 ;; Auto vars:     Size  Location     Type
  4598 ;;		None
  4599 ;; Return value:  Size  Location     Type
  4600 ;;                  1    wreg      void 
  4601 ;; Registers used:
  4602 ;;		wreg
  4603 ;; Tracked objects:
  4604 ;;		On entry : 0/0
  4605 ;;		On exit  : 0/0
  4606 ;;		Unchanged: 0/0
  4607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4608 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4611 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4612 ;;Total ram usage:        2 bytes
  4613 ;; Hardware stack levels used: 1
  4614 ;; Hardware stack levels required when called: 4
  4615 ;; This function calls:
  4616 ;;		Nothing
  4617 ;; This function is called by:
  4618 ;;		_EUSART_Initialize
  4619 ;; This function uses a non-reentrant model
  4620 ;;
  4621                           
  4622                           
  4623                           ;psect for function _EUSART_SetTxInterruptHandler
  4624  0460                     _EUSART_SetTxInterruptHandler:
  4625  0460                     l1871:	
  4626                           ;incstack = 0
  4627                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4628                           
  4629                           
  4630                           ;mcc_generated_files/eusart.c: 293:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4631  0460  087A               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4632  0461  0021               	movlb	1	; select bank1
  4633  0462  00EC               	movwf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128)
  4634  0463  0879               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4635  0464  00EB               	movwf	_EUSART_TxDefaultInterruptHandler^(0+128)
  4636  0465                     l306:
  4637  0465  0008               	return
  4638  0466                     __end_of_EUSART_SetTxInterruptHandler:
  4639                           
  4640                           	psect	text8
  4641  0466                     __ptext8:	
  4642 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4643 ;; Defined at:
  4644 ;;		line 296 in file "mcc_generated_files/eusart.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4647 ;;		 -> EUSART_Receive_ISR(1), 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4663 ;;Total ram usage:        2 bytes
  4664 ;; Hardware stack levels used: 1
  4665 ;; Hardware stack levels required when called: 4
  4666 ;; This function calls:
  4667 ;;		Nothing
  4668 ;; This function is called by:
  4669 ;;		_EUSART_Initialize
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           
  4674                           ;psect for function _EUSART_SetRxInterruptHandler
  4675  0466                     _EUSART_SetRxInterruptHandler:
  4676  0466                     l1869:	
  4677                           ;incstack = 0
  4678                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4679                           
  4680                           
  4681                           ;mcc_generated_files/eusart.c: 297:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4682  0466  087A               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4683  0467  0021               	movlb	1	; select bank1
  4684  0468  00EA               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  4685  0469  0879               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4686  046A  00E9               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  4687  046B                     l309:
  4688  046B  0008               	return
  4689  046C                     __end_of_EUSART_SetRxInterruptHandler:
  4690                           
  4691                           	psect	text9
  4692  046C                     __ptext9:	
  4693 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4694 ;; Defined at:
  4695 ;;		line 284 in file "mcc_generated_files/eusart.c"
  4696 ;; Parameters:    Size  Location     Type
  4697 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4698 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4699 ;; Auto vars:     Size  Location     Type
  4700 ;;		None
  4701 ;; Return value:  Size  Location     Type
  4702 ;;                  1    wreg      void 
  4703 ;; Registers used:
  4704 ;;		wreg
  4705 ;; Tracked objects:
  4706 ;;		On entry : 0/0
  4707 ;;		On exit  : 0/0
  4708 ;;		Unchanged: 0/0
  4709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4714 ;;Total ram usage:        2 bytes
  4715 ;; Hardware stack levels used: 1
  4716 ;; Hardware stack levels required when called: 4
  4717 ;; This function calls:
  4718 ;;		Nothing
  4719 ;; This function is called by:
  4720 ;;		_EUSART_Initialize
  4721 ;; This function uses a non-reentrant model
  4722 ;;
  4723                           
  4724                           
  4725                           ;psect for function _EUSART_SetOverrunErrorHandler
  4726  046C                     _EUSART_SetOverrunErrorHandler:
  4727  046C                     l1875:	
  4728                           ;incstack = 0
  4729                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4730                           
  4731                           
  4732                           ;mcc_generated_files/eusart.c: 285:     EUSART_OverrunErrorHandler = interruptHandler;
  4733  046C  087A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4734  046D  0021               	movlb	1	; select bank1
  4735  046E  00E6               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4736  046F  0879               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4737  0470  00E5               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4738  0471                     l300:
  4739  0471  0008               	return
  4740  0472                     __end_of_EUSART_SetOverrunErrorHandler:
  4741                           
  4742                           	psect	text10
  4743  0472                     __ptext10:	
  4744 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4745 ;; Defined at:
  4746 ;;		line 280 in file "mcc_generated_files/eusart.c"
  4747 ;; Parameters:    Size  Location     Type
  4748 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4749 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;		None
  4752 ;; Return value:  Size  Location     Type
  4753 ;;                  1    wreg      void 
  4754 ;; Registers used:
  4755 ;;		wreg
  4756 ;; Tracked objects:
  4757 ;;		On entry : 0/0
  4758 ;;		On exit  : 0/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4765 ;;Total ram usage:        2 bytes
  4766 ;; Hardware stack levels used: 1
  4767 ;; Hardware stack levels required when called: 4
  4768 ;; This function calls:
  4769 ;;		Nothing
  4770 ;; This function is called by:
  4771 ;;		_EUSART_Initialize
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _EUSART_SetFramingErrorHandler
  4777  0472                     _EUSART_SetFramingErrorHandler:
  4778  0472                     l1873:	
  4779                           ;incstack = 0
  4780                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4781                           
  4782                           
  4783                           ;mcc_generated_files/eusart.c: 281:     EUSART_FramingErrorHandler = interruptHandler;
  4784  0472  087A               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4785  0473  0021               	movlb	1	; select bank1
  4786  0474  00E8               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4787  0475  0879               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4788  0476  00E7               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4789  0477                     l297:
  4790  0477  0008               	return
  4791  0478                     __end_of_EUSART_SetFramingErrorHandler:
  4792                           
  4793                           	psect	text11
  4794  0478                     __ptext11:	
  4795 ;; *************** function _EUSART_SetErrorHandler *****************
  4796 ;; Defined at:
  4797 ;;		line 288 in file "mcc_generated_files/eusart.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4800 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  1    wreg      void 
  4805 ;; Registers used:
  4806 ;;		wreg
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4813 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4815 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4816 ;;Total ram usage:        2 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 4
  4819 ;; This function calls:
  4820 ;;		Nothing
  4821 ;; This function is called by:
  4822 ;;		_EUSART_Initialize
  4823 ;; This function uses a non-reentrant model
  4824 ;;
  4825                           
  4826                           
  4827                           ;psect for function _EUSART_SetErrorHandler
  4828  0478                     _EUSART_SetErrorHandler:
  4829  0478                     l1877:	
  4830                           ;incstack = 0
  4831                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4832                           
  4833                           
  4834                           ;mcc_generated_files/eusart.c: 289:     EUSART_ErrorHandler = interruptHandler;
  4835  0478  087A               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4836  0479  0021               	movlb	1	; select bank1
  4837  047A  00E4               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4838  047B  0879               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4839  047C  00E3               	movwf	_EUSART_ErrorHandler^(0+128)
  4840  047D                     l303:
  4841  047D  0008               	return
  4842  047E                     __end_of_EUSART_SetErrorHandler:
  4843                           
  4844                           	psect	text12
  4845  038E                     __ptext12:	
  4846 ;; *************** function _EUSART_Write *****************
  4847 ;; Defined at:
  4848 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;  txData          1    1[COMMON] unsigned char 
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4862 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4863 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4864 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4865 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4866 ;;Total ram usage:        2 bytes
  4867 ;; Hardware stack levels used: 1
  4868 ;; Hardware stack levels required when called: 4
  4869 ;; This function calls:
  4870 ;;		Nothing
  4871 ;; This function is called by:
  4872 ;;		_main
  4873 ;;		_putch
  4874 ;; This function uses a non-reentrant model
  4875 ;;
  4876                           
  4877                           
  4878                           ;psect for function _EUSART_Write
  4879  038E                     _EUSART_Write:
  4880  038E                     l1955:	
  4881                           ;incstack = 0
  4882                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4883                           
  4884  038E                     l1957:	
  4885                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4886                           
  4887                           
  4888                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4889  038E  0020               	movlb	0	; select bank0
  4890  038F  082E               	movf	_eusartTxBufferRemaining,w	;volatile
  4891  0390  1903               	btfsc	3,2
  4892  0391  2B93               	goto	u1011
  4893  0392  2B94               	goto	u1010
  4894  0393                     u1011:
  4895  0393  2B8E               	goto	l1957
  4896  0394                     u1010:
  4897  0394                     l258:
  4898                           
  4899                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4900  0394  0021               	movlb	1	; select bank1
  4901  0395  1A11               	btfsc	17,4	;volatile
  4902  0396  2B98               	goto	u1021
  4903  0397  2B99               	goto	u1020
  4904  0398                     u1021:
  4905  0398  2B9D               	goto	l259
  4906  0399                     u1020:
  4907  0399                     l1959:
  4908                           
  4909                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  4910  0399  0879               	movf	EUSART_Write@txData,w
  4911  039A  0023               	movlb	3	; select bank3
  4912  039B  009A               	movwf	26	;volatile
  4913                           
  4914                           ;mcc_generated_files/eusart.c: 182:     }
  4915  039C  2BB4               	goto	l1971
  4916  039D                     l259:	
  4917                           ;mcc_generated_files/eusart.c: 183:     else
  4918                           
  4919                           
  4920                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4921  039D  1211               	bcf	17,4	;volatile
  4922  039E                     l1961:
  4923                           
  4924                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4925  039E  0879               	movf	EUSART_Write@txData,w
  4926  039F  00FA               	movwf	??_EUSART_Write
  4927  03A0  0876               	movf	_eusartTxHead,w
  4928  03A1  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4929  03A2  0086               	movwf	6
  4930  03A3  0187               	clrf	7
  4931  03A4  087A               	movf	??_EUSART_Write,w
  4932  03A5  0081               	movwf	1
  4933  03A6                     l1963:
  4934  03A6  3001               	movlw	1
  4935  03A7  00FA               	movwf	??_EUSART_Write
  4936  03A8  087A               	movf	??_EUSART_Write,w
  4937  03A9  07F6               	addwf	_eusartTxHead,f	;volatile
  4938  03AA                     l1965:
  4939                           
  4940                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4941  03AA  3008               	movlw	8
  4942  03AB  0276               	subwf	_eusartTxHead,w	;volatile
  4943  03AC  1C03               	skipc
  4944  03AD  2BAF               	goto	u1031
  4945  03AE  2BB0               	goto	u1030
  4946  03AF                     u1031:
  4947  03AF  2BB1               	goto	l1969
  4948  03B0                     u1030:
  4949  03B0                     l1967:
  4950                           
  4951                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4952  03B0  01F6               	clrf	_eusartTxHead	;volatile
  4953  03B1                     l1969:
  4954                           
  4955                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4956  03B1  3001               	movlw	1
  4957  03B2  0020               	movlb	0	; select bank0
  4958  03B3  02AE               	subwf	_eusartTxBufferRemaining,f	;volatile
  4959  03B4                     l1971:
  4960                           
  4961                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4962  03B4  0021               	movlb	1	; select bank1
  4963  03B5  1611               	bsf	17,4	;volatile
  4964  03B6                     l262:
  4965  03B6  0008               	return
  4966  03B7                     __end_of_EUSART_Write:
  4967                           
  4968                           	psect	intentry
  4969  0004                     __pintentry:	
  4970 ;; *************** function _INTERRUPT_InterruptManager *****************
  4971 ;; Defined at:
  4972 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4973 ;; Parameters:    Size  Location     Type
  4974 ;;		None
  4975 ;; Auto vars:     Size  Location     Type
  4976 ;;		None
  4977 ;; Return value:  Size  Location     Type
  4978 ;;                  1    wreg      void 
  4979 ;; Registers used:
  4980 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4981 ;; Tracked objects:
  4982 ;;		On entry : 0/0
  4983 ;;		On exit  : 0/0
  4984 ;;		Unchanged: 0/0
  4985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4990 ;;Total ram usage:        0 bytes
  4991 ;; Hardware stack levels used: 1
  4992 ;; Hardware stack levels required when called: 3
  4993 ;; This function calls:
  4994 ;;		Absolute function
  4995 ;;		_EUSART_Receive_ISR
  4996 ;;		_EUSART_Transmit_ISR
  4997 ;; This function is called by:
  4998 ;;		Interrupt level 1
  4999 ;; This function uses a non-reentrant model
  5000 ;;
  5001                           
  5002  0004                     _INTERRUPT_InterruptManager:
  5003                           
  5004                           ;incstack = 0
  5005  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  5006                           
  5007                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5008  0005  3180               	pagesel	$
  5009  0006                     i1l1615:
  5010                           
  5011                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  5012  0006  1F0B               	btfss	11,6	;volatile
  5013  0007  2809               	goto	u62_21
  5014  0008  280A               	goto	u62_20
  5015  0009                     u62_21:
  5016  0009  282C               	goto	i1l151
  5017  000A                     u62_20:
  5018  000A                     i1l1617:
  5019                           
  5020                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  5021  000A  0021               	movlb	1	; select bank1
  5022  000B  1E11               	btfss	17,4	;volatile
  5023  000C  280E               	goto	u63_21
  5024  000D  280F               	goto	u63_20
  5025  000E                     u63_21:
  5026  000E  281B               	goto	i1l146
  5027  000F                     u63_20:
  5028  000F                     i1l1619:
  5029  000F  0020               	movlb	0	; select bank0
  5030  0010  1E11               	btfss	17,4	;volatile
  5031  0011  2813               	goto	u64_21
  5032  0012  2814               	goto	u64_20
  5033  0013                     u64_21:
  5034  0013  281B               	goto	i1l146
  5035  0014                     u64_20:
  5036  0014                     i1l1621:
  5037                           
  5038                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  5039  0014  0021               	movlb	1	; select bank1
  5040  0015  086C               	movf	(_EUSART_TxDefaultInterruptHandler+1)^(0+128),w
  5041  0016  008A               	movwf	10
  5042  0017  086B               	movf	_EUSART_TxDefaultInterruptHandler^(0+128),w
  5043  0018  000A               	callw
  5044  0019  3180               	pagesel	$
  5045                           
  5046                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  5047  001A  282C               	goto	i1l151
  5048  001B                     i1l146:	
  5049                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  5050                           
  5051  001B  0021               	movlb	1	; select bank1
  5052  001C  1E91               	btfss	17,5	;volatile
  5053  001D  281F               	goto	u65_21
  5054  001E  2820               	goto	u65_20
  5055  001F                     u65_21:
  5056  001F  282C               	goto	i1l147
  5057  0020                     u65_20:
  5058  0020                     i1l1623:
  5059  0020  0020               	movlb	0	; select bank0
  5060  0021  1E91               	btfss	17,5	;volatile
  5061  0022  2824               	goto	u66_21
  5062  0023  2825               	goto	u66_20
  5063  0024                     u66_21:
  5064  0024  282C               	goto	i1l147
  5065  0025                     u66_20:
  5066  0025                     i1l1625:
  5067                           
  5068                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  5069  0025  0021               	movlb	1	; select bank1
  5070  0026  086A               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  5071  0027  008A               	movwf	10
  5072  0028  0869               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  5073  0029  000A               	callw
  5074  002A  3180               	pagesel	$
  5075                           
  5076                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  5077  002B  282C               	goto	i1l151
  5078  002C                     i1l147:
  5079  002C                     i1l151:	
  5080                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  5081                           
  5082  002C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  5083  002D  0009               	retfie
  5084  002E                     __end_of_INTERRUPT_InterruptManager:
  5085                           
  5086                           	psect	text14
  5087  03DB                     __ptext14:	
  5088 ;; *************** function _EUSART_Transmit_ISR *****************
  5089 ;; Defined at:
  5090 ;;		line 206 in file "mcc_generated_files/eusart.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;		None
  5095 ;; Return value:  Size  Location     Type
  5096 ;;                  1    wreg      void 
  5097 ;; Registers used:
  5098 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5106 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5107 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5108 ;;Total ram usage:        1 bytes
  5109 ;; Hardware stack levels used: 1
  5110 ;; This function calls:
  5111 ;;		Nothing
  5112 ;; This function is called by:
  5113 ;;		_EUSART_Initialize
  5114 ;;		_INTERRUPT_InterruptManager
  5115 ;; This function uses a non-reentrant model
  5116 ;;
  5117                           
  5118                           
  5119                           ;psect for function _EUSART_Transmit_ISR
  5120  03DB                     _EUSART_Transmit_ISR:
  5121  03DB                     i1l1583:	
  5122                           ;incstack = 0
  5123                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  5124                           
  5125                           
  5126                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  5127  03DB  3008               	movlw	8
  5128  03DC  0020               	movlb	0	; select bank0
  5129  03DD  022E               	subwf	_eusartTxBufferRemaining,w	;volatile
  5130  03DE  1803               	skipnc
  5131  03DF  2BE1               	goto	u57_21
  5132  03E0  2BE2               	goto	u57_20
  5133  03E1                     u57_21:
  5134  03E1  2BFA               	goto	i1l271
  5135  03E2                     u57_20:
  5136  03E2                     i1l1585:
  5137                           
  5138                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  5139  03E2  0875               	movf	_eusartTxTail,w
  5140  03E3  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  5141  03E4  0086               	movwf	6
  5142  03E5  0187               	clrf	7
  5143  03E6  0801               	movf	1,w
  5144  03E7  0023               	movlb	3	; select bank3
  5145  03E8  009A               	movwf	26	;volatile
  5146  03E9                     i1l1587:
  5147  03E9  3001               	movlw	1
  5148  03EA  00F8               	movwf	??_EUSART_Transmit_ISR
  5149  03EB  0878               	movf	??_EUSART_Transmit_ISR,w
  5150  03EC  07F5               	addwf	_eusartTxTail,f	;volatile
  5151  03ED                     i1l1589:
  5152                           
  5153                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  5154  03ED  3008               	movlw	8
  5155  03EE  0275               	subwf	_eusartTxTail,w	;volatile
  5156  03EF  1C03               	skipc
  5157  03F0  2BF2               	goto	u58_21
  5158  03F1  2BF3               	goto	u58_20
  5159  03F2                     u58_21:
  5160  03F2  2BF4               	goto	i1l1593
  5161  03F3                     u58_20:
  5162  03F3                     i1l1591:
  5163                           
  5164                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  5165  03F3  01F5               	clrf	_eusartTxTail	;volatile
  5166  03F4                     i1l1593:
  5167                           
  5168                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  5169  03F4  3001               	movlw	1
  5170  03F5  00F8               	movwf	??_EUSART_Transmit_ISR
  5171  03F6  0878               	movf	??_EUSART_Transmit_ISR,w
  5172  03F7  0020               	movlb	0	; select bank0
  5173  03F8  07AE               	addwf	_eusartTxBufferRemaining,f	;volatile
  5174                           
  5175                           ;mcc_generated_files/eusart.c: 218:     }
  5176  03F9  2BFC               	goto	i1l274
  5177  03FA                     i1l271:	
  5178                           ;mcc_generated_files/eusart.c: 219:     else
  5179                           
  5180                           
  5181                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  5182  03FA  0021               	movlb	1	; select bank1
  5183  03FB  1211               	bcf	17,4	;volatile
  5184  03FC                     i1l274:
  5185  03FC  0008               	return
  5186  03FD                     __end_of_EUSART_Transmit_ISR:
  5187                           
  5188                           	psect	text15
  5189  0355                     __ptext15:	
  5190 ;; *************** function _EUSART_Receive_ISR *****************
  5191 ;; Defined at:
  5192 ;;		line 225 in file "mcc_generated_files/eusart.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;		None
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;		None
  5197 ;; Return value:  Size  Location     Type
  5198 ;;                  1    wreg      void 
  5199 ;; Registers used:
  5200 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5201 ;; Tracked objects:
  5202 ;;		On entry : 0/0
  5203 ;;		On exit  : 0/0
  5204 ;;		Unchanged: 0/0
  5205 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5206 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5207 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5209 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5210 ;;Total ram usage:        0 bytes
  5211 ;; Hardware stack levels used: 1
  5212 ;; Hardware stack levels required when called: 2
  5213 ;; This function calls:
  5214 ;;		Absolute function
  5215 ;;		_EUSART_DefaultErrorHandler
  5216 ;;		_EUSART_DefaultFramingErrorHandler
  5217 ;;		_EUSART_DefaultOverrunErrorHandler
  5218 ;;		_EUSART_RxDataHandler
  5219 ;; This function is called by:
  5220 ;;		_EUSART_Initialize
  5221 ;;		_INTERRUPT_InterruptManager
  5222 ;; This function uses a non-reentrant model
  5223 ;;
  5224                           
  5225                           
  5226                           ;psect for function _EUSART_Receive_ISR
  5227  0355                     _EUSART_Receive_ISR:
  5228  0355                     i1l1595:	
  5229                           ;incstack = 0
  5230                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  5231                           
  5232                           
  5233                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  5234  0355  0874               	movf	_eusartRxHead,w	;volatile
  5235  0356  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5236  0357  0086               	movwf	6
  5237  0358  0187               	clrf	7
  5238  0359  0181               	clrf	1
  5239  035A                     i1l1597:
  5240                           
  5241                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
  5242  035A  0023               	movlb	3	; select bank3
  5243  035B  1D1D               	btfss	29,2	;volatile
  5244  035C  2B5E               	goto	u59_21
  5245  035D  2B5F               	goto	u59_20
  5246  035E                     u59_21:
  5247  035E  2B6A               	goto	i1l1603
  5248  035F                     u59_20:
  5249  035F                     i1l1599:
  5250                           
  5251                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  5252  035F  0874               	movf	_eusartRxHead,w	;volatile
  5253  0360  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5254  0361  0086               	movwf	6
  5255  0362  0187               	clrf	7
  5256  0363  1481               	bsf	1,1
  5257  0364                     i1l1601:
  5258                           
  5259                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  5260  0364  0021               	movlb	1	; select bank1
  5261  0365  0868               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  5262  0366  008A               	movwf	10
  5263  0367  0867               	movf	_EUSART_FramingErrorHandler^(0+128),w
  5264  0368  000A               	callw
  5265  0369  3183               	pagesel	$
  5266  036A                     i1l1603:
  5267                           
  5268                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
  5269  036A  0023               	movlb	3	; select bank3
  5270  036B  1C9D               	btfss	29,1	;volatile
  5271  036C  2B6E               	goto	u60_21
  5272  036D  2B6F               	goto	u60_20
  5273  036E                     u60_21:
  5274  036E  2B7A               	goto	i1l1609
  5275  036F                     u60_20:
  5276  036F                     i1l1605:
  5277                           
  5278                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  5279  036F  0874               	movf	_eusartRxHead,w	;volatile
  5280  0370  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5281  0371  0086               	movwf	6
  5282  0372  0187               	clrf	7
  5283  0373  1501               	bsf	1,2
  5284  0374                     i1l1607:
  5285                           
  5286                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  5287  0374  0021               	movlb	1	; select bank1
  5288  0375  0866               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  5289  0376  008A               	movwf	10
  5290  0377  0865               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  5291  0378  000A               	callw
  5292  0379  3183               	pagesel	$
  5293  037A                     i1l1609:
  5294                           
  5295                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  5296  037A  0874               	movf	_eusartRxHead,w	;volatile
  5297  037B  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  5298  037C  0086               	movwf	6
  5299  037D  0187               	clrf	7
  5300  037E  0801               	movf	1,w
  5301  037F  1903               	btfsc	3,2
  5302  0380  2B82               	goto	u61_21
  5303  0381  2B83               	goto	u61_20
  5304  0382                     u61_21:
  5305  0382  2B8A               	goto	i1l1613
  5306  0383                     u61_20:
  5307  0383                     i1l1611:
  5308                           
  5309                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  5310  0383  0021               	movlb	1	; select bank1
  5311  0384  0864               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  5312  0385  008A               	movwf	10
  5313  0386  0863               	movf	_EUSART_ErrorHandler^(0+128),w
  5314  0387  000A               	callw
  5315  0388  3183               	pagesel	$
  5316                           
  5317                           ;mcc_generated_files/eusart.c: 242:     } else {
  5318  0389  2B8D               	goto	i1l281
  5319  038A                     i1l1613:
  5320                           
  5321                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  5322  038A  3183  23FD  3183   	fcall	_EUSART_RxDataHandler
  5323  038D                     i1l281:
  5324  038D  0008               	return
  5325  038E                     __end_of_EUSART_Receive_ISR:
  5326                           
  5327                           	psect	text16
  5328  0482                     __ptext16:	
  5329 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  5330 ;; Defined at:
  5331 ;;		line 268 in file "mcc_generated_files/eusart.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		None
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5348 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5349 ;;Total ram usage:        0 bytes
  5350 ;; Hardware stack levels used: 1
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_EUSART_Initialize
  5355 ;;		_EUSART_Receive_ISR
  5356 ;; This function uses a non-reentrant model
  5357 ;;
  5358                           
  5359                           
  5360                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  5361  0482                     _EUSART_DefaultOverrunErrorHandler:
  5362  0482                     i1l1529:	
  5363                           ;incstack = 0
  5364                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  5365                           
  5366                           
  5367                           ;mcc_generated_files/eusart.c: 271:     RC1STAbits.CREN = 0;
  5368  0482  0023               	movlb	3	; select bank3
  5369  0483  121D               	bcf	29,4	;volatile
  5370                           
  5371                           ;mcc_generated_files/eusart.c: 272:     RC1STAbits.CREN = 1;
  5372  0484  161D               	bsf	29,4	;volatile
  5373  0485                     i1l291:
  5374  0485  0008               	return
  5375  0486                     __end_of_EUSART_DefaultOverrunErrorHandler:
  5376                           
  5377                           	psect	text17
  5378  048A                     __ptext17:	
  5379 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  5380 ;; Defined at:
  5381 ;;		line 266 in file "mcc_generated_files/eusart.c"
  5382 ;; Parameters:    Size  Location     Type
  5383 ;;		None
  5384 ;; Auto vars:     Size  Location     Type
  5385 ;;		None
  5386 ;; Return value:  Size  Location     Type
  5387 ;;                  1    wreg      void 
  5388 ;; Registers used:
  5389 ;;		None
  5390 ;; Tracked objects:
  5391 ;;		On entry : 0/0
  5392 ;;		On exit  : 0/0
  5393 ;;		Unchanged: 0/0
  5394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5396 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5398 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5399 ;;Total ram usage:        0 bytes
  5400 ;; Hardware stack levels used: 1
  5401 ;; This function calls:
  5402 ;;		Nothing
  5403 ;; This function is called by:
  5404 ;;		_EUSART_Initialize
  5405 ;;		_EUSART_Receive_ISR
  5406 ;; This function uses a non-reentrant model
  5407 ;;
  5408                           
  5409                           
  5410                           ;psect for function _EUSART_DefaultFramingErrorHandler
  5411  048A                     _EUSART_DefaultFramingErrorHandler:
  5412  048A                     i1l288:	
  5413                           ;incstack = 0
  5414                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  5415                           
  5416  048A  0008               	return
  5417  048B                     __end_of_EUSART_DefaultFramingErrorHandler:
  5418                           
  5419                           	psect	text18
  5420  0486                     __ptext18:	
  5421 ;; *************** function _EUSART_DefaultErrorHandler *****************
  5422 ;; Defined at:
  5423 ;;		line 276 in file "mcc_generated_files/eusart.c"
  5424 ;; Parameters:    Size  Location     Type
  5425 ;;		None
  5426 ;; Auto vars:     Size  Location     Type
  5427 ;;		None
  5428 ;; Return value:  Size  Location     Type
  5429 ;;                  1    wreg      void 
  5430 ;; Registers used:
  5431 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5432 ;; Tracked objects:
  5433 ;;		On entry : 0/0
  5434 ;;		On exit  : 0/0
  5435 ;;		Unchanged: 0/0
  5436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5441 ;;Total ram usage:        0 bytes
  5442 ;; Hardware stack levels used: 1
  5443 ;; Hardware stack levels required when called: 1
  5444 ;; This function calls:
  5445 ;;		_EUSART_RxDataHandler
  5446 ;; This function is called by:
  5447 ;;		_EUSART_Initialize
  5448 ;;		_EUSART_Receive_ISR
  5449 ;; This function uses a non-reentrant model
  5450 ;;
  5451                           
  5452                           
  5453                           ;psect for function _EUSART_DefaultErrorHandler
  5454  0486                     _EUSART_DefaultErrorHandler:
  5455  0486                     i1l1531:	
  5456                           ;incstack = 0
  5457                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  5458                           
  5459                           
  5460                           ;mcc_generated_files/eusart.c: 277:     EUSART_RxDataHandler();
  5461  0486  3183  23FD  3184   	fcall	_EUSART_RxDataHandler
  5462  0489                     i1l294:
  5463  0489  0008               	return
  5464  048A                     __end_of_EUSART_DefaultErrorHandler:
  5465                           
  5466                           	psect	text19
  5467  03FD                     __ptext19:	
  5468 ;; *************** function _EUSART_RxDataHandler *****************
  5469 ;; Defined at:
  5470 ;;		line 251 in file "mcc_generated_files/eusart.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;		None
  5473 ;; Auto vars:     Size  Location     Type
  5474 ;;		None
  5475 ;; Return value:  Size  Location     Type
  5476 ;;                  1    wreg      void 
  5477 ;; Registers used:
  5478 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  5479 ;; Tracked objects:
  5480 ;;		On entry : 0/0
  5481 ;;		On exit  : 0/0
  5482 ;;		Unchanged: 0/0
  5483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5486 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5487 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5488 ;;Total ram usage:        1 bytes
  5489 ;; Hardware stack levels used: 1
  5490 ;; This function calls:
  5491 ;;		Nothing
  5492 ;; This function is called by:
  5493 ;;		_EUSART_Receive_ISR
  5494 ;;		_EUSART_DefaultErrorHandler
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _EUSART_RxDataHandler
  5500  03FD                     _EUSART_RxDataHandler:
  5501  03FD                     i1l1451:	
  5502                           ;incstack = 0
  5503                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5504                           
  5505                           
  5506                           ;mcc_generated_files/eusart.c: 254:         rxData = eusartRxBuffer[0];
  5507  03FD  0872               	movf	_eusartRxBuffer,w	;volatile
  5508  03FE  00F8               	movwf	??_EUSART_RxDataHandler
  5509  03FF  0878               	movf	??_EUSART_RxDataHandler,w
  5510  0400  0020               	movlb	0	; select bank0
  5511  0401  00A9               	movwf	_rxData	;volatile
  5512                           
  5513                           ;mcc_generated_files/eusart.c: 255:         uartFlag=1;
  5514  0402  3001               	movlw	1
  5515  0403  00F8               	movwf	??_EUSART_RxDataHandler
  5516  0404  0878               	movf	??_EUSART_RxDataHandler,w
  5517  0405  00AB               	movwf	_uartFlag	;volatile
  5518  0406                     i1l1453:
  5519                           
  5520                           ;mcc_generated_files/eusart.c: 258:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  5521  0406  0023               	movlb	3	; select bank3
  5522  0407  0819               	movf	25,w	;volatile
  5523  0408  00F8               	movwf	??_EUSART_RxDataHandler
  5524  0409  0874               	movf	_eusartRxHead,w
  5525  040A  3E72               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5526  040B  0086               	movwf	6
  5527  040C  0187               	clrf	7
  5528  040D  0878               	movf	??_EUSART_RxDataHandler,w
  5529  040E  0081               	movwf	1
  5530  040F                     i1l1455:
  5531  040F  3001               	movlw	1
  5532  0410  00F8               	movwf	??_EUSART_RxDataHandler
  5533  0411  0878               	movf	??_EUSART_RxDataHandler,w
  5534  0412  07F4               	addwf	_eusartRxHead,f	;volatile
  5535  0413                     i1l1457:
  5536                           
  5537                           ;mcc_generated_files/eusart.c: 259:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5538  0413  0874               	movf	_eusartRxHead,w	;volatile
  5539  0414  1903               	btfsc	3,2
  5540  0415  2C17               	goto	u51_21
  5541  0416  2C18               	goto	u51_20
  5542  0417                     u51_21:
  5543  0417  2C19               	goto	i1l1461
  5544  0418                     u51_20:
  5545  0418                     i1l1459:
  5546                           
  5547                           ;mcc_generated_files/eusart.c: 260:     {;mcc_generated_files/eusart.c: 261:         eus
      +                          artRxHead = 0;
  5548  0418  01F4               	clrf	_eusartRxHead	;volatile
  5549  0419                     i1l1461:
  5550                           
  5551                           ;mcc_generated_files/eusart.c: 263:     eusartRxCount++;
  5552  0419  3001               	movlw	1
  5553  041A  00F8               	movwf	??_EUSART_RxDataHandler
  5554  041B  0878               	movf	??_EUSART_RxDataHandler,w
  5555  041C  07F0               	addwf	_eusartRxCount,f	;volatile
  5556  041D                     i1l285:
  5557  041D  0008               	return
  5558  041E                     __end_of_EUSART_RxDataHandler:
  5559  007E                     btemp	set	126	;btemp
  5560  007E                     int$flags	set	126
  5561  007E                     wtemp0	set	126
  5562                           
  5563                           	psect	config
  5564                           
  5565                           ;Config register CONFIG1 @ 0x8007
  5566                           ;	FEXTOSC External Oscillator mode Selection bits
  5567                           ;	FEXTOSC = OFF, Oscillator not enabled
  5568                           ;	Power-up default value for COSC bits
  5569                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  5570                           ;	Clock Out Enable bit
  5571                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  5572                           ;	Clock Switch Enable bit
  5573                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5574                           ;	Fail-Safe Clock Monitor Enable
  5575                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5576  8007                     	org	32775
  5577  8007  3FEC               	dw	16364
  5578                           
  5579                           ;Config register CONFIG2 @ 0x8008
  5580                           ;	Master Clear Enable bit
  5581                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  5582                           ;	Power-up Timer Enable bit
  5583                           ;	PWRTE = OFF, PWRT disabled
  5584                           ;	Watchdog Timer Enable bits
  5585                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
  5586                           ;	Low-power BOR enable bit
  5587                           ;	LPBOREN = OFF, ULPBOR disabled
  5588                           ;	Brown-out Reset Enable bits
  5589                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
  5590                           ;	Brown-out Reset Voltage selection bit
  5591                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  5592                           ;	PPSLOCK bit One-Way Set Enable bit
  5593                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  5594                           ;	Stack Overflow/Underflow Reset Enable bit
  5595                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5596                           ;	Debugger enable bit
  5597                           ;	DEBUG = OFF, Background debugger disabled
  5598  8008                     	org	32776
  5599  8008  3FF3               	dw	16371
  5600                           
  5601                           ;Config register CONFIG3 @ 0x8009
  5602                           ;	User NVM self-write protection bits
  5603                           ;	WRT = OFF, Write protection off
  5604                           ;	Low Voltage Programming Enable bit
  5605                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
  5606  8009                     	org	32777
  5607  8009  3FFF               	dw	16383
  5608                           
  5609                           ;Config register CONFIG4 @ 0x800A
  5610                           ;	User NVM Program Memory Code Protection bit
  5611                           ;	CP = OFF, User NVM code protection disabled
  5612                           ;	Data NVM Memory Code Protection bit
  5613                           ;	CPD = OFF, Data NVM code protection disabled
  5614  800A                     	org	32778
  5615  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    27
    Data        0
    BSS         20
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      2      15
    BANK1            80     67      77
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    S34$4$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    S34$6$0	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    S34$Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    uart.Initialize	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Initialize(), 

    S34$TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    uart.TxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    S34$TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    uart.TransmitDone	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_done(), 

    S34$SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetRxInterruptHandler(), 

    uart.SetRxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetRxInterruptHandler(), 

    S34$RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    uart.RxDefaultISR	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    S34$SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetTxInterruptHandler(), 

    uart.SetTxISR	PTR FTN(PTR FTN()void ,)void  size(2) Largest target is 1
		 -> EUSART_SetTxInterruptHandler(), 

    S34$DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    uart.DataReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_rx_ready(), 

    S34$TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    uart.TransmitReady	PTR FTN()_Bool  size(2) Largest target is 1
		 -> EUSART_is_tx_ready(), 

    S34$Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    uart.Write	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    S34$Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 

    uart.Read	PTR FTN()unsigned char  size(2) Largest target is 1
		 -> EUSART_Read(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0    4226
                                              0 BANK0      2     2      0
                                              0 BANK1     67    67      0
                       _EUSART_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         2     1      1    1502
                                              1 COMMON     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       F       5       18.8%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     43      4D       7       96.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      68      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      68      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Jan  2 21:22:40 2022

                ?_EUSART_SetRxInterruptHandler 0079                                             l65 03DA  
                                          l113 0441                                            l122 0452  
                                          l300 0471                                            l116 044A  
                                          l303 047D                                            l119 0481  
                                          l306 0465                                            l234 0354  
                                          l309 046B                                            l262 03B6  
                                          l258 0394                                            l259 039D  
                                          l297 0477                                            l386 0311  
                       ??_EUSART_RxDataHandler 0078                 ?_EUSART_SetFramingErrorHandler 0079  
                      __size_of_PMD_Initialize 0008                                            wreg 0009  
                                         l2001 0071                                           l2011 0076  
                                         l2003 0072                                           l2101 01A6  
                                         l2021 007D                                           l2013 0077  
                                         l2005 0073                                           l2111 01F4  
                                         l2103 01CF                                           l2031 00A0  
                                         l2023 0083                                           l2015 0078  
                                         l2007 0074                                           l2121 0249  
                                         l2105 01D3                                           l2041 00C1  
                                         l2033 00A4                                           l2025 0087  
                                         l2017 0079                                           l2009 0075  
                                         l2123 0250                                           l2131 0269  
                                         l2107 01E0                                           l2115 021E  
                                         l2051 00E5                                           l2043 00D0  
                                         l2035 00B3                                           l2027 0096  
                                         l2019 007A                                           l2141 028D  
                                         l2133 026E                                           l2125 025B  
                                         l2109 01E5                                           l2117 023C  
                                         l2061 0110                                           l2053 00EC  
                                         l2045 00D6                                           l2037 00B7  
                                         l2029 009A                                           l2151 02A8  
                                         l2143 0293                                           l2135 0275  
                                         l2127 0261                                           l2119 0242  
                                         l2223 0228                                           l2071 0126  
                                         l2063 0116                                           l2055 00FA  
                                         l2047 00DC                                           l2039 00BD  
                                         l2161 02C2                                           l2153 02AE  
                                         l2137 027C                                           l2145 0295  
                                         l2129 0267                                           l2081 0144  
                                         l2073 012C                                           l2065 0117  
                                         l2057 0104                                           l2049 00E0  
                                         l2171 02E7                                           l2163 02C9  
                                         l2155 02B5                                           l2147 029A  
                                         l2139 0287                                           l2091 0171  
                                         l2083 014A                                           l2075 0132  
                                         l2059 0109                                           l2067 0119  
                                         l2181 0302                                           l2165 02D0  
                                         l2173 02E9                                           l2157 02BB  
                                         l2149 02A1                                           l2093 0181  
                                         l2085 0150                                           l2077 0138  
                                         l2069 011F                                           l2183 0309  
                                         l2175 02EE                                           l2167 02DB  
                                         l2159 02BD                                           l2095 0185  
                                         l2087 015D                                           l2079 013E  
                                         l2185 030F                                           l2177 02F5  
                                         l2169 02E1                                           l2097 0192  
                                         l2089 0162                                           l2179 02FC  
                                         l2099 0197                                           l1901 044B  
                                         l1903 0442                                           l1911 047E  
                                         l1921 032B                                           l1913 0316  
                                         l1905 0445                                           l1931 0339  
                                         l1923 032D                                           l1915 0318  
                                         l1907 0446                                           l1941 0351  
                                         l1933 0340                                           l1925 032F  
                                         l1917 031F                                           l1909 0449  
                                         l1871 0460                                           l1943 0352  
                                         l1935 034B                                           l1927 0331  
                                         l1919 0328                                           l1951 043B  
                                         l1961 039E                                           l1873 0472  
                                         l1937 034F                                           l1929 0332  
                                         l1881 03BA                                           l1953 043E  
                                         l1945 0432                                           l1963 03A6  
                                         l1971 03B4                                           l1955 038E  
                                         l1875 046C                                           l1939 0350  
                                         l1891 03CD                                           l1883 03BD  
                                         l1947 0435                                           l1965 03AA  
                                         l1957 038E                                           l1877 0478  
                                         l1869 0466                                           l1893 03CF  
                                         l1885 03BF                                           l1949 0438  
                                         l1981 0049                                           l1967 03B0  
                                         l1959 0399                                           l1895 03D2  
                                         l1887 03C2                                           l1879 03B7  
                                         l1991 0067                                           l1983 004F  
                                         l1975 0044                                           l1969 03B1  
                                         l1897 03D4                                           l1889 03CA  
                                         l1993 006D                                           l1985 0055  
                                         l1977 0047                                           l1899 03D7  
                                         l1995 006E                                           l1987 005B  
                                         l1979 0048                                           l1997 006F  
                                         l1989 0061                                           l1999 0070  
                                  main@latSize 00DD                                           u1010 0394  
                                         u1011 0393                                           u1020 0399  
                                         u1100 00EC                                           u1021 0398  
                                         u1101 00EB                                           u1030 03B0  
                                         u1110 00FA                                           u1031 03AF  
                                         u1111 00F9                                           u1200 0250  
                                         u1120 0110                                           u1040 0096  
                                         u1201 024F                                           u1121 010F  
                                         u1041 0095                                           u1210 0267  
                                         u1130 011F                                           u1050 00B3  
                                         u1211 0266                                           u1131 011E  
                                         u1051 00B2                                           u1300 02C2  
                                         u1220 026E                                           u1140 0126  
                                         u1060 00D0                                           u1301 02C1  
                                         u1221 026D                                           u1141 0125  
                                         u1061 00CF                                           u1045 0092  
                                         u1310 02C9                                           u1230 0275  
                                         u1150 0171                                           u1070 00D6  
                                         u1311 02C8                                           u1231 0274  
                                         u1151 0170                                           u1071 00D5  
                                         u1055 00AF                                           u1320 02D0  
                                         u1240 027C                                           u1160 01A6  
                                         u1080 00DC                                           u1321 02CF  
                                         u1241 027B                                           u1161 01A5  
                                         u1081 00DB                                           u1065 00CC  
                                         u1330 02E7                                           u1250 0293  
                                         u1170 01F4                                           u1090 00E5  
                                         u1331 02E6                                           u1251 0292  
                                         u1171 01F3                                           u1155 016D  
                                         u1091 00E4                                           u1340 02EE  
                                         u1260 029A                                           u1180 0242  
                                         u1341 02ED                                           u1261 0299  
                                         u1181 0241                                           u1165 01A2  
                                         _LATA 010C                                           u1350 02F5  
                                         u1270 02A1                                           u1190 0249  
                                         u1351 02F4                                           u1271 02A0  
                                         u1191 0248                                           u1175 01F0  
                                         _LATC 010E                                           u1360 02FC  
                                         u1280 02A8                                           u1361 02FB  
                                         u1281 02A7                                           u1370 030F  
                                         u1290 02BB                                           u1371 030E  
                                         u1291 02BA                                           _PMD0 0911  
                                         _PMD1 0912                                           _PMD2 0913  
                                         _PMD3 0914                                           _PMD4 0915  
                                         _PMD5 0916                                           _WPUA 020C  
                                         _WPUC 020E                                    main@long_go 00D6  
                                  main@longpos 00E1                                           _main 0044  
                                         _uart 041E                                           fsr0h 0005  
                                         fsr1h 0007                                           indf0 0000  
                                         fsr0l 0004                                           indf1 0001  
                                         fsr1l 0006                                           btemp 007E  
                                  main@time_go 00D4                                    main@timepos 00DF  
                                         start 002E                                    main@rx_long 00B8  
                                  main@rx_time 00A6                                   main@header_g 0453  
                                ?_EUSART_Write 0079                 __size_of_OSCILLATOR_Initialize 0009  
                __end_of_OSCILLATOR_Initialize 044B                                          ?_main 0078  
                                        i1l151 002C                                          i1l146 001B  
                                        i1l147 002C                                          i1l271 03FA  
                                        i1l281 038D                                          i1l274 03FC  
                                        i1l291 0485                                          i1l285 041D  
                                        i1l294 0489                                          i1l288 048A  
                                        _OSCEN 091D                                          u51_20 0418  
                                        u51_21 0417                                          u60_20 036F  
                                        u60_21 036E                                          u61_20 0383  
                                        u61_21 0382                                          u62_20 000A  
                                        u62_21 0009                                          u63_20 000F  
                                        u63_21 000E                                          u64_20 0014  
                                        u64_21 0013                                          u57_20 03E2  
                                        u65_20 0020                                          u57_21 03E1  
                                        u65_21 001F                                          _TRISA 008C  
                                        _TRISC 008E                                          u58_20 03F3  
                                        u66_20 0025                                          u58_21 03F2  
                                        u66_21 0024                                          u59_20 035F  
                                        u59_21 035E                                          _RXPPS 0E24  
                                 main@longSize 00DE                                 _WDT_Initialize 047E  
                                 main@timeSize 00DC                                          main@i 00C2  
                                        pclath 000A                                          status 0003  
                                        wtemp0 007E                                __initialization 0030  
                                 __end_of_main 0316                                   __end_of_uart 0432  
                               ??_EUSART_Write 007A                    ?_INTERRUPT_InterruptManager 0078  
               ??_EUSART_SetRxInterruptHandler 007B                                         ??_main 002C  
                       __end_of_WDT_Initialize 0482                                  main@gnggaSize 00D9  
    __end_of_EUSART_DefaultFramingErrorHandler 048B     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0078             ?_EUSART_DefaultFramingErrorHandler 0078  
            _EUSART_DefaultFramingErrorHandler 048A                     _EUSART_OverrunErrorHandler 00E5  
                                       _ANSELA 018C                                         _ANSELC 018E  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                                         i1l1601 0364  
                                       _ODCONA 028C                                         i1l1451 03FD  
                                       i1l1531 0486                                         i1l1611 0383  
                                       i1l1603 036A                                         _ODCONC 028E  
                                       i1l1461 0419                                         i1l1453 0406  
                                       i1l1613 038A                                         i1l1605 036F  
                                       i1l1621 0014                                         i1l1455 040F  
                                       i1l1607 0374                                         i1l1623 0020  
                                       i1l1615 0006                                         i1l1457 0413  
                                       i1l1529 0482                                         i1l1609 037A  
                                       i1l1625 0025                                         i1l1617 000A  
                                       i1l1459 0418                                         i1l1619 000F  
                                       i1l1591 03F3                                         i1l1583 03DB  
                                       i1l1593 03F4                                         i1l1585 03E2  
                                       i1l1595 0355                                         i1l1587 03E9  
                                       i1l1597 035A                                         i1l1589 03ED  
                                       i1l1599 035F                                         _INLVLA 038C  
                                       _INLVLC 038E                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                            _EUSART_Transmit_ISR 03DB  
                                       _rxData 0029                                 _PMD_Initialize 044B  
                              ?_WDT_Initialize 0078                           ?_EUSART_Transmit_ISR 0078  
                            _SYSTEM_Initialize 0432                        __end_of__initialization 0040  
                           ?_SYSTEM_Initialize 0078           __end_of_EUSART_SetTxInterruptHandler 0466  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 0460  
                               __pcstackCOMMON 0078                            ??_SYSTEM_Initialize 007C  
                       __end_of_PMD_Initialize 0453                           _eusartRxStatusBuffer 0071  
              ??_EUSART_SetOverrunErrorHandler 007B                      __end_of_SYSTEM_Initialize 0442  
                        ??_EUSART_Transmit_ISR 0078                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 03B7                    __size_of_EUSART_Receive_ISR 0039  
                                   __pmaintext 0044                  ?_EUSART_SetTxInterruptHandler 0079  
             _EUSART_TxDefaultInterruptHandler 00EB                                     __pintentry 0004  
                 ??_EUSART_DefaultErrorHandler 0079                                ?_PMD_Initialize 0078  
                                _eusartRxCount 0070                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                  __size_of_EUSART_RxDataHandler 0021  
                                      _OSCTUNE 091E                                        _SLRCONA 030C  
                                      _SLRCONC 030E                                     _dollarFlag 002A  
                     ??_EUSART_SetErrorHandler 007B            __size_of_EUSART_DefaultErrorHandler 0004  
                                      __ptext1 0432                                        __ptext2 047E  
                                      __ptext3 044B                                        __ptext4 03B7  
                                      __ptext5 0442                                        __ptext6 0316  
                                      __ptext7 0460                                        __ptext8 0466  
                                      __ptext9 046C                          _OSCILLATOR_Initialize 0442  
                     ??_PIN_MANAGER_Initialize 0079                                     _parserFlag 0077  
                   __size_of_SYSTEM_Initialize 0010                                        clrloop0 045B  
                         end_of_initialization 0040          __end_of_EUSART_SetOverrunErrorHandler 0472  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 046C  
                            _EUSART_Initialize 0316                             ?_EUSART_Initialize 0078  
                           _EUSART_is_rx_ready 0000                             _EUSART_is_tx_ready 0000  
                          ??_EUSART_Initialize 007B                               ??_WDT_Initialize 0079  
               ??_EUSART_SetTxInterruptHandler 007B                          __size_of_EUSART_Write 0029  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 0355  
                                   main@ewSize 00CF                                     main@lat_go 00D5  
                                   main@latpos 00E0                                     main@nsSize 00CE  
                                   main@rx_lat 00AF                                     main@rx_gps 00A0  
           __end_of_EUSART_DefaultErrorHandler 048A                     _EUSART_DefaultErrorHandler 0486  
                                 _EUSART_Write 038E                         ?_OSCILLATOR_Initialize 0078  
                          start_initialization 0030                __size_of_PIN_MANAGER_Initialize 0024  
 EUSART_SetRxInterruptHandler@interruptHandler 0079   EUSART_SetTxInterruptHandler@interruptHandler 0079  
               ?_EUSART_SetOverrunErrorHandler 0079                     _EUSART_FramingErrorHandler 00E7  
                             ??_PMD_Initialize 0079                         _EUSART_SetErrorHandler 0478  
                  __end_of_EUSART_Transmit_ISR 03FD                                    __pbssCOMMON 0070  
                                    ___latbits 0002                                  __pcstackBANK0 002C  
                                __pcstackBANK1 00A0                     __end_of_EUSART_Receive_ISR 038E  
                   __size_of_EUSART_Initialize 003F               _EUSART_RxDefaultInterruptHandler 00E9  
                                    __pnvBANK0 002E                                      __pnvBANK1 00E3  
                 __end_of_EUSART_RxDataHandler 041E                         _PIN_MANAGER_Initialize 03B7  
                                 _eusartRxHead 0074                                   _eusartTxHead 0076  
                                 _eusartRxTail 0073                                   _eusartTxTail 0075  
                 ??_INTERRUPT_InterruptManager 0079                        _eusartTxBufferRemaining 002E  
                                     _BAUD1CON 019F                                 _eusartRxBuffer 0072  
                               _eusartTxBuffer 0020         EUSART_SetErrorHandler@interruptHandler 0079  
                                    clear_ram0 045A                                       _PIE1bits 0091  
                            _eusartRxLastError 0028            __size_of_INTERRUPT_InterruptManager 002A  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 007B  
                            _EUSART_is_tx_done 0000      __end_of_EUSART_DefaultOverrunErrorHandler 0486  
   __size_of_EUSART_DefaultOverrunErrorHandler 0004            ??_EUSART_DefaultOverrunErrorHandler 0078  
           ?_EUSART_DefaultOverrunErrorHandler 0078              _EUSART_DefaultOverrunErrorHandler 0482  
                                    main@i_510 00CA                                      main@i_511 00CC  
                                    main@i_507 00C4                                      main@i_508 00C6  
                                    main@i_509 00C8                                      main@ew_go 00D8  
                                    main@ewpos 00DB                                      main@ns_go 00D7  
                                    main@nspos 00DA                                      main@rx_ew 00D1  
                                    main@rx_ns 00D0                                    _EUSART_Read 0000  
                      ??_OSCILLATOR_Initialize 0079                            _EUSART_ErrorHandler 00E3  
                  ?_EUSART_DefaultErrorHandler 0078                           _EUSART_RxDataHandler 03FD  
                                     __ptext10 0472                                       __ptext11 0478  
                                     __ptext12 038E                                       __ptext14 03DB  
                                     __ptext15 0355                                       __ptext16 0482  
                                     __ptext17 048A                                       __ptext18 0486  
                                     __ptext19 03FD                           __end_ofmain@header_g 045A  
                                __size_of_main 02D2                        ?_EUSART_SetErrorHandler 0079  
                                   _RC1STAbits 019D                                       _uartFlag 002B  
EUSART_SetOverrunErrorHandler@interruptHandler 0079                                       int$flags 007E  
           __end_of_INTERRUPT_InterruptManager 002E                     _INTERRUPT_InterruptManager 0004  
                                     main@g_ok 00D3          __end_of_EUSART_SetFramingErrorHandler 0478  
       __size_of_EUSART_SetFramingErrorHandler 0006                  _EUSART_SetFramingErrorHandler 0472  
                                     main@cpos 00D2                                       main@fpos 00E2  
                                   _INTCONbits 000B                          ?_EUSART_RxDataHandler 0078  
                      __size_of_WDT_Initialize 0004                                       intlevel1 0000  
                      ?_PIN_MANAGER_Initialize 0078                 __end_of_EUSART_SetErrorHandler 047E  
         __end_of_EUSART_SetRxInterruptHandler 046C          __size_of_EUSART_SetRxInterruptHandler 0006  
                 _EUSART_SetRxInterruptHandler 0466                             _EUSART_Receive_ISR 0355  
EUSART_SetFramingErrorHandler@interruptHandler 0079                                  __pstringtext1 041E  
                                __pstringtext2 0453                            ?_EUSART_Receive_ISR 0078  
                                   _TX1STAbits 019E                             EUSART_Write@txData 0079  
                 __size_of_EUSART_Transmit_ISR 0022                 __end_of_PIN_MANAGER_Initialize 03DB  
                         ??_EUSART_Receive_ISR 0079  
