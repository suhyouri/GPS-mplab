

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Mar  4 21:44:50 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F18325
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2
    34                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 2.35
    38                           ; Generated 13/04/2021 GMT
    39                           ; 
    40                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution. Publication is not required when
    54                           ;        this file is used in an embedded application.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC16F18325 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     	;# 
    73  0001                     	;# 
    74  0002                     	;# 
    75  0003                     	;# 
    76  0004                     	;# 
    77  0005                     	;# 
    78  0006                     	;# 
    79  0007                     	;# 
    80  0008                     	;# 
    81  0009                     	;# 
    82  000A                     	;# 
    83  000B                     	;# 
    84  000C                     	;# 
    85  000E                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0016                     	;# 
    95  0017                     	;# 
    96  0018                     	;# 
    97  0019                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001C                     	;# 
   102  001D                     	;# 
   103  001E                     	;# 
   104  001F                     	;# 
   105  008C                     	;# 
   106  008E                     	;# 
   107  0090                     	;# 
   108  0091                     	;# 
   109  0092                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0097                     	;# 
   113  009B                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010E                     	;# 
   121  0111                     	;# 
   122  0112                     	;# 
   123  0113                     	;# 
   124  0114                     	;# 
   125  0115                     	;# 
   126  0116                     	;# 
   127  0117                     	;# 
   128  0118                     	;# 
   129  0119                     	;# 
   130  018C                     	;# 
   131  018E                     	;# 
   132  0197                     	;# 
   133  0199                     	;# 
   134  0199                     	;# 
   135  0199                     	;# 
   136  019A                     	;# 
   137  019A                     	;# 
   138  019A                     	;# 
   139  019B                     	;# 
   140  019B                     	;# 
   141  019B                     	;# 
   142  019B                     	;# 
   143  019B                     	;# 
   144  019C                     	;# 
   145  019C                     	;# 
   146  019C                     	;# 
   147  019D                     	;# 
   148  019D                     	;# 
   149  019D                     	;# 
   150  019E                     	;# 
   151  019E                     	;# 
   152  019E                     	;# 
   153  019F                     	;# 
   154  019F                     	;# 
   155  019F                     	;# 
   156  019F                     	;# 
   157  019F                     	;# 
   158  020C                     	;# 
   159  020E                     	;# 
   160  0211                     	;# 
   161  0211                     	;# 
   162  0212                     	;# 
   163  0212                     	;# 
   164  0213                     	;# 
   165  0213                     	;# 
   166  0214                     	;# 
   167  0214                     	;# 
   168  0215                     	;# 
   169  0215                     	;# 
   170  0215                     	;# 
   171  0215                     	;# 
   172  0216                     	;# 
   173  0216                     	;# 
   174  0217                     	;# 
   175  0217                     	;# 
   176  0219                     	;# 
   177  021A                     	;# 
   178  021B                     	;# 
   179  021C                     	;# 
   180  021D                     	;# 
   181  021D                     	;# 
   182  021E                     	;# 
   183  021F                     	;# 
   184  028C                     	;# 
   185  028E                     	;# 
   186  0291                     	;# 
   187  0291                     	;# 
   188  0292                     	;# 
   189  0293                     	;# 
   190  0294                     	;# 
   191  0295                     	;# 
   192  0295                     	;# 
   193  0296                     	;# 
   194  0297                     	;# 
   195  0298                     	;# 
   196  029F                     	;# 
   197  030C                     	;# 
   198  030E                     	;# 
   199  0311                     	;# 
   200  0311                     	;# 
   201  0312                     	;# 
   202  0313                     	;# 
   203  0314                     	;# 
   204  0315                     	;# 
   205  0315                     	;# 
   206  0316                     	;# 
   207  0317                     	;# 
   208  0318                     	;# 
   209  038C                     	;# 
   210  038E                     	;# 
   211  0391                     	;# 
   212  0392                     	;# 
   213  0393                     	;# 
   214  0397                     	;# 
   215  0398                     	;# 
   216  0399                     	;# 
   217  039A                     	;# 
   218  039C                     	;# 
   219  039D                     	;# 
   220  039E                     	;# 
   221  039F                     	;# 
   222  0411                     	;# 
   223  0411                     	;# 
   224  0412                     	;# 
   225  0413                     	;# 
   226  0414                     	;# 
   227  0415                     	;# 
   228  0416                     	;# 
   229  0417                     	;# 
   230  0418                     	;# 
   231  0418                     	;# 
   232  0419                     	;# 
   233  041A                     	;# 
   234  041B                     	;# 
   235  041C                     	;# 
   236  041D                     	;# 
   237  041E                     	;# 
   238  041F                     	;# 
   239  0498                     	;# 
   240  0498                     	;# 
   241  0499                     	;# 
   242  049A                     	;# 
   243  049B                     	;# 
   244  049B                     	;# 
   245  049C                     	;# 
   246  049D                     	;# 
   247  049E                     	;# 
   248  049F                     	;# 
   249  0617                     	;# 
   250  0618                     	;# 
   251  0619                     	;# 
   252  0619                     	;# 
   253  061A                     	;# 
   254  061B                     	;# 
   255  061C                     	;# 
   256  061C                     	;# 
   257  061F                     	;# 
   258  0691                     	;# 
   259  0692                     	;# 
   260  0693                     	;# 
   261  0694                     	;# 
   262  0695                     	;# 
   263  0696                     	;# 
   264  0697                     	;# 
   265  0698                     	;# 
   266  0699                     	;# 
   267  0711                     	;# 
   268  0712                     	;# 
   269  0713                     	;# 
   270  0714                     	;# 
   271  0715                     	;# 
   272  0716                     	;# 
   273  0717                     	;# 
   274  0718                     	;# 
   275  0719                     	;# 
   276  0891                     	;# 
   277  0891                     	;# 
   278  0891                     	;# 
   279  0891                     	;# 
   280  0891                     	;# 
   281  0891                     	;# 
   282  0892                     	;# 
   283  0892                     	;# 
   284  0892                     	;# 
   285  0893                     	;# 
   286  0893                     	;# 
   287  0893                     	;# 
   288  0893                     	;# 
   289  0893                     	;# 
   290  0893                     	;# 
   291  0894                     	;# 
   292  0894                     	;# 
   293  0894                     	;# 
   294  0895                     	;# 
   295  0895                     	;# 
   296  0895                     	;# 
   297  0896                     	;# 
   298  0896                     	;# 
   299  0896                     	;# 
   300  089B                     	;# 
   301  0911                     	;# 
   302  0912                     	;# 
   303  0913                     	;# 
   304  0914                     	;# 
   305  0915                     	;# 
   306  0916                     	;# 
   307  0918                     	;# 
   308  0919                     	;# 
   309  091A                     	;# 
   310  091B                     	;# 
   311  091C                     	;# 
   312  091D                     	;# 
   313  091E                     	;# 
   314  091F                     	;# 
   315  0E0F                     	;# 
   316  0E10                     	;# 
   317  0E11                     	;# 
   318  0E12                     	;# 
   319  0E13                     	;# 
   320  0E14                     	;# 
   321  0E15                     	;# 
   322  0E16                     	;# 
   323  0E17                     	;# 
   324  0E18                     	;# 
   325  0E19                     	;# 
   326  0E1A                     	;# 
   327  0E1B                     	;# 
   328  0E1C                     	;# 
   329  0E1D                     	;# 
   330  0E1E                     	;# 
   331  0E1F                     	;# 
   332  0E20                     	;# 
   333  0E21                     	;# 
   334  0E22                     	;# 
   335  0E24                     	;# 
   336  0E25                     	;# 
   337  0E28                     	;# 
   338  0E29                     	;# 
   339  0E2A                     	;# 
   340  0E2B                     	;# 
   341  0E2C                     	;# 
   342  0E2D                     	;# 
   343  0E2E                     	;# 
   344  0E2F                     	;# 
   345  0E90                     	;# 
   346  0E91                     	;# 
   347  0E92                     	;# 
   348  0E94                     	;# 
   349  0E95                     	;# 
   350  0EA0                     	;# 
   351  0EA1                     	;# 
   352  0EA2                     	;# 
   353  0EA3                     	;# 
   354  0EA4                     	;# 
   355  0EA5                     	;# 
   356  0F0F                     	;# 
   357  0F10                     	;# 
   358  0F11                     	;# 
   359  0F12                     	;# 
   360  0F13                     	;# 
   361  0F14                     	;# 
   362  0F15                     	;# 
   363  0F16                     	;# 
   364  0F17                     	;# 
   365  0F18                     	;# 
   366  0F19                     	;# 
   367  0F1A                     	;# 
   368  0F1B                     	;# 
   369  0F1C                     	;# 
   370  0F1D                     	;# 
   371  0F1E                     	;# 
   372  0F1F                     	;# 
   373  0F20                     	;# 
   374  0F21                     	;# 
   375  0F22                     	;# 
   376  0F23                     	;# 
   377  0F24                     	;# 
   378  0F25                     	;# 
   379  0F26                     	;# 
   380  0F27                     	;# 
   381  0F28                     	;# 
   382  0F29                     	;# 
   383  0F2A                     	;# 
   384  0F2B                     	;# 
   385  0F2C                     	;# 
   386  0F2D                     	;# 
   387  0F2E                     	;# 
   388  0F2F                     	;# 
   389  0F30                     	;# 
   390  0F31                     	;# 
   391  0F32                     	;# 
   392  0F33                     	;# 
   393  0F34                     	;# 
   394  0F35                     	;# 
   395  0F36                     	;# 
   396  0F37                     	;# 
   397  0FE4                     	;# 
   398  0FE5                     	;# 
   399  0FE6                     	;# 
   400  0FE7                     	;# 
   401  0FE8                     	;# 
   402  0FE9                     	;# 
   403  0FEA                     	;# 
   404  0FEB                     	;# 
   405  0FED                     	;# 
   406  0FEE                     	;# 
   407  0FEF                     	;# 
   408  0000                     	;# 
   409  0001                     	;# 
   410  0002                     	;# 
   411  0003                     	;# 
   412  0004                     	;# 
   413  0005                     	;# 
   414  0006                     	;# 
   415  0007                     	;# 
   416  0008                     	;# 
   417  0009                     	;# 
   418  000A                     	;# 
   419  000B                     	;# 
   420  000C                     	;# 
   421  000E                     	;# 
   422  0010                     	;# 
   423  0011                     	;# 
   424  0012                     	;# 
   425  0013                     	;# 
   426  0014                     	;# 
   427  0015                     	;# 
   428  0015                     	;# 
   429  0016                     	;# 
   430  0016                     	;# 
   431  0017                     	;# 
   432  0018                     	;# 
   433  0019                     	;# 
   434  0019                     	;# 
   435  001A                     	;# 
   436  001B                     	;# 
   437  001C                     	;# 
   438  001D                     	;# 
   439  001E                     	;# 
   440  001F                     	;# 
   441  008C                     	;# 
   442  008E                     	;# 
   443  0090                     	;# 
   444  0091                     	;# 
   445  0092                     	;# 
   446  0093                     	;# 
   447  0094                     	;# 
   448  0097                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  010C                     	;# 
   456  010E                     	;# 
   457  0111                     	;# 
   458  0112                     	;# 
   459  0113                     	;# 
   460  0114                     	;# 
   461  0115                     	;# 
   462  0116                     	;# 
   463  0117                     	;# 
   464  0118                     	;# 
   465  0119                     	;# 
   466  018C                     	;# 
   467  018E                     	;# 
   468  0197                     	;# 
   469  0199                     	;# 
   470  0199                     	;# 
   471  0199                     	;# 
   472  019A                     	;# 
   473  019A                     	;# 
   474  019A                     	;# 
   475  019B                     	;# 
   476  019B                     	;# 
   477  019B                     	;# 
   478  019B                     	;# 
   479  019B                     	;# 
   480  019C                     	;# 
   481  019C                     	;# 
   482  019C                     	;# 
   483  019D                     	;# 
   484  019D                     	;# 
   485  019D                     	;# 
   486  019E                     	;# 
   487  019E                     	;# 
   488  019E                     	;# 
   489  019F                     	;# 
   490  019F                     	;# 
   491  019F                     	;# 
   492  019F                     	;# 
   493  019F                     	;# 
   494  020C                     	;# 
   495  020E                     	;# 
   496  0211                     	;# 
   497  0211                     	;# 
   498  0212                     	;# 
   499  0212                     	;# 
   500  0213                     	;# 
   501  0213                     	;# 
   502  0214                     	;# 
   503  0214                     	;# 
   504  0215                     	;# 
   505  0215                     	;# 
   506  0215                     	;# 
   507  0215                     	;# 
   508  0216                     	;# 
   509  0216                     	;# 
   510  0217                     	;# 
   511  0217                     	;# 
   512  0219                     	;# 
   513  021A                     	;# 
   514  021B                     	;# 
   515  021C                     	;# 
   516  021D                     	;# 
   517  021D                     	;# 
   518  021E                     	;# 
   519  021F                     	;# 
   520  028C                     	;# 
   521  028E                     	;# 
   522  0291                     	;# 
   523  0291                     	;# 
   524  0292                     	;# 
   525  0293                     	;# 
   526  0294                     	;# 
   527  0295                     	;# 
   528  0295                     	;# 
   529  0296                     	;# 
   530  0297                     	;# 
   531  0298                     	;# 
   532  029F                     	;# 
   533  030C                     	;# 
   534  030E                     	;# 
   535  0311                     	;# 
   536  0311                     	;# 
   537  0312                     	;# 
   538  0313                     	;# 
   539  0314                     	;# 
   540  0315                     	;# 
   541  0315                     	;# 
   542  0316                     	;# 
   543  0317                     	;# 
   544  0318                     	;# 
   545  038C                     	;# 
   546  038E                     	;# 
   547  0391                     	;# 
   548  0392                     	;# 
   549  0393                     	;# 
   550  0397                     	;# 
   551  0398                     	;# 
   552  0399                     	;# 
   553  039A                     	;# 
   554  039C                     	;# 
   555  039D                     	;# 
   556  039E                     	;# 
   557  039F                     	;# 
   558  0411                     	;# 
   559  0411                     	;# 
   560  0412                     	;# 
   561  0413                     	;# 
   562  0414                     	;# 
   563  0415                     	;# 
   564  0416                     	;# 
   565  0417                     	;# 
   566  0418                     	;# 
   567  0418                     	;# 
   568  0419                     	;# 
   569  041A                     	;# 
   570  041B                     	;# 
   571  041C                     	;# 
   572  041D                     	;# 
   573  041E                     	;# 
   574  041F                     	;# 
   575  0498                     	;# 
   576  0498                     	;# 
   577  0499                     	;# 
   578  049A                     	;# 
   579  049B                     	;# 
   580  049B                     	;# 
   581  049C                     	;# 
   582  049D                     	;# 
   583  049E                     	;# 
   584  049F                     	;# 
   585  0617                     	;# 
   586  0618                     	;# 
   587  0619                     	;# 
   588  0619                     	;# 
   589  061A                     	;# 
   590  061B                     	;# 
   591  061C                     	;# 
   592  061C                     	;# 
   593  061F                     	;# 
   594  0691                     	;# 
   595  0692                     	;# 
   596  0693                     	;# 
   597  0694                     	;# 
   598  0695                     	;# 
   599  0696                     	;# 
   600  0697                     	;# 
   601  0698                     	;# 
   602  0699                     	;# 
   603  0711                     	;# 
   604  0712                     	;# 
   605  0713                     	;# 
   606  0714                     	;# 
   607  0715                     	;# 
   608  0716                     	;# 
   609  0717                     	;# 
   610  0718                     	;# 
   611  0719                     	;# 
   612  0891                     	;# 
   613  0891                     	;# 
   614  0891                     	;# 
   615  0891                     	;# 
   616  0891                     	;# 
   617  0891                     	;# 
   618  0892                     	;# 
   619  0892                     	;# 
   620  0892                     	;# 
   621  0893                     	;# 
   622  0893                     	;# 
   623  0893                     	;# 
   624  0893                     	;# 
   625  0893                     	;# 
   626  0893                     	;# 
   627  0894                     	;# 
   628  0894                     	;# 
   629  0894                     	;# 
   630  0895                     	;# 
   631  0895                     	;# 
   632  0895                     	;# 
   633  0896                     	;# 
   634  0896                     	;# 
   635  0896                     	;# 
   636  089B                     	;# 
   637  0911                     	;# 
   638  0912                     	;# 
   639  0913                     	;# 
   640  0914                     	;# 
   641  0915                     	;# 
   642  0916                     	;# 
   643  0918                     	;# 
   644  0919                     	;# 
   645  091A                     	;# 
   646  091B                     	;# 
   647  091C                     	;# 
   648  091D                     	;# 
   649  091E                     	;# 
   650  091F                     	;# 
   651  0E0F                     	;# 
   652  0E10                     	;# 
   653  0E11                     	;# 
   654  0E12                     	;# 
   655  0E13                     	;# 
   656  0E14                     	;# 
   657  0E15                     	;# 
   658  0E16                     	;# 
   659  0E17                     	;# 
   660  0E18                     	;# 
   661  0E19                     	;# 
   662  0E1A                     	;# 
   663  0E1B                     	;# 
   664  0E1C                     	;# 
   665  0E1D                     	;# 
   666  0E1E                     	;# 
   667  0E1F                     	;# 
   668  0E20                     	;# 
   669  0E21                     	;# 
   670  0E22                     	;# 
   671  0E24                     	;# 
   672  0E25                     	;# 
   673  0E28                     	;# 
   674  0E29                     	;# 
   675  0E2A                     	;# 
   676  0E2B                     	;# 
   677  0E2C                     	;# 
   678  0E2D                     	;# 
   679  0E2E                     	;# 
   680  0E2F                     	;# 
   681  0E90                     	;# 
   682  0E91                     	;# 
   683  0E92                     	;# 
   684  0E94                     	;# 
   685  0E95                     	;# 
   686  0EA0                     	;# 
   687  0EA1                     	;# 
   688  0EA2                     	;# 
   689  0EA3                     	;# 
   690  0EA4                     	;# 
   691  0EA5                     	;# 
   692  0F0F                     	;# 
   693  0F10                     	;# 
   694  0F11                     	;# 
   695  0F12                     	;# 
   696  0F13                     	;# 
   697  0F14                     	;# 
   698  0F15                     	;# 
   699  0F16                     	;# 
   700  0F17                     	;# 
   701  0F18                     	;# 
   702  0F19                     	;# 
   703  0F1A                     	;# 
   704  0F1B                     	;# 
   705  0F1C                     	;# 
   706  0F1D                     	;# 
   707  0F1E                     	;# 
   708  0F1F                     	;# 
   709  0F20                     	;# 
   710  0F21                     	;# 
   711  0F22                     	;# 
   712  0F23                     	;# 
   713  0F24                     	;# 
   714  0F25                     	;# 
   715  0F26                     	;# 
   716  0F27                     	;# 
   717  0F28                     	;# 
   718  0F29                     	;# 
   719  0F2A                     	;# 
   720  0F2B                     	;# 
   721  0F2C                     	;# 
   722  0F2D                     	;# 
   723  0F2E                     	;# 
   724  0F2F                     	;# 
   725  0F30                     	;# 
   726  0F31                     	;# 
   727  0F32                     	;# 
   728  0F33                     	;# 
   729  0F34                     	;# 
   730  0F35                     	;# 
   731  0F36                     	;# 
   732  0F37                     	;# 
   733  0FE4                     	;# 
   734  0FE5                     	;# 
   735  0FE6                     	;# 
   736  0FE7                     	;# 
   737  0FE8                     	;# 
   738  0FE9                     	;# 
   739  0FEA                     	;# 
   740  0FEB                     	;# 
   741  0FED                     	;# 
   742  0FEE                     	;# 
   743  0FEF                     	;# 
   744  0000                     	;# 
   745  0001                     	;# 
   746  0002                     	;# 
   747  0003                     	;# 
   748  0004                     	;# 
   749  0005                     	;# 
   750  0006                     	;# 
   751  0007                     	;# 
   752  0008                     	;# 
   753  0009                     	;# 
   754  000A                     	;# 
   755  000B                     	;# 
   756  000C                     	;# 
   757  000E                     	;# 
   758  0010                     	;# 
   759  0011                     	;# 
   760  0012                     	;# 
   761  0013                     	;# 
   762  0014                     	;# 
   763  0015                     	;# 
   764  0015                     	;# 
   765  0016                     	;# 
   766  0016                     	;# 
   767  0017                     	;# 
   768  0018                     	;# 
   769  0019                     	;# 
   770  0019                     	;# 
   771  001A                     	;# 
   772  001B                     	;# 
   773  001C                     	;# 
   774  001D                     	;# 
   775  001E                     	;# 
   776  001F                     	;# 
   777  008C                     	;# 
   778  008E                     	;# 
   779  0090                     	;# 
   780  0091                     	;# 
   781  0092                     	;# 
   782  0093                     	;# 
   783  0094                     	;# 
   784  0097                     	;# 
   785  009B                     	;# 
   786  009B                     	;# 
   787  009C                     	;# 
   788  009D                     	;# 
   789  009E                     	;# 
   790  009F                     	;# 
   791  010C                     	;# 
   792  010E                     	;# 
   793  0111                     	;# 
   794  0112                     	;# 
   795  0113                     	;# 
   796  0114                     	;# 
   797  0115                     	;# 
   798  0116                     	;# 
   799  0117                     	;# 
   800  0118                     	;# 
   801  0119                     	;# 
   802  018C                     	;# 
   803  018E                     	;# 
   804  0197                     	;# 
   805  0199                     	;# 
   806  0199                     	;# 
   807  0199                     	;# 
   808  019A                     	;# 
   809  019A                     	;# 
   810  019A                     	;# 
   811  019B                     	;# 
   812  019B                     	;# 
   813  019B                     	;# 
   814  019B                     	;# 
   815  019B                     	;# 
   816  019C                     	;# 
   817  019C                     	;# 
   818  019C                     	;# 
   819  019D                     	;# 
   820  019D                     	;# 
   821  019D                     	;# 
   822  019E                     	;# 
   823  019E                     	;# 
   824  019E                     	;# 
   825  019F                     	;# 
   826  019F                     	;# 
   827  019F                     	;# 
   828  019F                     	;# 
   829  019F                     	;# 
   830  020C                     	;# 
   831  020E                     	;# 
   832  0211                     	;# 
   833  0211                     	;# 
   834  0212                     	;# 
   835  0212                     	;# 
   836  0213                     	;# 
   837  0213                     	;# 
   838  0214                     	;# 
   839  0214                     	;# 
   840  0215                     	;# 
   841  0215                     	;# 
   842  0215                     	;# 
   843  0215                     	;# 
   844  0216                     	;# 
   845  0216                     	;# 
   846  0217                     	;# 
   847  0217                     	;# 
   848  0219                     	;# 
   849  021A                     	;# 
   850  021B                     	;# 
   851  021C                     	;# 
   852  021D                     	;# 
   853  021D                     	;# 
   854  021E                     	;# 
   855  021F                     	;# 
   856  028C                     	;# 
   857  028E                     	;# 
   858  0291                     	;# 
   859  0291                     	;# 
   860  0292                     	;# 
   861  0293                     	;# 
   862  0294                     	;# 
   863  0295                     	;# 
   864  0295                     	;# 
   865  0296                     	;# 
   866  0297                     	;# 
   867  0298                     	;# 
   868  029F                     	;# 
   869  030C                     	;# 
   870  030E                     	;# 
   871  0311                     	;# 
   872  0311                     	;# 
   873  0312                     	;# 
   874  0313                     	;# 
   875  0314                     	;# 
   876  0315                     	;# 
   877  0315                     	;# 
   878  0316                     	;# 
   879  0317                     	;# 
   880  0318                     	;# 
   881  038C                     	;# 
   882  038E                     	;# 
   883  0391                     	;# 
   884  0392                     	;# 
   885  0393                     	;# 
   886  0397                     	;# 
   887  0398                     	;# 
   888  0399                     	;# 
   889  039A                     	;# 
   890  039C                     	;# 
   891  039D                     	;# 
   892  039E                     	;# 
   893  039F                     	;# 
   894  0411                     	;# 
   895  0411                     	;# 
   896  0412                     	;# 
   897  0413                     	;# 
   898  0414                     	;# 
   899  0415                     	;# 
   900  0416                     	;# 
   901  0417                     	;# 
   902  0418                     	;# 
   903  0418                     	;# 
   904  0419                     	;# 
   905  041A                     	;# 
   906  041B                     	;# 
   907  041C                     	;# 
   908  041D                     	;# 
   909  041E                     	;# 
   910  041F                     	;# 
   911  0498                     	;# 
   912  0498                     	;# 
   913  0499                     	;# 
   914  049A                     	;# 
   915  049B                     	;# 
   916  049B                     	;# 
   917  049C                     	;# 
   918  049D                     	;# 
   919  049E                     	;# 
   920  049F                     	;# 
   921  0617                     	;# 
   922  0618                     	;# 
   923  0619                     	;# 
   924  0619                     	;# 
   925  061A                     	;# 
   926  061B                     	;# 
   927  061C                     	;# 
   928  061C                     	;# 
   929  061F                     	;# 
   930  0691                     	;# 
   931  0692                     	;# 
   932  0693                     	;# 
   933  0694                     	;# 
   934  0695                     	;# 
   935  0696                     	;# 
   936  0697                     	;# 
   937  0698                     	;# 
   938  0699                     	;# 
   939  0711                     	;# 
   940  0712                     	;# 
   941  0713                     	;# 
   942  0714                     	;# 
   943  0715                     	;# 
   944  0716                     	;# 
   945  0717                     	;# 
   946  0718                     	;# 
   947  0719                     	;# 
   948  0891                     	;# 
   949  0891                     	;# 
   950  0891                     	;# 
   951  0891                     	;# 
   952  0891                     	;# 
   953  0891                     	;# 
   954  0892                     	;# 
   955  0892                     	;# 
   956  0892                     	;# 
   957  0893                     	;# 
   958  0893                     	;# 
   959  0893                     	;# 
   960  0893                     	;# 
   961  0893                     	;# 
   962  0893                     	;# 
   963  0894                     	;# 
   964  0894                     	;# 
   965  0894                     	;# 
   966  0895                     	;# 
   967  0895                     	;# 
   968  0895                     	;# 
   969  0896                     	;# 
   970  0896                     	;# 
   971  0896                     	;# 
   972  089B                     	;# 
   973  0911                     	;# 
   974  0912                     	;# 
   975  0913                     	;# 
   976  0914                     	;# 
   977  0915                     	;# 
   978  0916                     	;# 
   979  0918                     	;# 
   980  0919                     	;# 
   981  091A                     	;# 
   982  091B                     	;# 
   983  091C                     	;# 
   984  091D                     	;# 
   985  091E                     	;# 
   986  091F                     	;# 
   987  0E0F                     	;# 
   988  0E10                     	;# 
   989  0E11                     	;# 
   990  0E12                     	;# 
   991  0E13                     	;# 
   992  0E14                     	;# 
   993  0E15                     	;# 
   994  0E16                     	;# 
   995  0E17                     	;# 
   996  0E18                     	;# 
   997  0E19                     	;# 
   998  0E1A                     	;# 
   999  0E1B                     	;# 
  1000  0E1C                     	;# 
  1001  0E1D                     	;# 
  1002  0E1E                     	;# 
  1003  0E1F                     	;# 
  1004  0E20                     	;# 
  1005  0E21                     	;# 
  1006  0E22                     	;# 
  1007  0E24                     	;# 
  1008  0E25                     	;# 
  1009  0E28                     	;# 
  1010  0E29                     	;# 
  1011  0E2A                     	;# 
  1012  0E2B                     	;# 
  1013  0E2C                     	;# 
  1014  0E2D                     	;# 
  1015  0E2E                     	;# 
  1016  0E2F                     	;# 
  1017  0E90                     	;# 
  1018  0E91                     	;# 
  1019  0E92                     	;# 
  1020  0E94                     	;# 
  1021  0E95                     	;# 
  1022  0EA0                     	;# 
  1023  0EA1                     	;# 
  1024  0EA2                     	;# 
  1025  0EA3                     	;# 
  1026  0EA4                     	;# 
  1027  0EA5                     	;# 
  1028  0F0F                     	;# 
  1029  0F10                     	;# 
  1030  0F11                     	;# 
  1031  0F12                     	;# 
  1032  0F13                     	;# 
  1033  0F14                     	;# 
  1034  0F15                     	;# 
  1035  0F16                     	;# 
  1036  0F17                     	;# 
  1037  0F18                     	;# 
  1038  0F19                     	;# 
  1039  0F1A                     	;# 
  1040  0F1B                     	;# 
  1041  0F1C                     	;# 
  1042  0F1D                     	;# 
  1043  0F1E                     	;# 
  1044  0F1F                     	;# 
  1045  0F20                     	;# 
  1046  0F21                     	;# 
  1047  0F22                     	;# 
  1048  0F23                     	;# 
  1049  0F24                     	;# 
  1050  0F25                     	;# 
  1051  0F26                     	;# 
  1052  0F27                     	;# 
  1053  0F28                     	;# 
  1054  0F29                     	;# 
  1055  0F2A                     	;# 
  1056  0F2B                     	;# 
  1057  0F2C                     	;# 
  1058  0F2D                     	;# 
  1059  0F2E                     	;# 
  1060  0F2F                     	;# 
  1061  0F30                     	;# 
  1062  0F31                     	;# 
  1063  0F32                     	;# 
  1064  0F33                     	;# 
  1065  0F34                     	;# 
  1066  0F35                     	;# 
  1067  0F36                     	;# 
  1068  0F37                     	;# 
  1069  0FE4                     	;# 
  1070  0FE5                     	;# 
  1071  0FE6                     	;# 
  1072  0FE7                     	;# 
  1073  0FE8                     	;# 
  1074  0FE9                     	;# 
  1075  0FEA                     	;# 
  1076  0FEB                     	;# 
  1077  0FED                     	;# 
  1078  0FEE                     	;# 
  1079  0FEF                     	;# 
  1080  0000                     	;# 
  1081  0001                     	;# 
  1082  0002                     	;# 
  1083  0003                     	;# 
  1084  0004                     	;# 
  1085  0005                     	;# 
  1086  0006                     	;# 
  1087  0007                     	;# 
  1088  0008                     	;# 
  1089  0009                     	;# 
  1090  000A                     	;# 
  1091  000B                     	;# 
  1092  000C                     	;# 
  1093  000E                     	;# 
  1094  0010                     	;# 
  1095  0011                     	;# 
  1096  0012                     	;# 
  1097  0013                     	;# 
  1098  0014                     	;# 
  1099  0015                     	;# 
  1100  0015                     	;# 
  1101  0016                     	;# 
  1102  0016                     	;# 
  1103  0017                     	;# 
  1104  0018                     	;# 
  1105  0019                     	;# 
  1106  0019                     	;# 
  1107  001A                     	;# 
  1108  001B                     	;# 
  1109  001C                     	;# 
  1110  001D                     	;# 
  1111  001E                     	;# 
  1112  001F                     	;# 
  1113  008C                     	;# 
  1114  008E                     	;# 
  1115  0090                     	;# 
  1116  0091                     	;# 
  1117  0092                     	;# 
  1118  0093                     	;# 
  1119  0094                     	;# 
  1120  0097                     	;# 
  1121  009B                     	;# 
  1122  009B                     	;# 
  1123  009C                     	;# 
  1124  009D                     	;# 
  1125  009E                     	;# 
  1126  009F                     	;# 
  1127  010C                     	;# 
  1128  010E                     	;# 
  1129  0111                     	;# 
  1130  0112                     	;# 
  1131  0113                     	;# 
  1132  0114                     	;# 
  1133  0115                     	;# 
  1134  0116                     	;# 
  1135  0117                     	;# 
  1136  0118                     	;# 
  1137  0119                     	;# 
  1138  018C                     	;# 
  1139  018E                     	;# 
  1140  0197                     	;# 
  1141  0199                     	;# 
  1142  0199                     	;# 
  1143  0199                     	;# 
  1144  019A                     	;# 
  1145  019A                     	;# 
  1146  019A                     	;# 
  1147  019B                     	;# 
  1148  019B                     	;# 
  1149  019B                     	;# 
  1150  019B                     	;# 
  1151  019B                     	;# 
  1152  019C                     	;# 
  1153  019C                     	;# 
  1154  019C                     	;# 
  1155  019D                     	;# 
  1156  019D                     	;# 
  1157  019D                     	;# 
  1158  019E                     	;# 
  1159  019E                     	;# 
  1160  019E                     	;# 
  1161  019F                     	;# 
  1162  019F                     	;# 
  1163  019F                     	;# 
  1164  019F                     	;# 
  1165  019F                     	;# 
  1166  020C                     	;# 
  1167  020E                     	;# 
  1168  0211                     	;# 
  1169  0211                     	;# 
  1170  0212                     	;# 
  1171  0212                     	;# 
  1172  0213                     	;# 
  1173  0213                     	;# 
  1174  0214                     	;# 
  1175  0214                     	;# 
  1176  0215                     	;# 
  1177  0215                     	;# 
  1178  0215                     	;# 
  1179  0215                     	;# 
  1180  0216                     	;# 
  1181  0216                     	;# 
  1182  0217                     	;# 
  1183  0217                     	;# 
  1184  0219                     	;# 
  1185  021A                     	;# 
  1186  021B                     	;# 
  1187  021C                     	;# 
  1188  021D                     	;# 
  1189  021D                     	;# 
  1190  021E                     	;# 
  1191  021F                     	;# 
  1192  028C                     	;# 
  1193  028E                     	;# 
  1194  0291                     	;# 
  1195  0291                     	;# 
  1196  0292                     	;# 
  1197  0293                     	;# 
  1198  0294                     	;# 
  1199  0295                     	;# 
  1200  0295                     	;# 
  1201  0296                     	;# 
  1202  0297                     	;# 
  1203  0298                     	;# 
  1204  029F                     	;# 
  1205  030C                     	;# 
  1206  030E                     	;# 
  1207  0311                     	;# 
  1208  0311                     	;# 
  1209  0312                     	;# 
  1210  0313                     	;# 
  1211  0314                     	;# 
  1212  0315                     	;# 
  1213  0315                     	;# 
  1214  0316                     	;# 
  1215  0317                     	;# 
  1216  0318                     	;# 
  1217  038C                     	;# 
  1218  038E                     	;# 
  1219  0391                     	;# 
  1220  0392                     	;# 
  1221  0393                     	;# 
  1222  0397                     	;# 
  1223  0398                     	;# 
  1224  0399                     	;# 
  1225  039A                     	;# 
  1226  039C                     	;# 
  1227  039D                     	;# 
  1228  039E                     	;# 
  1229  039F                     	;# 
  1230  0411                     	;# 
  1231  0411                     	;# 
  1232  0412                     	;# 
  1233  0413                     	;# 
  1234  0414                     	;# 
  1235  0415                     	;# 
  1236  0416                     	;# 
  1237  0417                     	;# 
  1238  0418                     	;# 
  1239  0418                     	;# 
  1240  0419                     	;# 
  1241  041A                     	;# 
  1242  041B                     	;# 
  1243  041C                     	;# 
  1244  041D                     	;# 
  1245  041E                     	;# 
  1246  041F                     	;# 
  1247  0498                     	;# 
  1248  0498                     	;# 
  1249  0499                     	;# 
  1250  049A                     	;# 
  1251  049B                     	;# 
  1252  049B                     	;# 
  1253  049C                     	;# 
  1254  049D                     	;# 
  1255  049E                     	;# 
  1256  049F                     	;# 
  1257  0617                     	;# 
  1258  0618                     	;# 
  1259  0619                     	;# 
  1260  0619                     	;# 
  1261  061A                     	;# 
  1262  061B                     	;# 
  1263  061C                     	;# 
  1264  061C                     	;# 
  1265  061F                     	;# 
  1266  0691                     	;# 
  1267  0692                     	;# 
  1268  0693                     	;# 
  1269  0694                     	;# 
  1270  0695                     	;# 
  1271  0696                     	;# 
  1272  0697                     	;# 
  1273  0698                     	;# 
  1274  0699                     	;# 
  1275  0711                     	;# 
  1276  0712                     	;# 
  1277  0713                     	;# 
  1278  0714                     	;# 
  1279  0715                     	;# 
  1280  0716                     	;# 
  1281  0717                     	;# 
  1282  0718                     	;# 
  1283  0719                     	;# 
  1284  0891                     	;# 
  1285  0891                     	;# 
  1286  0891                     	;# 
  1287  0891                     	;# 
  1288  0891                     	;# 
  1289  0891                     	;# 
  1290  0892                     	;# 
  1291  0892                     	;# 
  1292  0892                     	;# 
  1293  0893                     	;# 
  1294  0893                     	;# 
  1295  0893                     	;# 
  1296  0893                     	;# 
  1297  0893                     	;# 
  1298  0893                     	;# 
  1299  0894                     	;# 
  1300  0894                     	;# 
  1301  0894                     	;# 
  1302  0895                     	;# 
  1303  0895                     	;# 
  1304  0895                     	;# 
  1305  0896                     	;# 
  1306  0896                     	;# 
  1307  0896                     	;# 
  1308  089B                     	;# 
  1309  0911                     	;# 
  1310  0912                     	;# 
  1311  0913                     	;# 
  1312  0914                     	;# 
  1313  0915                     	;# 
  1314  0916                     	;# 
  1315  0918                     	;# 
  1316  0919                     	;# 
  1317  091A                     	;# 
  1318  091B                     	;# 
  1319  091C                     	;# 
  1320  091D                     	;# 
  1321  091E                     	;# 
  1322  091F                     	;# 
  1323  0E0F                     	;# 
  1324  0E10                     	;# 
  1325  0E11                     	;# 
  1326  0E12                     	;# 
  1327  0E13                     	;# 
  1328  0E14                     	;# 
  1329  0E15                     	;# 
  1330  0E16                     	;# 
  1331  0E17                     	;# 
  1332  0E18                     	;# 
  1333  0E19                     	;# 
  1334  0E1A                     	;# 
  1335  0E1B                     	;# 
  1336  0E1C                     	;# 
  1337  0E1D                     	;# 
  1338  0E1E                     	;# 
  1339  0E1F                     	;# 
  1340  0E20                     	;# 
  1341  0E21                     	;# 
  1342  0E22                     	;# 
  1343  0E24                     	;# 
  1344  0E25                     	;# 
  1345  0E28                     	;# 
  1346  0E29                     	;# 
  1347  0E2A                     	;# 
  1348  0E2B                     	;# 
  1349  0E2C                     	;# 
  1350  0E2D                     	;# 
  1351  0E2E                     	;# 
  1352  0E2F                     	;# 
  1353  0E90                     	;# 
  1354  0E91                     	;# 
  1355  0E92                     	;# 
  1356  0E94                     	;# 
  1357  0E95                     	;# 
  1358  0EA0                     	;# 
  1359  0EA1                     	;# 
  1360  0EA2                     	;# 
  1361  0EA3                     	;# 
  1362  0EA4                     	;# 
  1363  0EA5                     	;# 
  1364  0F0F                     	;# 
  1365  0F10                     	;# 
  1366  0F11                     	;# 
  1367  0F12                     	;# 
  1368  0F13                     	;# 
  1369  0F14                     	;# 
  1370  0F15                     	;# 
  1371  0F16                     	;# 
  1372  0F17                     	;# 
  1373  0F18                     	;# 
  1374  0F19                     	;# 
  1375  0F1A                     	;# 
  1376  0F1B                     	;# 
  1377  0F1C                     	;# 
  1378  0F1D                     	;# 
  1379  0F1E                     	;# 
  1380  0F1F                     	;# 
  1381  0F20                     	;# 
  1382  0F21                     	;# 
  1383  0F22                     	;# 
  1384  0F23                     	;# 
  1385  0F24                     	;# 
  1386  0F25                     	;# 
  1387  0F26                     	;# 
  1388  0F27                     	;# 
  1389  0F28                     	;# 
  1390  0F29                     	;# 
  1391  0F2A                     	;# 
  1392  0F2B                     	;# 
  1393  0F2C                     	;# 
  1394  0F2D                     	;# 
  1395  0F2E                     	;# 
  1396  0F2F                     	;# 
  1397  0F30                     	;# 
  1398  0F31                     	;# 
  1399  0F32                     	;# 
  1400  0F33                     	;# 
  1401  0F34                     	;# 
  1402  0F35                     	;# 
  1403  0F36                     	;# 
  1404  0F37                     	;# 
  1405  0FE4                     	;# 
  1406  0FE5                     	;# 
  1407  0FE6                     	;# 
  1408  0FE7                     	;# 
  1409  0FE8                     	;# 
  1410  0FE9                     	;# 
  1411  0FEA                     	;# 
  1412  0FEB                     	;# 
  1413  0FED                     	;# 
  1414  0FEE                     	;# 
  1415  0FEF                     	;# 
  1416  0000                     	;# 
  1417  0001                     	;# 
  1418  0002                     	;# 
  1419  0003                     	;# 
  1420  0004                     	;# 
  1421  0005                     	;# 
  1422  0006                     	;# 
  1423  0007                     	;# 
  1424  0008                     	;# 
  1425  0009                     	;# 
  1426  000A                     	;# 
  1427  000B                     	;# 
  1428  000C                     	;# 
  1429  000E                     	;# 
  1430  0010                     	;# 
  1431  0011                     	;# 
  1432  0012                     	;# 
  1433  0013                     	;# 
  1434  0014                     	;# 
  1435  0015                     	;# 
  1436  0015                     	;# 
  1437  0016                     	;# 
  1438  0016                     	;# 
  1439  0017                     	;# 
  1440  0018                     	;# 
  1441  0019                     	;# 
  1442  0019                     	;# 
  1443  001A                     	;# 
  1444  001B                     	;# 
  1445  001C                     	;# 
  1446  001D                     	;# 
  1447  001E                     	;# 
  1448  001F                     	;# 
  1449  008C                     	;# 
  1450  008E                     	;# 
  1451  0090                     	;# 
  1452  0091                     	;# 
  1453  0092                     	;# 
  1454  0093                     	;# 
  1455  0094                     	;# 
  1456  0097                     	;# 
  1457  009B                     	;# 
  1458  009B                     	;# 
  1459  009C                     	;# 
  1460  009D                     	;# 
  1461  009E                     	;# 
  1462  009F                     	;# 
  1463  010C                     	;# 
  1464  010E                     	;# 
  1465  0111                     	;# 
  1466  0112                     	;# 
  1467  0113                     	;# 
  1468  0114                     	;# 
  1469  0115                     	;# 
  1470  0116                     	;# 
  1471  0117                     	;# 
  1472  0118                     	;# 
  1473  0119                     	;# 
  1474  018C                     	;# 
  1475  018E                     	;# 
  1476  0197                     	;# 
  1477  0199                     	;# 
  1478  0199                     	;# 
  1479  0199                     	;# 
  1480  019A                     	;# 
  1481  019A                     	;# 
  1482  019A                     	;# 
  1483  019B                     	;# 
  1484  019B                     	;# 
  1485  019B                     	;# 
  1486  019B                     	;# 
  1487  019B                     	;# 
  1488  019C                     	;# 
  1489  019C                     	;# 
  1490  019C                     	;# 
  1491  019D                     	;# 
  1492  019D                     	;# 
  1493  019D                     	;# 
  1494  019E                     	;# 
  1495  019E                     	;# 
  1496  019E                     	;# 
  1497  019F                     	;# 
  1498  019F                     	;# 
  1499  019F                     	;# 
  1500  019F                     	;# 
  1501  019F                     	;# 
  1502  020C                     	;# 
  1503  020E                     	;# 
  1504  0211                     	;# 
  1505  0211                     	;# 
  1506  0212                     	;# 
  1507  0212                     	;# 
  1508  0213                     	;# 
  1509  0213                     	;# 
  1510  0214                     	;# 
  1511  0214                     	;# 
  1512  0215                     	;# 
  1513  0215                     	;# 
  1514  0215                     	;# 
  1515  0215                     	;# 
  1516  0216                     	;# 
  1517  0216                     	;# 
  1518  0217                     	;# 
  1519  0217                     	;# 
  1520  0219                     	;# 
  1521  021A                     	;# 
  1522  021B                     	;# 
  1523  021C                     	;# 
  1524  021D                     	;# 
  1525  021D                     	;# 
  1526  021E                     	;# 
  1527  021F                     	;# 
  1528  028C                     	;# 
  1529  028E                     	;# 
  1530  0291                     	;# 
  1531  0291                     	;# 
  1532  0292                     	;# 
  1533  0293                     	;# 
  1534  0294                     	;# 
  1535  0295                     	;# 
  1536  0295                     	;# 
  1537  0296                     	;# 
  1538  0297                     	;# 
  1539  0298                     	;# 
  1540  029F                     	;# 
  1541  030C                     	;# 
  1542  030E                     	;# 
  1543  0311                     	;# 
  1544  0311                     	;# 
  1545  0312                     	;# 
  1546  0313                     	;# 
  1547  0314                     	;# 
  1548  0315                     	;# 
  1549  0315                     	;# 
  1550  0316                     	;# 
  1551  0317                     	;# 
  1552  0318                     	;# 
  1553  038C                     	;# 
  1554  038E                     	;# 
  1555  0391                     	;# 
  1556  0392                     	;# 
  1557  0393                     	;# 
  1558  0397                     	;# 
  1559  0398                     	;# 
  1560  0399                     	;# 
  1561  039A                     	;# 
  1562  039C                     	;# 
  1563  039D                     	;# 
  1564  039E                     	;# 
  1565  039F                     	;# 
  1566  0411                     	;# 
  1567  0411                     	;# 
  1568  0412                     	;# 
  1569  0413                     	;# 
  1570  0414                     	;# 
  1571  0415                     	;# 
  1572  0416                     	;# 
  1573  0417                     	;# 
  1574  0418                     	;# 
  1575  0418                     	;# 
  1576  0419                     	;# 
  1577  041A                     	;# 
  1578  041B                     	;# 
  1579  041C                     	;# 
  1580  041D                     	;# 
  1581  041E                     	;# 
  1582  041F                     	;# 
  1583  0498                     	;# 
  1584  0498                     	;# 
  1585  0499                     	;# 
  1586  049A                     	;# 
  1587  049B                     	;# 
  1588  049B                     	;# 
  1589  049C                     	;# 
  1590  049D                     	;# 
  1591  049E                     	;# 
  1592  049F                     	;# 
  1593  0617                     	;# 
  1594  0618                     	;# 
  1595  0619                     	;# 
  1596  0619                     	;# 
  1597  061A                     	;# 
  1598  061B                     	;# 
  1599  061C                     	;# 
  1600  061C                     	;# 
  1601  061F                     	;# 
  1602  0691                     	;# 
  1603  0692                     	;# 
  1604  0693                     	;# 
  1605  0694                     	;# 
  1606  0695                     	;# 
  1607  0696                     	;# 
  1608  0697                     	;# 
  1609  0698                     	;# 
  1610  0699                     	;# 
  1611  0711                     	;# 
  1612  0712                     	;# 
  1613  0713                     	;# 
  1614  0714                     	;# 
  1615  0715                     	;# 
  1616  0716                     	;# 
  1617  0717                     	;# 
  1618  0718                     	;# 
  1619  0719                     	;# 
  1620  0891                     	;# 
  1621  0891                     	;# 
  1622  0891                     	;# 
  1623  0891                     	;# 
  1624  0891                     	;# 
  1625  0891                     	;# 
  1626  0892                     	;# 
  1627  0892                     	;# 
  1628  0892                     	;# 
  1629  0893                     	;# 
  1630  0893                     	;# 
  1631  0893                     	;# 
  1632  0893                     	;# 
  1633  0893                     	;# 
  1634  0893                     	;# 
  1635  0894                     	;# 
  1636  0894                     	;# 
  1637  0894                     	;# 
  1638  0895                     	;# 
  1639  0895                     	;# 
  1640  0895                     	;# 
  1641  0896                     	;# 
  1642  0896                     	;# 
  1643  0896                     	;# 
  1644  089B                     	;# 
  1645  0911                     	;# 
  1646  0912                     	;# 
  1647  0913                     	;# 
  1648  0914                     	;# 
  1649  0915                     	;# 
  1650  0916                     	;# 
  1651  0918                     	;# 
  1652  0919                     	;# 
  1653  091A                     	;# 
  1654  091B                     	;# 
  1655  091C                     	;# 
  1656  091D                     	;# 
  1657  091E                     	;# 
  1658  091F                     	;# 
  1659  0E0F                     	;# 
  1660  0E10                     	;# 
  1661  0E11                     	;# 
  1662  0E12                     	;# 
  1663  0E13                     	;# 
  1664  0E14                     	;# 
  1665  0E15                     	;# 
  1666  0E16                     	;# 
  1667  0E17                     	;# 
  1668  0E18                     	;# 
  1669  0E19                     	;# 
  1670  0E1A                     	;# 
  1671  0E1B                     	;# 
  1672  0E1C                     	;# 
  1673  0E1D                     	;# 
  1674  0E1E                     	;# 
  1675  0E1F                     	;# 
  1676  0E20                     	;# 
  1677  0E21                     	;# 
  1678  0E22                     	;# 
  1679  0E24                     	;# 
  1680  0E25                     	;# 
  1681  0E28                     	;# 
  1682  0E29                     	;# 
  1683  0E2A                     	;# 
  1684  0E2B                     	;# 
  1685  0E2C                     	;# 
  1686  0E2D                     	;# 
  1687  0E2E                     	;# 
  1688  0E2F                     	;# 
  1689  0E90                     	;# 
  1690  0E91                     	;# 
  1691  0E92                     	;# 
  1692  0E94                     	;# 
  1693  0E95                     	;# 
  1694  0EA0                     	;# 
  1695  0EA1                     	;# 
  1696  0EA2                     	;# 
  1697  0EA3                     	;# 
  1698  0EA4                     	;# 
  1699  0EA5                     	;# 
  1700  0F0F                     	;# 
  1701  0F10                     	;# 
  1702  0F11                     	;# 
  1703  0F12                     	;# 
  1704  0F13                     	;# 
  1705  0F14                     	;# 
  1706  0F15                     	;# 
  1707  0F16                     	;# 
  1708  0F17                     	;# 
  1709  0F18                     	;# 
  1710  0F19                     	;# 
  1711  0F1A                     	;# 
  1712  0F1B                     	;# 
  1713  0F1C                     	;# 
  1714  0F1D                     	;# 
  1715  0F1E                     	;# 
  1716  0F1F                     	;# 
  1717  0F20                     	;# 
  1718  0F21                     	;# 
  1719  0F22                     	;# 
  1720  0F23                     	;# 
  1721  0F24                     	;# 
  1722  0F25                     	;# 
  1723  0F26                     	;# 
  1724  0F27                     	;# 
  1725  0F28                     	;# 
  1726  0F29                     	;# 
  1727  0F2A                     	;# 
  1728  0F2B                     	;# 
  1729  0F2C                     	;# 
  1730  0F2D                     	;# 
  1731  0F2E                     	;# 
  1732  0F2F                     	;# 
  1733  0F30                     	;# 
  1734  0F31                     	;# 
  1735  0F32                     	;# 
  1736  0F33                     	;# 
  1737  0F34                     	;# 
  1738  0F35                     	;# 
  1739  0F36                     	;# 
  1740  0F37                     	;# 
  1741  0FE4                     	;# 
  1742  0FE5                     	;# 
  1743  0FE6                     	;# 
  1744  0FE7                     	;# 
  1745  0FE8                     	;# 
  1746  0FE9                     	;# 
  1747  0FEA                     	;# 
  1748  0FEB                     	;# 
  1749  0FED                     	;# 
  1750  0FEE                     	;# 
  1751  0FEF                     	;# 
  1752  0000                     	;# 
  1753  0001                     	;# 
  1754  0002                     	;# 
  1755  0003                     	;# 
  1756  0004                     	;# 
  1757  0005                     	;# 
  1758  0006                     	;# 
  1759  0007                     	;# 
  1760  0008                     	;# 
  1761  0009                     	;# 
  1762  000A                     	;# 
  1763  000B                     	;# 
  1764  000C                     	;# 
  1765  000E                     	;# 
  1766  0010                     	;# 
  1767  0011                     	;# 
  1768  0012                     	;# 
  1769  0013                     	;# 
  1770  0014                     	;# 
  1771  0015                     	;# 
  1772  0015                     	;# 
  1773  0016                     	;# 
  1774  0016                     	;# 
  1775  0017                     	;# 
  1776  0018                     	;# 
  1777  0019                     	;# 
  1778  0019                     	;# 
  1779  001A                     	;# 
  1780  001B                     	;# 
  1781  001C                     	;# 
  1782  001D                     	;# 
  1783  001E                     	;# 
  1784  001F                     	;# 
  1785  008C                     	;# 
  1786  008E                     	;# 
  1787  0090                     	;# 
  1788  0091                     	;# 
  1789  0092                     	;# 
  1790  0093                     	;# 
  1791  0094                     	;# 
  1792  0097                     	;# 
  1793  009B                     	;# 
  1794  009B                     	;# 
  1795  009C                     	;# 
  1796  009D                     	;# 
  1797  009E                     	;# 
  1798  009F                     	;# 
  1799  010C                     	;# 
  1800  010E                     	;# 
  1801  0111                     	;# 
  1802  0112                     	;# 
  1803  0113                     	;# 
  1804  0114                     	;# 
  1805  0115                     	;# 
  1806  0116                     	;# 
  1807  0117                     	;# 
  1808  0118                     	;# 
  1809  0119                     	;# 
  1810  018C                     	;# 
  1811  018E                     	;# 
  1812  0197                     	;# 
  1813  0199                     	;# 
  1814  0199                     	;# 
  1815  0199                     	;# 
  1816  019A                     	;# 
  1817  019A                     	;# 
  1818  019A                     	;# 
  1819  019B                     	;# 
  1820  019B                     	;# 
  1821  019B                     	;# 
  1822  019B                     	;# 
  1823  019B                     	;# 
  1824  019C                     	;# 
  1825  019C                     	;# 
  1826  019C                     	;# 
  1827  019D                     	;# 
  1828  019D                     	;# 
  1829  019D                     	;# 
  1830  019E                     	;# 
  1831  019E                     	;# 
  1832  019E                     	;# 
  1833  019F                     	;# 
  1834  019F                     	;# 
  1835  019F                     	;# 
  1836  019F                     	;# 
  1837  019F                     	;# 
  1838  020C                     	;# 
  1839  020E                     	;# 
  1840  0211                     	;# 
  1841  0211                     	;# 
  1842  0212                     	;# 
  1843  0212                     	;# 
  1844  0213                     	;# 
  1845  0213                     	;# 
  1846  0214                     	;# 
  1847  0214                     	;# 
  1848  0215                     	;# 
  1849  0215                     	;# 
  1850  0215                     	;# 
  1851  0215                     	;# 
  1852  0216                     	;# 
  1853  0216                     	;# 
  1854  0217                     	;# 
  1855  0217                     	;# 
  1856  0219                     	;# 
  1857  021A                     	;# 
  1858  021B                     	;# 
  1859  021C                     	;# 
  1860  021D                     	;# 
  1861  021D                     	;# 
  1862  021E                     	;# 
  1863  021F                     	;# 
  1864  028C                     	;# 
  1865  028E                     	;# 
  1866  0291                     	;# 
  1867  0291                     	;# 
  1868  0292                     	;# 
  1869  0293                     	;# 
  1870  0294                     	;# 
  1871  0295                     	;# 
  1872  0295                     	;# 
  1873  0296                     	;# 
  1874  0297                     	;# 
  1875  0298                     	;# 
  1876  029F                     	;# 
  1877  030C                     	;# 
  1878  030E                     	;# 
  1879  0311                     	;# 
  1880  0311                     	;# 
  1881  0312                     	;# 
  1882  0313                     	;# 
  1883  0314                     	;# 
  1884  0315                     	;# 
  1885  0315                     	;# 
  1886  0316                     	;# 
  1887  0317                     	;# 
  1888  0318                     	;# 
  1889  038C                     	;# 
  1890  038E                     	;# 
  1891  0391                     	;# 
  1892  0392                     	;# 
  1893  0393                     	;# 
  1894  0397                     	;# 
  1895  0398                     	;# 
  1896  0399                     	;# 
  1897  039A                     	;# 
  1898  039C                     	;# 
  1899  039D                     	;# 
  1900  039E                     	;# 
  1901  039F                     	;# 
  1902  0411                     	;# 
  1903  0411                     	;# 
  1904  0412                     	;# 
  1905  0413                     	;# 
  1906  0414                     	;# 
  1907  0415                     	;# 
  1908  0416                     	;# 
  1909  0417                     	;# 
  1910  0418                     	;# 
  1911  0418                     	;# 
  1912  0419                     	;# 
  1913  041A                     	;# 
  1914  041B                     	;# 
  1915  041C                     	;# 
  1916  041D                     	;# 
  1917  041E                     	;# 
  1918  041F                     	;# 
  1919  0498                     	;# 
  1920  0498                     	;# 
  1921  0499                     	;# 
  1922  049A                     	;# 
  1923  049B                     	;# 
  1924  049B                     	;# 
  1925  049C                     	;# 
  1926  049D                     	;# 
  1927  049E                     	;# 
  1928  049F                     	;# 
  1929  0617                     	;# 
  1930  0618                     	;# 
  1931  0619                     	;# 
  1932  0619                     	;# 
  1933  061A                     	;# 
  1934  061B                     	;# 
  1935  061C                     	;# 
  1936  061C                     	;# 
  1937  061F                     	;# 
  1938  0691                     	;# 
  1939  0692                     	;# 
  1940  0693                     	;# 
  1941  0694                     	;# 
  1942  0695                     	;# 
  1943  0696                     	;# 
  1944  0697                     	;# 
  1945  0698                     	;# 
  1946  0699                     	;# 
  1947  0711                     	;# 
  1948  0712                     	;# 
  1949  0713                     	;# 
  1950  0714                     	;# 
  1951  0715                     	;# 
  1952  0716                     	;# 
  1953  0717                     	;# 
  1954  0718                     	;# 
  1955  0719                     	;# 
  1956  0891                     	;# 
  1957  0891                     	;# 
  1958  0891                     	;# 
  1959  0891                     	;# 
  1960  0891                     	;# 
  1961  0891                     	;# 
  1962  0892                     	;# 
  1963  0892                     	;# 
  1964  0892                     	;# 
  1965  0893                     	;# 
  1966  0893                     	;# 
  1967  0893                     	;# 
  1968  0893                     	;# 
  1969  0893                     	;# 
  1970  0893                     	;# 
  1971  0894                     	;# 
  1972  0894                     	;# 
  1973  0894                     	;# 
  1974  0895                     	;# 
  1975  0895                     	;# 
  1976  0895                     	;# 
  1977  0896                     	;# 
  1978  0896                     	;# 
  1979  0896                     	;# 
  1980  089B                     	;# 
  1981  0911                     	;# 
  1982  0912                     	;# 
  1983  0913                     	;# 
  1984  0914                     	;# 
  1985  0915                     	;# 
  1986  0916                     	;# 
  1987  0918                     	;# 
  1988  0919                     	;# 
  1989  091A                     	;# 
  1990  091B                     	;# 
  1991  091C                     	;# 
  1992  091D                     	;# 
  1993  091E                     	;# 
  1994  091F                     	;# 
  1995  0E0F                     	;# 
  1996  0E10                     	;# 
  1997  0E11                     	;# 
  1998  0E12                     	;# 
  1999  0E13                     	;# 
  2000  0E14                     	;# 
  2001  0E15                     	;# 
  2002  0E16                     	;# 
  2003  0E17                     	;# 
  2004  0E18                     	;# 
  2005  0E19                     	;# 
  2006  0E1A                     	;# 
  2007  0E1B                     	;# 
  2008  0E1C                     	;# 
  2009  0E1D                     	;# 
  2010  0E1E                     	;# 
  2011  0E1F                     	;# 
  2012  0E20                     	;# 
  2013  0E21                     	;# 
  2014  0E22                     	;# 
  2015  0E24                     	;# 
  2016  0E25                     	;# 
  2017  0E28                     	;# 
  2018  0E29                     	;# 
  2019  0E2A                     	;# 
  2020  0E2B                     	;# 
  2021  0E2C                     	;# 
  2022  0E2D                     	;# 
  2023  0E2E                     	;# 
  2024  0E2F                     	;# 
  2025  0E90                     	;# 
  2026  0E91                     	;# 
  2027  0E92                     	;# 
  2028  0E94                     	;# 
  2029  0E95                     	;# 
  2030  0EA0                     	;# 
  2031  0EA1                     	;# 
  2032  0EA2                     	;# 
  2033  0EA3                     	;# 
  2034  0EA4                     	;# 
  2035  0EA5                     	;# 
  2036  0F0F                     	;# 
  2037  0F10                     	;# 
  2038  0F11                     	;# 
  2039  0F12                     	;# 
  2040  0F13                     	;# 
  2041  0F14                     	;# 
  2042  0F15                     	;# 
  2043  0F16                     	;# 
  2044  0F17                     	;# 
  2045  0F18                     	;# 
  2046  0F19                     	;# 
  2047  0F1A                     	;# 
  2048  0F1B                     	;# 
  2049  0F1C                     	;# 
  2050  0F1D                     	;# 
  2051  0F1E                     	;# 
  2052  0F1F                     	;# 
  2053  0F20                     	;# 
  2054  0F21                     	;# 
  2055  0F22                     	;# 
  2056  0F23                     	;# 
  2057  0F24                     	;# 
  2058  0F25                     	;# 
  2059  0F26                     	;# 
  2060  0F27                     	;# 
  2061  0F28                     	;# 
  2062  0F29                     	;# 
  2063  0F2A                     	;# 
  2064  0F2B                     	;# 
  2065  0F2C                     	;# 
  2066  0F2D                     	;# 
  2067  0F2E                     	;# 
  2068  0F2F                     	;# 
  2069  0F30                     	;# 
  2070  0F31                     	;# 
  2071  0F32                     	;# 
  2072  0F33                     	;# 
  2073  0F34                     	;# 
  2074  0F35                     	;# 
  2075  0F36                     	;# 
  2076  0F37                     	;# 
  2077  0FE4                     	;# 
  2078  0FE5                     	;# 
  2079  0FE6                     	;# 
  2080  0FE7                     	;# 
  2081  0FE8                     	;# 
  2082  0FE9                     	;# 
  2083  0FEA                     	;# 
  2084  0FEB                     	;# 
  2085  0FED                     	;# 
  2086  0FEE                     	;# 
  2087  0FEF                     	;# 
  2088                           
  2089                           	psect	stringtext1
  2090  03DA                     __pstringtext1:
  2091  03DA                     main@header_g:
  2092  03DA  3424               	retlw	36
  2093  03DB  3447               	retlw	71
  2094  03DC  3450               	retlw	80
  2095  03DD  3447               	retlw	71
  2096  03DE  3447               	retlw	71
  2097  03DF  3441               	retlw	65
  2098  03E0  3400               	retlw	0
  2099  03E1                     __end_ofmain@header_g:
  2100                           
  2101                           	psect	nvBANK0
  2102  002C                     __pnvBANK0:
  2103  002C                     _EUSART_TxDefaultInterruptHandler:
  2104  002C                     	ds	2
  2105  002E                     _eusartTxBufferRemaining:
  2106  002E                     	ds	1
  2107                           
  2108                           	psect	nvBANK1
  2109  00E1                     __pnvBANK1:
  2110  00E1                     _EUSART_ErrorHandler:
  2111  00E1                     	ds	2
  2112  00E3                     _EUSART_OverrunErrorHandler:
  2113  00E3                     	ds	2
  2114  00E5                     _EUSART_FramingErrorHandler:
  2115  00E5                     	ds	2
  2116  00E7                     _EUSART_RxDefaultInterruptHandler:
  2117  00E7                     	ds	2
  2118  0011                     _PIR1bits	set	17
  2119  000B                     _INTCONbits	set	11
  2120  0097                     _WDTCON	set	151
  2121  008E                     _TRISC	set	142
  2122  008C                     _TRISA	set	140
  2123  0091                     _PIE1bits	set	145
  2124  010E                     _LATC	set	270
  2125  010C                     _LATA	set	268
  2126  018C                     _ANSELA	set	396
  2127  018E                     _ANSELC	set	398
  2128  0199                     _RC1REG	set	409
  2129  019D                     _RC1STAbits	set	413
  2130  019A                     _TX1REG	set	410
  2131  019E                     _TX1STAbits	set	414
  2132  019C                     _SP1BRGH	set	412
  2133  019B                     _SP1BRGL	set	411
  2134  019E                     _TX1STA	set	414
  2135  019D                     _RC1STA	set	413
  2136  019F                     _BAUD1CON	set	415
  2137  020E                     _WPUC	set	526
  2138  020C                     _WPUA	set	524
  2139  028E                     _ODCONC	set	654
  2140  028C                     _ODCONA	set	652
  2141  030E                     _SLRCONC	set	782
  2142  030C                     _SLRCONA	set	780
  2143  038E                     _INLVLC	set	910
  2144  038C                     _INLVLA	set	908
  2145  0916                     _PMD5	set	2326
  2146  0915                     _PMD4	set	2325
  2147  0914                     _PMD3	set	2324
  2148  0913                     _PMD2	set	2323
  2149  0912                     _PMD1	set	2322
  2150  0911                     _PMD0	set	2321
  2151  091E                     _OSCTUNE	set	2334
  2152  091F                     _OSCFRQ	set	2335
  2153  091D                     _OSCEN	set	2333
  2154  091B                     _OSCCON3	set	2331
  2155  0919                     _OSCCON1	set	2329
  2156  0E24                     _RXPPS	set	3620
  2157  0EA4                     _RC4PPS	set	3748
  2158                           
  2159                           	psect	cinit
  2160  002F                     start_initialization:	
  2161                           ; #config settings
  2162                           
  2163  002F                     __initialization:
  2164                           
  2165                           ; Clear objects allocated to COMMON
  2166  002F  3070               	movlw	low __pbssCOMMON
  2167  0030  0084               	movwf	4
  2168  0031  3000               	movlw	high __pbssCOMMON
  2169  0032  0085               	movwf	5
  2170  0033  3008               	movlw	8
  2171  0034  3183  23E1  3180   	fcall	clear_ram0
  2172                           
  2173                           ; Clear objects allocated to BANK0
  2174  0037  3020               	movlw	low __pbssBANK0
  2175  0038  0084               	movwf	4
  2176  0039  3000               	movlw	high __pbssBANK0
  2177  003A  0085               	movwf	5
  2178  003B  300C               	movlw	12
  2179  003C  3183  23E1  3180   	fcall	clear_ram0
  2180  003F                     end_of_initialization:	
  2181                           ;End of C runtime variable initialization code
  2182                           
  2183  003F                     __end_of__initialization:
  2184  003F  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2185  0040  0020               	movlb	0
  2186  0041  3180  2843         	ljmp	_main	;jump to C main() function
  2187                           
  2188                           	psect	bssCOMMON
  2189  0070                     __pbssCOMMON:
  2190  0070                     _eusartRxCount:
  2191  0070                     	ds	1
  2192  0071                     _eusartRxStatusBuffer:
  2193  0071                     	ds	1
  2194  0072                     _eusartRxBuffer:
  2195  0072                     	ds	1
  2196  0073                     _eusartRxTail:
  2197  0073                     	ds	1
  2198  0074                     _eusartRxHead:
  2199  0074                     	ds	1
  2200  0075                     _eusartTxTail:
  2201  0075                     	ds	1
  2202  0076                     _eusartTxHead:
  2203  0076                     	ds	1
  2204  0077                     _parserFlag:
  2205  0077                     	ds	1
  2206                           
  2207                           	psect	bssBANK0
  2208  0020                     __pbssBANK0:
  2209  0020                     _eusartTxBuffer:
  2210  0020                     	ds	8
  2211  0028                     _eusartRxLastError:
  2212  0028                     	ds	1
  2213  0029                     _rxData:
  2214  0029                     	ds	1
  2215  002A                     _dollarFlag:
  2216  002A                     	ds	1
  2217  002B                     _uartFlag:
  2218  002B                     	ds	1
  2219                           
  2220                           	psect	clrtext
  2221  03E1                     clear_ram0:	
  2222                           ;	Called with FSR0 containing the base address, and
  2223                           ;	WREG with the size to clear
  2224                           
  2225  03E1  0064               	clrwdt	;clear the watchdog before getting into this loop
  2226  03E2                     clrloop0:
  2227  03E2  0180               	clrf	0	;clear RAM location pointed to by FSR
  2228  03E3  3101               	addfsr 0,1
  2229  03E4  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2230  03E5  2BE2               	goto	clrloop0	;have we reached the end yet?
  2231  03E6  3400               	retlw	0	;all done for this memory range, return
  2232                           
  2233                           	psect	cstackBANK1
  2234  00A0                     __pcstackBANK1:
  2235  00A0                     main@rx_gps:
  2236                           
  2237                           ; 6 bytes @ 0x0
  2238  00A0                     	ds	6
  2239  00A6                     main@rx_time:
  2240                           
  2241                           ; 9 bytes @ 0x6
  2242  00A6                     	ds	9
  2243  00AF                     main@rx_lat:
  2244                           
  2245                           ; 9 bytes @ 0xF
  2246  00AF                     	ds	9
  2247  00B8                     main@rx_long:
  2248                           
  2249                           ; 10 bytes @ 0x18
  2250  00B8                     	ds	10
  2251  00C2                     main@i:
  2252                           
  2253                           ; 2 bytes @ 0x22
  2254  00C2                     	ds	2
  2255  00C4                     main@i_429:
  2256                           
  2257                           ; 2 bytes @ 0x24
  2258  00C4                     	ds	2
  2259  00C6                     main@i_430:
  2260                           
  2261                           ; 2 bytes @ 0x26
  2262  00C6                     	ds	2
  2263  00C8                     main@i_431:
  2264                           
  2265                           ; 2 bytes @ 0x28
  2266  00C8                     	ds	2
  2267  00CA                     main@i_432:
  2268                           
  2269                           ; 2 bytes @ 0x2A
  2270  00CA                     	ds	2
  2271  00CC                     main@nsSize:
  2272                           
  2273                           ; 1 bytes @ 0x2C
  2274  00CC                     	ds	1
  2275  00CD                     main@ewSize:
  2276                           
  2277                           ; 1 bytes @ 0x2D
  2278  00CD                     	ds	1
  2279  00CE                     main@rx_ns:
  2280                           
  2281                           ; 1 bytes @ 0x2E
  2282  00CE                     	ds	1
  2283  00CF                     main@rx_ew:
  2284                           
  2285                           ; 1 bytes @ 0x2F
  2286  00CF                     	ds	1
  2287  00D0                     main@cpos:
  2288                           
  2289                           ; 1 bytes @ 0x30
  2290  00D0                     	ds	1
  2291  00D1                     main@g_ok:
  2292                           
  2293                           ; 1 bytes @ 0x31
  2294  00D1                     	ds	1
  2295  00D2                     main@time_go:
  2296                           
  2297                           ; 1 bytes @ 0x32
  2298  00D2                     	ds	1
  2299  00D3                     main@lat_go:
  2300                           
  2301                           ; 1 bytes @ 0x33
  2302  00D3                     	ds	1
  2303  00D4                     main@long_go:
  2304                           
  2305                           ; 1 bytes @ 0x34
  2306  00D4                     	ds	1
  2307  00D5                     main@ns_go:
  2308                           
  2309                           ; 1 bytes @ 0x35
  2310  00D5                     	ds	1
  2311  00D6                     main@ew_go:
  2312                           
  2313                           ; 1 bytes @ 0x36
  2314  00D6                     	ds	1
  2315  00D7                     main@gnggaSize:
  2316                           
  2317                           ; 1 bytes @ 0x37
  2318  00D7                     	ds	1
  2319  00D8                     main@timeSize:
  2320                           
  2321                           ; 1 bytes @ 0x38
  2322  00D8                     	ds	1
  2323  00D9                     main@nspos:
  2324                           
  2325                           ; 1 bytes @ 0x39
  2326  00D9                     	ds	1
  2327  00DA                     main@ewpos:
  2328                           
  2329                           ; 1 bytes @ 0x3A
  2330  00DA                     	ds	1
  2331  00DB                     main@latSize:
  2332                           
  2333                           ; 1 bytes @ 0x3B
  2334  00DB                     	ds	1
  2335  00DC                     main@longSize:
  2336                           
  2337                           ; 1 bytes @ 0x3C
  2338  00DC                     	ds	1
  2339  00DD                     main@timepos:
  2340                           
  2341                           ; 1 bytes @ 0x3D
  2342  00DD                     	ds	1
  2343  00DE                     main@latpos:
  2344                           
  2345                           ; 1 bytes @ 0x3E
  2346  00DE                     	ds	1
  2347  00DF                     main@longpos:
  2348                           
  2349                           ; 1 bytes @ 0x3F
  2350  00DF                     	ds	1
  2351  00E0                     main@fpos:
  2352                           
  2353                           ; 1 bytes @ 0x40
  2354  00E0                     	ds	1
  2355                           
  2356                           	psect	cstackCOMMON
  2357  0078                     __pcstackCOMMON:
  2358  0078                     ?_EUSART_Receive_ISR:
  2359  0078                     ?_EUSART_Transmit_ISR:	
  2360                           ; 1 bytes @ 0x0
  2361                           
  2362  0078                     ??_EUSART_Transmit_ISR:	
  2363                           ; 1 bytes @ 0x0
  2364                           
  2365  0078                     ?_EUSART_DefaultFramingErrorHandler:	
  2366                           ; 1 bytes @ 0x0
  2367                           
  2368  0078                     ??_EUSART_DefaultFramingErrorHandler:	
  2369                           ; 1 bytes @ 0x0
  2370                           
  2371  0078                     ?_EUSART_DefaultOverrunErrorHandler:	
  2372                           ; 1 bytes @ 0x0
  2373                           
  2374  0078                     ??_EUSART_DefaultOverrunErrorHandler:	
  2375                           ; 1 bytes @ 0x0
  2376                           
  2377  0078                     ?_EUSART_DefaultErrorHandler:	
  2378                           ; 1 bytes @ 0x0
  2379                           
  2380  0078                     ?_EUSART_RxDataHandler:	
  2381                           ; 1 bytes @ 0x0
  2382                           
  2383  0078                     ??_EUSART_RxDataHandler:	
  2384                           ; 1 bytes @ 0x0
  2385                           
  2386  0078                     ?_PMD_Initialize:	
  2387                           ; 1 bytes @ 0x0
  2388                           
  2389  0078                     ?_OSCILLATOR_Initialize:	
  2390                           ; 1 bytes @ 0x0
  2391                           
  2392  0078                     ?_WDT_Initialize:	
  2393                           ; 1 bytes @ 0x0
  2394                           
  2395  0078                     ?_EUSART_Initialize:	
  2396                           ; 1 bytes @ 0x0
  2397                           
  2398  0078                     ?_EUSART_Write:	
  2399                           ; 1 bytes @ 0x0
  2400                           
  2401  0078                     ?_PIN_MANAGER_Initialize:	
  2402                           ; 1 bytes @ 0x0
  2403                           
  2404  0078                     ?_SYSTEM_Initialize:	
  2405                           ; 1 bytes @ 0x0
  2406                           
  2407  0078                     ?_INTERRUPT_InterruptManager:	
  2408                           ; 1 bytes @ 0x0
  2409                           
  2410  0078                     ?_main:	
  2411                           ; 1 bytes @ 0x0
  2412                           
  2413                           
  2414                           ; 1 bytes @ 0x0
  2415  0078                     	ds	1
  2416  0079                     ?_EUSART_SetRxInterruptHandler:
  2417  0079                     ??_EUSART_Receive_ISR:	
  2418                           ; 1 bytes @ 0x1
  2419                           
  2420  0079                     ?_EUSART_SetTxInterruptHandler:	
  2421                           ; 1 bytes @ 0x1
  2422                           
  2423  0079                     ?_EUSART_SetFramingErrorHandler:	
  2424                           ; 1 bytes @ 0x1
  2425                           
  2426  0079                     ?_EUSART_SetOverrunErrorHandler:	
  2427                           ; 1 bytes @ 0x1
  2428                           
  2429  0079                     ?_EUSART_SetErrorHandler:	
  2430                           ; 1 bytes @ 0x1
  2431                           
  2432  0079                     ??_EUSART_DefaultErrorHandler:	
  2433                           ; 1 bytes @ 0x1
  2434                           
  2435  0079                     ??_PMD_Initialize:	
  2436                           ; 1 bytes @ 0x1
  2437                           
  2438  0079                     ??_OSCILLATOR_Initialize:	
  2439                           ; 1 bytes @ 0x1
  2440                           
  2441  0079                     ??_WDT_Initialize:	
  2442                           ; 1 bytes @ 0x1
  2443                           
  2444  0079                     ??_EUSART_Write:	
  2445                           ; 1 bytes @ 0x1
  2446                           
  2447  0079                     ??_PIN_MANAGER_Initialize:	
  2448                           ; 1 bytes @ 0x1
  2449                           
  2450  0079                     ??_INTERRUPT_InterruptManager:	
  2451                           ; 1 bytes @ 0x1
  2452                           
  2453  0079                     EUSART_SetFramingErrorHandler@interruptHandler:	
  2454                           ; 1 bytes @ 0x1
  2455                           
  2456  0079                     EUSART_SetOverrunErrorHandler@interruptHandler:	
  2457                           ; 2 bytes @ 0x1
  2458                           
  2459  0079                     EUSART_SetErrorHandler@interruptHandler:	
  2460                           ; 2 bytes @ 0x1
  2461                           
  2462  0079                     EUSART_SetTxInterruptHandler@interruptHandler:	
  2463                           ; 2 bytes @ 0x1
  2464                           
  2465  0079                     EUSART_SetRxInterruptHandler@interruptHandler:	
  2466                           ; 2 bytes @ 0x1
  2467                           
  2468                           
  2469                           ; 2 bytes @ 0x1
  2470  0079                     	ds	1
  2471  007A                     EUSART_Write@txData:
  2472                           
  2473                           ; 1 bytes @ 0x2
  2474  007A                     	ds	1
  2475  007B                     ??_EUSART_SetRxInterruptHandler:
  2476  007B                     ??_EUSART_SetTxInterruptHandler:	
  2477                           ; 1 bytes @ 0x3
  2478                           
  2479  007B                     ??_EUSART_SetFramingErrorHandler:	
  2480                           ; 1 bytes @ 0x3
  2481                           
  2482  007B                     ??_EUSART_SetOverrunErrorHandler:	
  2483                           ; 1 bytes @ 0x3
  2484                           
  2485  007B                     ??_EUSART_SetErrorHandler:	
  2486                           ; 1 bytes @ 0x3
  2487                           
  2488  007B                     ??_EUSART_Initialize:	
  2489                           ; 1 bytes @ 0x3
  2490                           
  2491                           
  2492                           ; 1 bytes @ 0x3
  2493  007B                     	ds	1
  2494  007C                     ??_SYSTEM_Initialize:
  2495                           
  2496                           	psect	cstackBANK0
  2497  002F                     __pcstackBANK0:	
  2498                           ; 1 bytes @ 0x4
  2499                           
  2500  002F                     ??_main:
  2501                           
  2502                           ; 1 bytes @ 0x0
  2503  002F                     	ds	2
  2504                           
  2505                           	psect	maintext
  2506  0043                     __pmaintext:	
  2507 ;;
  2508 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2509 ;;
  2510 ;; *************** function _main *****************
  2511 ;; Defined at:
  2512 ;;		line 9 in file "main.c"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;		None
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  i               2   42[BANK1 ] int 
  2517 ;;  i               2   40[BANK1 ] int 
  2518 ;;  i               2   38[BANK1 ] int 
  2519 ;;  i               2   36[BANK1 ] int 
  2520 ;;  i               2   34[BANK1 ] int 
  2521 ;;  rx_long        10   24[BANK1 ] volatile unsigned char [
  2522 ;;  rx_lat          9   15[BANK1 ] unsigned char [9]
  2523 ;;  rx_time         9    6[BANK1 ] unsigned char [9]
  2524 ;;  rx_gps          6    0[BANK1 ] unsigned char [6]
  2525 ;;  fpos            1   64[BANK1 ] volatile unsigned char 
  2526 ;;  longpos         1   63[BANK1 ] volatile unsigned char 
  2527 ;;  latpos          1   62[BANK1 ] volatile unsigned char 
  2528 ;;  timepos         1   61[BANK1 ] volatile unsigned char 
  2529 ;;  longSize        1   60[BANK1 ] volatile unsigned char 
  2530 ;;  latSize         1   59[BANK1 ] volatile unsigned char 
  2531 ;;  ewpos           1   58[BANK1 ] volatile unsigned char 
  2532 ;;  nspos           1   57[BANK1 ] volatile unsigned char 
  2533 ;;  timeSize        1   56[BANK1 ] volatile unsigned char 
  2534 ;;  gnggaSize       1   55[BANK1 ] volatile unsigned char 
  2535 ;;  ew_go           1   54[BANK1 ] volatile _Bool 
  2536 ;;  ns_go           1   53[BANK1 ] volatile _Bool 
  2537 ;;  long_go         1   52[BANK1 ] volatile _Bool 
  2538 ;;  lat_go          1   51[BANK1 ] volatile _Bool 
  2539 ;;  time_go         1   50[BANK1 ] volatile _Bool 
  2540 ;;  g_ok            1   49[BANK1 ] volatile _Bool 
  2541 ;;  cpos            1   48[BANK1 ] volatile unsigned char 
  2542 ;;  rx_ew           1   47[BANK1 ] volatile unsigned char 
  2543 ;;  rx_ns           1   46[BANK1 ] volatile unsigned char 
  2544 ;;  ewSize          1   45[BANK1 ] volatile unsigned char 
  2545 ;;  nsSize          1   44[BANK1 ] volatile unsigned char 
  2546 ;; Return value:  Size  Location     Type
  2547 ;;                  1    wreg      void 
  2548 ;; Registers used:
  2549 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2550 ;; Tracked objects:
  2551 ;;		On entry : B1F/0
  2552 ;;		On exit  : 0/0
  2553 ;;		Unchanged: 0/0
  2554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  2555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2556 ;;      Locals:         0       0      65       0       0       0       0       0       0       0       0       0       
      +0       0
  2557 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  2558 ;;      Totals:         0       2      65       0       0       0       0       0       0       0       0       0       
      +0       0
  2559 ;;Total ram usage:       67 bytes
  2560 ;; Hardware stack levels required when called: 7
  2561 ;; This function calls:
  2562 ;;		_EUSART_Write
  2563 ;;		_SYSTEM_Initialize
  2564 ;; This function is called by:
  2565 ;;		Startup code after reset
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           
  2570                           ;psect for function _main
  2571  0043                     _main:
  2572  0043                     l1922:	
  2573                           ;incstack = 0
  2574                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2575                           
  2576                           
  2577                           ;main.c: 11:     SYSTEM_Initialize();
  2578  0043  3183  23B9  3180   	fcall	_SYSTEM_Initialize
  2579  0046                     l1924:
  2580                           
  2581                           ;main.c: 12:     (INTCONbits.GIE = 1);
  2582  0046  178B               	bsf	11,7	;volatile
  2583  0047                     l1926:
  2584                           
  2585                           ;main.c: 13:     (INTCONbits.PEIE = 1);
  2586  0047  170B               	bsf	11,6	;volatile
  2587  0048                     l1928:
  2588                           
  2589                           ;main.c: 17:     volatile uint8_t gnggaSize = 6;
  2590  0048  3006               	movlw	6
  2591  0049  0020               	movlb	0	; select bank0
  2592  004A  00AF               	movwf	??_main
  2593  004B  082F               	movf	??_main,w
  2594  004C  0021               	movlb	1	; select bank1
  2595  004D  00D7               	movwf	main@gnggaSize^(0+128)	;volatile
  2596  004E                     l1930:
  2597                           
  2598                           ;main.c: 18:     volatile uint8_t timeSize =9;
  2599  004E  3009               	movlw	9
  2600  004F  0020               	movlb	0	; select bank0
  2601  0050  00AF               	movwf	??_main
  2602  0051  082F               	movf	??_main,w
  2603  0052  0021               	movlb	1	; select bank1
  2604  0053  00D8               	movwf	main@timeSize^(0+128)	;volatile
  2605  0054                     l1932:
  2606                           
  2607                           ;main.c: 19:     volatile uint8_t latSize =9;
  2608  0054  3009               	movlw	9
  2609  0055  0020               	movlb	0	; select bank0
  2610  0056  00AF               	movwf	??_main
  2611  0057  082F               	movf	??_main,w
  2612  0058  0021               	movlb	1	; select bank1
  2613  0059  00DB               	movwf	main@latSize^(0+128)	;volatile
  2614  005A                     l1934:
  2615                           
  2616                           ;main.c: 20:     volatile uint8_t nsSize =1;
  2617  005A  3001               	movlw	1
  2618  005B  0020               	movlb	0	; select bank0
  2619  005C  00AF               	movwf	??_main
  2620  005D  082F               	movf	??_main,w
  2621  005E  0021               	movlb	1	; select bank1
  2622  005F  00CC               	movwf	main@nsSize^(0+128)	;volatile
  2623  0060                     l1936:
  2624                           
  2625                           ;main.c: 21:     volatile uint8_t longSize =11;
  2626  0060  300B               	movlw	11
  2627  0061  0020               	movlb	0	; select bank0
  2628  0062  00AF               	movwf	??_main
  2629  0063  082F               	movf	??_main,w
  2630  0064  0021               	movlb	1	; select bank1
  2631  0065  00DC               	movwf	main@longSize^(0+128)	;volatile
  2632  0066                     l1938:
  2633                           
  2634                           ;main.c: 22:     volatile uint8_t ewSize =1;
  2635  0066  3001               	movlw	1
  2636  0067  0020               	movlb	0	; select bank0
  2637  0068  00AF               	movwf	??_main
  2638  0069  082F               	movf	??_main,w
  2639  006A  0021               	movlb	1	; select bank1
  2640  006B  00CD               	movwf	main@ewSize^(0+128)	;volatile
  2641  006C                     l1940:
  2642                           
  2643                           ;main.c: 24:     unsigned char rx_gps[6];;main.c: 25:     unsigned char rx_time[9];;main
      +                          .c: 26:     unsigned char rx_lat[9];;main.c: 27:     volatile unsigned char rx_ns;;main.
      +                          c: 28:     volatile unsigned char rx_long[10];;main.c: 29:     volatile unsigned char rx
      +                          _ew;;main.c: 31:     volatile uint8_t fpos = 0;
  2644  006C  01E0               	clrf	main@fpos^(0+128)	;volatile
  2645  006D                     l1942:
  2646                           
  2647                           ;main.c: 32:     volatile uint8_t cpos = 0;
  2648  006D  01D0               	clrf	main@cpos^(0+128)	;volatile
  2649  006E                     l1944:
  2650                           
  2651                           ;main.c: 33:     volatile uint8_t timepos = 0;
  2652  006E  01DD               	clrf	main@timepos^(0+128)	;volatile
  2653  006F                     l1946:
  2654                           
  2655                           ;main.c: 34:     volatile uint8_t latpos = 0;
  2656  006F  01DE               	clrf	main@latpos^(0+128)	;volatile
  2657  0070                     l1948:
  2658                           
  2659                           ;main.c: 35:     volatile uint8_t nspos = 0;
  2660  0070  01D9               	clrf	main@nspos^(0+128)	;volatile
  2661  0071                     l1950:
  2662                           
  2663                           ;main.c: 36:     volatile uint8_t longpos = 0;
  2664  0071  01DF               	clrf	main@longpos^(0+128)	;volatile
  2665  0072                     l1952:
  2666                           
  2667                           ;main.c: 37:     volatile uint8_t ewpos = 0;
  2668  0072  01DA               	clrf	main@ewpos^(0+128)	;volatile
  2669  0073                     l1954:
  2670                           
  2671                           ;main.c: 40:     volatile _Bool g_ok = 0;
  2672  0073  01D1               	clrf	main@g_ok^(0+128)	;volatile
  2673  0074                     l1956:
  2674                           
  2675                           ;main.c: 41:     volatile _Bool time_go = 0;
  2676  0074  01D2               	clrf	main@time_go^(0+128)	;volatile
  2677  0075                     l1958:
  2678                           
  2679                           ;main.c: 42:     volatile _Bool lat_go = 0;
  2680  0075  01D3               	clrf	main@lat_go^(0+128)	;volatile
  2681  0076                     l1960:
  2682                           
  2683                           ;main.c: 43:     volatile _Bool long_go = 0;
  2684  0076  01D4               	clrf	main@long_go^(0+128)	;volatile
  2685  0077                     l1962:
  2686                           
  2687                           ;main.c: 44:     volatile _Bool ns_go = 0;
  2688  0077  01D5               	clrf	main@ns_go^(0+128)	;volatile
  2689  0078                     l1964:
  2690                           
  2691                           ;main.c: 45:     volatile _Bool ew_go = 0;
  2692  0078  01D6               	clrf	main@ew_go^(0+128)	;volatile
  2693  0079                     l1966:
  2694                           
  2695                           ;main.c: 47:     const unsigned char header_g[] = {"$GPGGA"};;main.c: 49:     for(int i=
      +                          0; i < latSize ; i++){
  2696  0079  01C2               	clrf	main@i^(0+128)
  2697  007A  01C3               	clrf	(main@i+1)^(0+128)
  2698  007B  2886               	goto	l1972
  2699  007C                     l1968:
  2700                           
  2701                           ;main.c: 50:         rx_lat[i] = 0;
  2702  007C  0021               	movlb	1	; select bank1
  2703  007D  0842               	movf	main@i^(0+128),w
  2704  007E  3EAF               	addlw	(low (main@rx_lat| 0))& (0+255)
  2705  007F  0086               	movwf	6
  2706  0080  0187               	clrf	7
  2707  0081  0181               	clrf	1
  2708  0082                     l1970:
  2709                           
  2710                           ;main.c: 51:     }
  2711  0082  3001               	movlw	1
  2712  0083  07C2               	addwf	main@i^(0+128),f
  2713  0084  3000               	movlw	0
  2714  0085  3DC3               	addwfc	(main@i+1)^(0+128),f
  2715  0086                     l1972:
  2716  0086  0843               	movf	(main@i+1)^(0+128),w
  2717  0087  3A80               	xorlw	128
  2718  0088  0020               	movlb	0	; select bank0
  2719  0089  00AF               	movwf	??_main
  2720  008A  3080               	movlw	128
  2721  008B  022F               	subwf	??_main,w
  2722  008C  1D03               	skipz
  2723  008D  2891               	goto	u1025
  2724  008E  0021               	movlb	1	; select bank1
  2725  008F  085B               	movf	main@latSize^(0+128),w	;volatile
  2726  0090  0242               	subwf	main@i^(0+128),w
  2727  0091                     u1025:
  2728  0091  1C03               	skipc
  2729  0092  2894               	goto	u1021
  2730  0093  2895               	goto	u1020
  2731  0094                     u1021:
  2732  0094  287C               	goto	l1968
  2733  0095                     u1020:
  2734  0095                     l1974:
  2735                           
  2736                           ;main.c: 52:     for(int i=0; i < longSize ; i++){
  2737  0095  0021               	movlb	1	; select bank1
  2738  0096  01C4               	clrf	main@i_429^(0+128)
  2739  0097  01C5               	clrf	(main@i_429+1)^(0+128)
  2740  0098  28A3               	goto	l1980
  2741  0099                     l1976:
  2742                           
  2743                           ;main.c: 53:         rx_long[i] = 0;
  2744  0099  0021               	movlb	1	; select bank1
  2745  009A  0844               	movf	main@i_429^(0+128),w
  2746  009B  3EB8               	addlw	(low (main@rx_long| 0))& (0+255)
  2747  009C  0086               	movwf	6
  2748  009D  0187               	clrf	7
  2749  009E  0181               	clrf	1
  2750  009F                     l1978:
  2751                           
  2752                           ;main.c: 54:     }
  2753  009F  3001               	movlw	1
  2754  00A0  07C4               	addwf	main@i_429^(0+128),f
  2755  00A1  3000               	movlw	0
  2756  00A2  3DC5               	addwfc	(main@i_429+1)^(0+128),f
  2757  00A3                     l1980:
  2758  00A3  0845               	movf	(main@i_429+1)^(0+128),w
  2759  00A4  3A80               	xorlw	128
  2760  00A5  0020               	movlb	0	; select bank0
  2761  00A6  00AF               	movwf	??_main
  2762  00A7  3080               	movlw	128
  2763  00A8  022F               	subwf	??_main,w
  2764  00A9  1D03               	skipz
  2765  00AA  28AE               	goto	u1035
  2766  00AB  0021               	movlb	1	; select bank1
  2767  00AC  085C               	movf	main@longSize^(0+128),w	;volatile
  2768  00AD  0244               	subwf	main@i_429^(0+128),w
  2769  00AE                     u1035:
  2770  00AE  1C03               	skipc
  2771  00AF  28B1               	goto	u1031
  2772  00B0  28B2               	goto	u1030
  2773  00B1                     u1031:
  2774  00B1  2899               	goto	l1976
  2775  00B2                     u1030:
  2776  00B2                     l1982:
  2777                           
  2778                           ;main.c: 55:     for(int i=0; i < timeSize ; i++){
  2779  00B2  0021               	movlb	1	; select bank1
  2780  00B3  01C6               	clrf	main@i_430^(0+128)
  2781  00B4  01C7               	clrf	(main@i_430+1)^(0+128)
  2782  00B5  28C0               	goto	l1988
  2783  00B6                     l1984:
  2784                           
  2785                           ;main.c: 56:         rx_time[i] = 0;
  2786  00B6  0021               	movlb	1	; select bank1
  2787  00B7  0846               	movf	main@i_430^(0+128),w
  2788  00B8  3EA6               	addlw	(low (main@rx_time| 0))& (0+255)
  2789  00B9  0086               	movwf	6
  2790  00BA  0187               	clrf	7
  2791  00BB  0181               	clrf	1
  2792  00BC                     l1986:
  2793                           
  2794                           ;main.c: 57:     }
  2795  00BC  3001               	movlw	1
  2796  00BD  07C6               	addwf	main@i_430^(0+128),f
  2797  00BE  3000               	movlw	0
  2798  00BF  3DC7               	addwfc	(main@i_430+1)^(0+128),f
  2799  00C0                     l1988:
  2800  00C0  0847               	movf	(main@i_430+1)^(0+128),w
  2801  00C1  3A80               	xorlw	128
  2802  00C2  0020               	movlb	0	; select bank0
  2803  00C3  00AF               	movwf	??_main
  2804  00C4  3080               	movlw	128
  2805  00C5  022F               	subwf	??_main,w
  2806  00C6  1D03               	skipz
  2807  00C7  28CB               	goto	u1045
  2808  00C8  0021               	movlb	1	; select bank1
  2809  00C9  0858               	movf	main@timeSize^(0+128),w	;volatile
  2810  00CA  0246               	subwf	main@i_430^(0+128),w
  2811  00CB                     u1045:
  2812  00CB  1C03               	skipc
  2813  00CC  28CE               	goto	u1041
  2814  00CD  28CF               	goto	u1040
  2815  00CE                     u1041:
  2816  00CE  28B6               	goto	l1984
  2817  00CF                     u1040:
  2818  00CF                     l1990:
  2819                           
  2820                           ;main.c: 60:         if(uartFlag){
  2821  00CF  0020               	movlb	0	; select bank0
  2822  00D0  082B               	movf	_uartFlag,w	;volatile
  2823  00D1  1903               	btfsc	3,2
  2824  00D2  28D4               	goto	u1051
  2825  00D3  28D5               	goto	u1050
  2826  00D4                     u1051:
  2827  00D4  28CF               	goto	l1990
  2828  00D5                     u1050:
  2829  00D5                     l1992:
  2830                           
  2831                           ;main.c: 61:             if(rxData == '$'){
  2832  00D5  3024               	movlw	36
  2833  00D6  0629               	xorwf	_rxData,w	;volatile
  2834  00D7  1D03               	btfss	3,2
  2835  00D8  28DA               	goto	u1061
  2836  00D9  28DB               	goto	u1060
  2837  00DA                     u1061:
  2838  00DA  28DF               	goto	l1996
  2839  00DB                     u1060:
  2840  00DB                     l1994:
  2841                           
  2842                           ;main.c: 62:                 dollarFlag =1;
  2843  00DB  3001               	movlw	1
  2844  00DC  00AF               	movwf	??_main
  2845  00DD  082F               	movf	??_main,w
  2846  00DE  00AA               	movwf	_dollarFlag	;volatile
  2847  00DF                     l1996:
  2848                           
  2849                           ;main.c: 65:             if(dollarFlag){
  2850  00DF  082A               	movf	_dollarFlag,w	;volatile
  2851  00E0  1903               	btfsc	3,2
  2852  00E1  28E3               	goto	u1071
  2853  00E2  28E4               	goto	u1070
  2854  00E3                     u1071:
  2855  00E3  2918               	goto	l2014
  2856  00E4                     u1070:
  2857  00E4                     l1998:
  2858                           
  2859                           ;main.c: 66:                 if(fpos < gnggaSize ){
  2860  00E4  0021               	movlb	1	; select bank1
  2861  00E5  0857               	movf	main@gnggaSize^(0+128),w	;volatile
  2862  00E6  0260               	subwf	main@fpos^(0+128),w	;volatile
  2863  00E7  1803               	skipnc
  2864  00E8  28EA               	goto	u1081
  2865  00E9  28EB               	goto	u1080
  2866  00EA                     u1081:
  2867  00EA  2918               	goto	l2014
  2868  00EB                     u1080:
  2869  00EB                     l2000:
  2870                           
  2871                           ;main.c: 67:                     if(rxData == header_g[fpos] ){
  2872  00EB  0860               	movf	main@fpos^(0+128),w	;volatile
  2873  00EC  3EDA               	addlw	low (main@header_g| (0+32768))
  2874  00ED  0084               	movwf	4
  2875  00EE  3083               	movlw	high (main@header_g| (0+32768))
  2876  00EF  1803               	skipnc
  2877  00F0  3E01               	addlw	1
  2878  00F1  0085               	movwf	5
  2879  00F2  0800               	movf	0,w	;code access
  2880  00F3  0020               	movlb	0	; select bank0
  2881  00F4  0629               	xorwf	_rxData,w	;volatile
  2882  00F5  1D03               	skipz
  2883  00F6  28F8               	goto	u1091
  2884  00F7  28F9               	goto	u1090
  2885  00F8                     u1091:
  2886  00F8  2908               	goto	l2006
  2887  00F9                     u1090:
  2888  00F9                     l2002:
  2889                           
  2890                           ;main.c: 68:                         rx_gps[fpos]=rxData;
  2891  00F9  0829               	movf	_rxData,w	;volatile
  2892  00FA  00AF               	movwf	??_main
  2893  00FB  0021               	movlb	1	; select bank1
  2894  00FC  0860               	movf	main@fpos^(0+128),w
  2895  00FD  3EA0               	addlw	(low (main@rx_gps| 0))& (0+255)
  2896  00FE  0086               	movwf	6
  2897  00FF  0187               	clrf	7
  2898  0100  0020               	movlb	0	; select bank0
  2899  0101  082F               	movf	??_main,w
  2900  0102  0081               	movwf	1
  2901  0103                     l2004:
  2902                           
  2903                           ;main.c: 69:                         fpos++;
  2904  0103  3001               	movlw	1
  2905  0104  00AF               	movwf	??_main
  2906  0105  082F               	movf	??_main,w
  2907  0106  0021               	movlb	1	; select bank1
  2908  0107  07E0               	addwf	main@fpos^(0+128),f	;volatile
  2909  0108                     l2006:
  2910                           
  2911                           ;main.c: 71:                     if(fpos == gnggaSize){
  2912  0108  0021               	movlb	1	; select bank1
  2913  0109  0860               	movf	main@fpos^(0+128),w	;volatile
  2914  010A  0657               	xorwf	main@gnggaSize^(0+128),w	;volatile
  2915  010B  1D03               	skipz
  2916  010C  290E               	goto	u1101
  2917  010D  290F               	goto	u1100
  2918  010E                     u1101:
  2919  010E  2918               	goto	l2014
  2920  010F                     u1100:
  2921  010F                     l2008:
  2922                           
  2923                           ;main.c: 72:                         g_ok=1;
  2924  010F  3001               	movlw	1
  2925  0110  0020               	movlb	0	; select bank0
  2926  0111  00AF               	movwf	??_main
  2927  0112  082F               	movf	??_main,w
  2928  0113  0021               	movlb	1	; select bank1
  2929  0114  00D1               	movwf	main@g_ok^(0+128)	;volatile
  2930  0115                     l2010:
  2931                           
  2932                           ;main.c: 73:                         fpos=0;
  2933  0115  01E0               	clrf	main@fpos^(0+128)	;volatile
  2934  0116                     l2012:
  2935                           
  2936                           ;main.c: 74:                         dollarFlag=0;
  2937  0116  0020               	movlb	0	; select bank0
  2938  0117  01AA               	clrf	_dollarFlag	;volatile
  2939  0118                     l2014:
  2940                           
  2941                           ;main.c: 79:             if(g_ok){
  2942  0118  0021               	movlb	1	; select bank1
  2943  0119  0851               	movf	main@g_ok^(0+128),w	;volatile
  2944  011A  1903               	btfsc	3,2
  2945  011B  291D               	goto	u1111
  2946  011C  291E               	goto	u1110
  2947  011D                     u1111:
  2948  011D  29B8               	goto	l2052
  2949  011E                     u1110:
  2950  011E                     l2016:
  2951                           
  2952                           ;main.c: 80:                 if(rxData == ','){
  2953  011E  302C               	movlw	44
  2954  011F  0020               	movlb	0	; select bank0
  2955  0120  0629               	xorwf	_rxData,w	;volatile
  2956  0121  1D03               	btfss	3,2
  2957  0122  2924               	goto	u1121
  2958  0123  2925               	goto	u1120
  2959  0124                     u1121:
  2960  0124  29B8               	goto	l2052
  2961  0125                     u1120:
  2962  0125                     l2018:
  2963                           
  2964                           ;main.c: 81:                     cpos++;
  2965  0125  3001               	movlw	1
  2966  0126  00AF               	movwf	??_main
  2967  0127  082F               	movf	??_main,w
  2968  0128  0021               	movlb	1	; select bank1
  2969  0129  07D0               	addwf	main@cpos^(0+128),f	;volatile
  2970  012A  29B8               	goto	l2052
  2971  012B                     l2020:
  2972                           
  2973                           ;main.c: 89:                     time_go = 1;
  2974  012B  3001               	movlw	1
  2975  012C  00AF               	movwf	??_main
  2976  012D  082F               	movf	??_main,w
  2977  012E  0021               	movlb	1	; select bank1
  2978  012F  00D2               	movwf	main@time_go^(0+128)	;volatile
  2979                           
  2980                           ;main.c: 90:                     break;
  2981  0130  29D6               	goto	l2054
  2982  0131                     l2022:
  2983                           
  2984                           ;main.c: 93:                     lat_go = 1;
  2985  0131  3001               	movlw	1
  2986  0132  00AF               	movwf	??_main
  2987  0133  082F               	movf	??_main,w
  2988  0134  0021               	movlb	1	; select bank1
  2989  0135  00D3               	movwf	main@lat_go^(0+128)	;volatile
  2990                           
  2991                           ;main.c: 94:                     break;
  2992  0136  29D6               	goto	l2054
  2993  0137                     l2024:
  2994                           
  2995                           ;main.c: 97:                     ns_go = 1;
  2996  0137  3001               	movlw	1
  2997  0138  00AF               	movwf	??_main
  2998  0139  082F               	movf	??_main,w
  2999  013A  0021               	movlb	1	; select bank1
  3000  013B  00D5               	movwf	main@ns_go^(0+128)	;volatile
  3001                           
  3002                           ;main.c: 98:                     break;
  3003  013C  29D6               	goto	l2054
  3004  013D                     l2026:
  3005                           
  3006                           ;main.c: 101:                     long_go = 1;
  3007  013D  3001               	movlw	1
  3008  013E  00AF               	movwf	??_main
  3009  013F  082F               	movf	??_main,w
  3010  0140  0021               	movlb	1	; select bank1
  3011  0141  00D4               	movwf	main@long_go^(0+128)	;volatile
  3012                           
  3013                           ;main.c: 102:                     break;
  3014  0142  29D6               	goto	l2054
  3015  0143                     l2028:
  3016                           
  3017                           ;main.c: 105:                     ew_go = 1;
  3018  0143  3001               	movlw	1
  3019  0144  00AF               	movwf	??_main
  3020  0145  082F               	movf	??_main,w
  3021  0146  0021               	movlb	1	; select bank1
  3022  0147  00D6               	movwf	main@ew_go^(0+128)	;volatile
  3023                           
  3024                           ;main.c: 106:                     break;
  3025  0148  29D6               	goto	l2054
  3026  0149                     l2030:
  3027                           
  3028                           ;main.c: 108:                     g_ok=0;
  3029  0149  0021               	movlb	1	; select bank1
  3030  014A  01D1               	clrf	main@g_ok^(0+128)	;volatile
  3031                           
  3032                           ;main.c: 109:                     cpos = 0;
  3033  014B  01D0               	clrf	main@cpos^(0+128)	;volatile
  3034                           
  3035                           ;main.c: 117:      for(int i=0; i < latSize ; i++){
  3036  014C  01C8               	clrf	main@i_431^(0+128)
  3037  014D  01C9               	clrf	(main@i_431+1)^(0+128)
  3038  014E  295D               	goto	l2036
  3039  014F                     l2032:
  3040                           
  3041                           ;main.c: 118:                         EUSART_Write(rx_lat[i]);
  3042  014F  0021               	movlb	1	; select bank1
  3043  0150  0848               	movf	main@i_431^(0+128),w
  3044  0151  3EAF               	addlw	(low (main@rx_lat| 0))& (0+255)
  3045  0152  0086               	movwf	6
  3046  0153  0187               	clrf	7
  3047  0154  0801               	movf	1,w
  3048  0155  3183  2328  3180   	fcall	_EUSART_Write
  3049  0158                     l2034:
  3050                           
  3051                           ;main.c: 119:                     }
  3052  0158  3001               	movlw	1
  3053  0159  0021               	movlb	1	; select bank1
  3054  015A  07C8               	addwf	main@i_431^(0+128),f
  3055  015B  3000               	movlw	0
  3056  015C  3DC9               	addwfc	(main@i_431+1)^(0+128),f
  3057  015D                     l2036:
  3058  015D  0849               	movf	(main@i_431+1)^(0+128),w
  3059  015E  3A80               	xorlw	128
  3060  015F  0020               	movlb	0	; select bank0
  3061  0160  00AF               	movwf	??_main
  3062  0161  3080               	movlw	128
  3063  0162  022F               	subwf	??_main,w
  3064  0163  1D03               	skipz
  3065  0164  2968               	goto	u1135
  3066  0165  0021               	movlb	1	; select bank1
  3067  0166  085B               	movf	main@latSize^(0+128),w	;volatile
  3068  0167  0248               	subwf	main@i_431^(0+128),w
  3069  0168                     u1135:
  3070  0168  1C03               	skipc
  3071  0169  296B               	goto	u1131
  3072  016A  296C               	goto	u1130
  3073  016B                     u1131:
  3074  016B  294F               	goto	l2032
  3075  016C                     u1130:
  3076  016C                     l2038:
  3077                           
  3078                           ;main.c: 120:                     EUSART_Write(10);
  3079  016C  300A               	movlw	10
  3080  016D  3183  2328  3180   	fcall	_EUSART_Write
  3081                           
  3082                           ;main.c: 121:      EUSART_Write(13);
  3083  0170  300D               	movlw	13
  3084  0171  3183  2328  3180   	fcall	_EUSART_Write
  3085                           
  3086                           ;main.c: 123:      EUSART_Write(rx_ns);
  3087  0174  0021               	movlb	1	; select bank1
  3088  0175  084E               	movf	main@rx_ns^(0+128),w	;volatile
  3089  0176  3183  2328  3180   	fcall	_EUSART_Write
  3090                           
  3091                           ;main.c: 124:      EUSART_Write(10);
  3092  0179  300A               	movlw	10
  3093  017A  3183  2328  3180   	fcall	_EUSART_Write
  3094                           
  3095                           ;main.c: 125:      EUSART_Write(13);
  3096  017D  300D               	movlw	13
  3097  017E  3183  2328  3180   	fcall	_EUSART_Write
  3098  0181                     l2040:
  3099                           
  3100                           ;main.c: 127:      for(int i=0; i < longSize ; i++){
  3101  0181  0021               	movlb	1	; select bank1
  3102  0182  01CA               	clrf	main@i_432^(0+128)
  3103  0183  01CB               	clrf	(main@i_432+1)^(0+128)
  3104  0184  2993               	goto	l2046
  3105  0185                     l2042:
  3106                           
  3107                           ;main.c: 128:                         EUSART_Write(rx_long[i]);
  3108  0185  0021               	movlb	1	; select bank1
  3109  0186  084A               	movf	main@i_432^(0+128),w
  3110  0187  3EB8               	addlw	(low (main@rx_long| 0))& (0+255)
  3111  0188  0086               	movwf	6
  3112  0189  0187               	clrf	7
  3113  018A  0801               	movf	1,w
  3114  018B  3183  2328  3180   	fcall	_EUSART_Write
  3115  018E                     l2044:
  3116                           
  3117                           ;main.c: 129:      }
  3118  018E  3001               	movlw	1
  3119  018F  0021               	movlb	1	; select bank1
  3120  0190  07CA               	addwf	main@i_432^(0+128),f
  3121  0191  3000               	movlw	0
  3122  0192  3DCB               	addwfc	(main@i_432+1)^(0+128),f
  3123  0193                     l2046:
  3124  0193  084B               	movf	(main@i_432+1)^(0+128),w
  3125  0194  3A80               	xorlw	128
  3126  0195  0020               	movlb	0	; select bank0
  3127  0196  00AF               	movwf	??_main
  3128  0197  3080               	movlw	128
  3129  0198  022F               	subwf	??_main,w
  3130  0199  1D03               	skipz
  3131  019A  299E               	goto	u1145
  3132  019B  0021               	movlb	1	; select bank1
  3133  019C  085C               	movf	main@longSize^(0+128),w	;volatile
  3134  019D  024A               	subwf	main@i_432^(0+128),w
  3135  019E                     u1145:
  3136  019E  1C03               	skipc
  3137  019F  29A1               	goto	u1141
  3138  01A0  29A2               	goto	u1140
  3139  01A1                     u1141:
  3140  01A1  2985               	goto	l2042
  3141  01A2                     u1140:
  3142  01A2                     l2048:
  3143                           
  3144                           ;main.c: 130:      EUSART_Write(10);
  3145  01A2  300A               	movlw	10
  3146  01A3  3183  2328  3180   	fcall	_EUSART_Write
  3147                           
  3148                           ;main.c: 131:      EUSART_Write(13);
  3149  01A6  300D               	movlw	13
  3150  01A7  3183  2328  3180   	fcall	_EUSART_Write
  3151                           
  3152                           ;main.c: 133:      EUSART_Write(rx_ew);
  3153  01AA  0021               	movlb	1	; select bank1
  3154  01AB  084F               	movf	main@rx_ew^(0+128),w	;volatile
  3155  01AC  3183  2328  3180   	fcall	_EUSART_Write
  3156                           
  3157                           ;main.c: 135:      EUSART_Write(10);
  3158  01AF  300A               	movlw	10
  3159  01B0  3183  2328  3180   	fcall	_EUSART_Write
  3160                           
  3161                           ;main.c: 136:      EUSART_Write(13);
  3162  01B3  300D               	movlw	13
  3163  01B4  3183  2328  3180   	fcall	_EUSART_Write
  3164                           
  3165                           ;main.c: 137:      break;
  3166  01B7  29D6               	goto	l2054
  3167  01B8                     l2052:
  3168  01B8  0021               	movlb	1	; select bank1
  3169  01B9  0850               	movf	main@cpos^(0+128),w	;volatile
  3170  01BA  0020               	movlb	0	; select bank0
  3171  01BB  00AF               	movwf	??_main
  3172  01BC  01B0               	clrf	??_main+1
  3173                           
  3174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3175                           ; Switch size 1, requested type "simple"
  3176                           ; Number of cases is 1, Range of values is 0 to 0
  3177                           ; switch strategies available:
  3178                           ; Name         Instructions Cycles
  3179                           ; simple_byte            4     3 (average)
  3180                           ; direct_byte            8     6 (fixed)
  3181                           ; jumptable            260     6 (fixed)
  3182                           ;	Chosen strategy is simple_byte
  3183  01BD  0830               	movf	??_main+1,w
  3184  01BE  3A00               	xorlw	0	; case 0
  3185  01BF  1903               	skipnz
  3186  01C0  29C2               	goto	l2160
  3187  01C1  29D6               	goto	l2054
  3188  01C2                     l2160:
  3189                           
  3190                           ; Switch size 1, requested type "simple"
  3191                           ; Number of cases is 6, Range of values is 1 to 6
  3192                           ; switch strategies available:
  3193                           ; Name         Instructions Cycles
  3194                           ; simple_byte           19    10 (average)
  3195                           ; direct_byte           21     9 (fixed)
  3196                           ; jumptable            263     9 (fixed)
  3197                           ;	Chosen strategy is simple_byte
  3198  01C2  082F               	movf	??_main,w
  3199  01C3  3A01               	xorlw	1	; case 1
  3200  01C4  1903               	skipnz
  3201  01C5  292B               	goto	l2020
  3202  01C6  3A03               	xorlw	3	; case 2
  3203  01C7  1903               	skipnz
  3204  01C8  2931               	goto	l2022
  3205  01C9  3A01               	xorlw	1	; case 3
  3206  01CA  1903               	skipnz
  3207  01CB  2937               	goto	l2024
  3208  01CC  3A07               	xorlw	7	; case 4
  3209  01CD  1903               	skipnz
  3210  01CE  293D               	goto	l2026
  3211  01CF  3A01               	xorlw	1	; case 5
  3212  01D0  1903               	skipnz
  3213  01D1  2943               	goto	l2028
  3214  01D2  3A03               	xorlw	3	; case 6
  3215  01D3  1903               	skipnz
  3216  01D4  2949               	goto	l2030
  3217  01D5  29D6               	goto	l2054
  3218  01D6                     l2054:
  3219                           
  3220                           ;main.c: 144:             if(time_go){
  3221  01D6  0021               	movlb	1	; select bank1
  3222  01D7  0852               	movf	main@time_go^(0+128),w	;volatile
  3223  01D8  1903               	btfsc	3,2
  3224  01D9  29DB               	goto	u1151
  3225  01DA  29DC               	goto	u1150
  3226  01DB                     u1151:
  3227  01DB  2A03               	goto	l2068
  3228  01DC                     u1150:
  3229  01DC                     l2056:
  3230                           
  3231                           ;main.c: 145:                 if(rxData != ','){
  3232  01DC  302C               	movlw	44
  3233  01DD  0020               	movlb	0	; select bank0
  3234  01DE  0629               	xorwf	_rxData,w	;volatile
  3235  01DF  1903               	btfsc	3,2
  3236  01E0  29E2               	goto	u1161
  3237  01E1  29E3               	goto	u1160
  3238  01E2                     u1161:
  3239  01E2  29FB               	goto	l2064
  3240  01E3                     u1160:
  3241  01E3                     l2058:
  3242                           
  3243                           ;main.c: 146:                     if(timepos < timeSize){
  3244  01E3  0021               	movlb	1	; select bank1
  3245  01E4  0858               	movf	main@timeSize^(0+128),w	;volatile
  3246  01E5  025D               	subwf	main@timepos^(0+128),w	;volatile
  3247  01E6  1803               	skipnc
  3248  01E7  29E9               	goto	u1171
  3249  01E8  29EA               	goto	u1170
  3250  01E9                     u1171:
  3251  01E9  2A03               	goto	l2068
  3252  01EA                     u1170:
  3253  01EA                     l2060:
  3254                           
  3255                           ;main.c: 147:                         rx_time[timepos]=rxData;
  3256  01EA  0020               	movlb	0	; select bank0
  3257  01EB  0829               	movf	_rxData,w	;volatile
  3258  01EC  00AF               	movwf	??_main
  3259  01ED  0021               	movlb	1	; select bank1
  3260  01EE  085D               	movf	main@timepos^(0+128),w
  3261  01EF  3EA6               	addlw	(low (main@rx_time| 0))& (0+255)
  3262  01F0  0086               	movwf	6
  3263  01F1  0187               	clrf	7
  3264  01F2  0020               	movlb	0	; select bank0
  3265  01F3  082F               	movf	??_main,w
  3266  01F4  0081               	movwf	1
  3267  01F5                     l2062:
  3268                           
  3269                           ;main.c: 148:                         timepos++;
  3270  01F5  3001               	movlw	1
  3271  01F6  00AF               	movwf	??_main
  3272  01F7  082F               	movf	??_main,w
  3273  01F8  0021               	movlb	1	; select bank1
  3274  01F9  07DD               	addwf	main@timepos^(0+128),f	;volatile
  3275  01FA  2A03               	goto	l2068
  3276  01FB                     l2064:
  3277  01FB  0021               	movlb	1	; select bank1
  3278  01FC  085D               	movf	main@timepos^(0+128),w	;volatile
  3279  01FD  1903               	btfsc	3,2
  3280  01FE  2A00               	goto	u1181
  3281  01FF  2A01               	goto	u1180
  3282  0200                     u1181:
  3283  0200  2A03               	goto	l2068
  3284  0201                     u1180:
  3285  0201                     l2066:
  3286                           
  3287                           ;main.c: 151:                  time_go=0;
  3288  0201  01D2               	clrf	main@time_go^(0+128)	;volatile
  3289                           
  3290                           ;main.c: 152:                     timepos=0;
  3291  0202  01DD               	clrf	main@timepos^(0+128)	;volatile
  3292  0203                     l2068:
  3293                           
  3294                           ;main.c: 157:             if(lat_go){
  3295  0203  0853               	movf	main@lat_go^(0+128),w	;volatile
  3296  0204  1903               	btfsc	3,2
  3297  0205  2A07               	goto	u1191
  3298  0206  2A08               	goto	u1190
  3299  0207                     u1191:
  3300  0207  2A2F               	goto	l2082
  3301  0208                     u1190:
  3302  0208                     l2070:
  3303                           
  3304                           ;main.c: 158:                 if(rxData != ','){
  3305  0208  302C               	movlw	44
  3306  0209  0020               	movlb	0	; select bank0
  3307  020A  0629               	xorwf	_rxData,w	;volatile
  3308  020B  1903               	btfsc	3,2
  3309  020C  2A0E               	goto	u1201
  3310  020D  2A0F               	goto	u1200
  3311  020E                     u1201:
  3312  020E  2A27               	goto	l2078
  3313  020F                     u1200:
  3314  020F                     l2072:
  3315                           
  3316                           ;main.c: 159:                     if(latpos < latSize){
  3317  020F  0021               	movlb	1	; select bank1
  3318  0210  085B               	movf	main@latSize^(0+128),w	;volatile
  3319  0211  025E               	subwf	main@latpos^(0+128),w	;volatile
  3320  0212  1803               	skipnc
  3321  0213  2A15               	goto	u1211
  3322  0214  2A16               	goto	u1210
  3323  0215                     u1211:
  3324  0215  2A2F               	goto	l2082
  3325  0216                     u1210:
  3326  0216                     l2074:
  3327                           
  3328                           ;main.c: 160:                         rx_lat[latpos]=rxData;
  3329  0216  0020               	movlb	0	; select bank0
  3330  0217  0829               	movf	_rxData,w	;volatile
  3331  0218  00AF               	movwf	??_main
  3332  0219  0021               	movlb	1	; select bank1
  3333  021A  085E               	movf	main@latpos^(0+128),w
  3334  021B  3EAF               	addlw	(low (main@rx_lat| 0))& (0+255)
  3335  021C  0086               	movwf	6
  3336  021D  0187               	clrf	7
  3337  021E  0020               	movlb	0	; select bank0
  3338  021F  082F               	movf	??_main,w
  3339  0220  0081               	movwf	1
  3340  0221                     l2076:
  3341                           
  3342                           ;main.c: 161:                         latpos++;
  3343  0221  3001               	movlw	1
  3344  0222  00AF               	movwf	??_main
  3345  0223  082F               	movf	??_main,w
  3346  0224  0021               	movlb	1	; select bank1
  3347  0225  07DE               	addwf	main@latpos^(0+128),f	;volatile
  3348  0226  2A2F               	goto	l2082
  3349  0227                     l2078:
  3350  0227  0021               	movlb	1	; select bank1
  3351  0228  085E               	movf	main@latpos^(0+128),w	;volatile
  3352  0229  1903               	btfsc	3,2
  3353  022A  2A2C               	goto	u1221
  3354  022B  2A2D               	goto	u1220
  3355  022C                     u1221:
  3356  022C  2A2F               	goto	l2082
  3357  022D                     u1220:
  3358  022D                     l2080:
  3359                           
  3360                           ;main.c: 164:                     lat_go=0;
  3361  022D  01D3               	clrf	main@lat_go^(0+128)	;volatile
  3362                           
  3363                           ;main.c: 165:                     latpos =0;
  3364  022E  01DE               	clrf	main@latpos^(0+128)	;volatile
  3365  022F                     l2082:
  3366                           
  3367                           ;main.c: 170:             if(ns_go){
  3368  022F  0855               	movf	main@ns_go^(0+128),w	;volatile
  3369  0230  1903               	btfsc	3,2
  3370  0231  2A33               	goto	u1231
  3371  0232  2A34               	goto	u1230
  3372  0233                     u1231:
  3373  0233  2A57               	goto	l2096
  3374  0234                     u1230:
  3375  0234                     l2084:
  3376                           
  3377                           ;main.c: 171:                 if(rxData != ','){
  3378  0234  302C               	movlw	44
  3379  0235  0020               	movlb	0	; select bank0
  3380  0236  0629               	xorwf	_rxData,w	;volatile
  3381  0237  1903               	btfsc	3,2
  3382  0238  2A3A               	goto	u1241
  3383  0239  2A3B               	goto	u1240
  3384  023A                     u1241:
  3385  023A  2A4F               	goto	l2092
  3386  023B                     u1240:
  3387  023B                     l2086:
  3388                           
  3389                           ;main.c: 172:                     if(nspos < nsSize){
  3390  023B  0021               	movlb	1	; select bank1
  3391  023C  084C               	movf	main@nsSize^(0+128),w	;volatile
  3392  023D  0259               	subwf	main@nspos^(0+128),w	;volatile
  3393  023E  1803               	skipnc
  3394  023F  2A41               	goto	u1251
  3395  0240  2A42               	goto	u1250
  3396  0241                     u1251:
  3397  0241  2A57               	goto	l2096
  3398  0242                     u1250:
  3399  0242                     l2088:
  3400                           
  3401                           ;main.c: 173:                         rx_ns=rxData;
  3402  0242  0020               	movlb	0	; select bank0
  3403  0243  0829               	movf	_rxData,w	;volatile
  3404  0244  00AF               	movwf	??_main
  3405  0245  082F               	movf	??_main,w
  3406  0246  0021               	movlb	1	; select bank1
  3407  0247  00CE               	movwf	main@rx_ns^(0+128)	;volatile
  3408  0248                     l2090:
  3409                           
  3410                           ;main.c: 174:                         nspos++;
  3411  0248  3001               	movlw	1
  3412  0249  0020               	movlb	0	; select bank0
  3413  024A  00AF               	movwf	??_main
  3414  024B  082F               	movf	??_main,w
  3415  024C  0021               	movlb	1	; select bank1
  3416  024D  07D9               	addwf	main@nspos^(0+128),f	;volatile
  3417  024E  2A57               	goto	l2096
  3418  024F                     l2092:
  3419  024F  0021               	movlb	1	; select bank1
  3420  0250  0859               	movf	main@nspos^(0+128),w	;volatile
  3421  0251  1903               	btfsc	3,2
  3422  0252  2A54               	goto	u1261
  3423  0253  2A55               	goto	u1260
  3424  0254                     u1261:
  3425  0254  2A57               	goto	l2096
  3426  0255                     u1260:
  3427  0255                     l2094:
  3428                           
  3429                           ;main.c: 177:      ns_go=0;
  3430  0255  01D5               	clrf	main@ns_go^(0+128)	;volatile
  3431                           
  3432                           ;main.c: 178:                     nspos=0;
  3433  0256  01D9               	clrf	main@nspos^(0+128)	;volatile
  3434  0257                     l2096:
  3435                           
  3436                           ;main.c: 183:             if(long_go){
  3437  0257  0854               	movf	main@long_go^(0+128),w	;volatile
  3438  0258  1903               	btfsc	3,2
  3439  0259  2A5B               	goto	u1271
  3440  025A  2A5C               	goto	u1270
  3441  025B                     u1271:
  3442  025B  2A83               	goto	l2110
  3443  025C                     u1270:
  3444  025C                     l2098:
  3445                           
  3446                           ;main.c: 184:                 if(rxData != ','){
  3447  025C  302C               	movlw	44
  3448  025D  0020               	movlb	0	; select bank0
  3449  025E  0629               	xorwf	_rxData,w	;volatile
  3450  025F  1903               	btfsc	3,2
  3451  0260  2A62               	goto	u1281
  3452  0261  2A63               	goto	u1280
  3453  0262                     u1281:
  3454  0262  2A7B               	goto	l2106
  3455  0263                     u1280:
  3456  0263                     l2100:
  3457                           
  3458                           ;main.c: 185:                     if(longpos < longSize){
  3459  0263  0021               	movlb	1	; select bank1
  3460  0264  085C               	movf	main@longSize^(0+128),w	;volatile
  3461  0265  025F               	subwf	main@longpos^(0+128),w	;volatile
  3462  0266  1803               	skipnc
  3463  0267  2A69               	goto	u1291
  3464  0268  2A6A               	goto	u1290
  3465  0269                     u1291:
  3466  0269  2A83               	goto	l2110
  3467  026A                     u1290:
  3468  026A                     l2102:
  3469                           
  3470                           ;main.c: 186:                         rx_long[longpos]=rxData;
  3471  026A  0020               	movlb	0	; select bank0
  3472  026B  0829               	movf	_rxData,w	;volatile
  3473  026C  00AF               	movwf	??_main
  3474  026D  0021               	movlb	1	; select bank1
  3475  026E  085F               	movf	main@longpos^(0+128),w
  3476  026F  3EB8               	addlw	(low (main@rx_long| 0))& (0+255)
  3477  0270  0086               	movwf	6
  3478  0271  0187               	clrf	7
  3479  0272  0020               	movlb	0	; select bank0
  3480  0273  082F               	movf	??_main,w
  3481  0274  0081               	movwf	1
  3482  0275                     l2104:
  3483                           
  3484                           ;main.c: 187:                         longpos++;
  3485  0275  3001               	movlw	1
  3486  0276  00AF               	movwf	??_main
  3487  0277  082F               	movf	??_main,w
  3488  0278  0021               	movlb	1	; select bank1
  3489  0279  07DF               	addwf	main@longpos^(0+128),f	;volatile
  3490  027A  2A83               	goto	l2110
  3491  027B                     l2106:
  3492  027B  0021               	movlb	1	; select bank1
  3493  027C  085F               	movf	main@longpos^(0+128),w	;volatile
  3494  027D  1903               	btfsc	3,2
  3495  027E  2A80               	goto	u1301
  3496  027F  2A81               	goto	u1300
  3497  0280                     u1301:
  3498  0280  2A83               	goto	l2110
  3499  0281                     u1300:
  3500  0281                     l2108:
  3501                           
  3502                           ;main.c: 190:                     long_go=0;
  3503  0281  01D4               	clrf	main@long_go^(0+128)	;volatile
  3504                           
  3505                           ;main.c: 191:                     longpos=0;
  3506  0282  01DF               	clrf	main@longpos^(0+128)	;volatile
  3507  0283                     l2110:
  3508                           
  3509                           ;main.c: 197:             if(ew_go){
  3510  0283  0856               	movf	main@ew_go^(0+128),w	;volatile
  3511  0284  1903               	btfsc	3,2
  3512  0285  2A87               	goto	u1311
  3513  0286  2A88               	goto	u1310
  3514  0287                     u1311:
  3515  0287  2AAB               	goto	l353
  3516  0288                     u1310:
  3517  0288                     l2112:
  3518                           
  3519                           ;main.c: 198:                 if(rxData != ','){
  3520  0288  302C               	movlw	44
  3521  0289  0020               	movlb	0	; select bank0
  3522  028A  0629               	xorwf	_rxData,w	;volatile
  3523  028B  1903               	btfsc	3,2
  3524  028C  2A8E               	goto	u1321
  3525  028D  2A8F               	goto	u1320
  3526  028E                     u1321:
  3527  028E  2AA3               	goto	l2120
  3528  028F                     u1320:
  3529  028F                     l2114:
  3530                           
  3531                           ;main.c: 199:                     if(ewpos < ewSize){
  3532  028F  0021               	movlb	1	; select bank1
  3533  0290  084D               	movf	main@ewSize^(0+128),w	;volatile
  3534  0291  025A               	subwf	main@ewpos^(0+128),w	;volatile
  3535  0292  1803               	skipnc
  3536  0293  2A95               	goto	u1331
  3537  0294  2A96               	goto	u1330
  3538  0295                     u1331:
  3539  0295  2AAB               	goto	l353
  3540  0296                     u1330:
  3541  0296                     l2116:
  3542                           
  3543                           ;main.c: 200:                         rx_ew=rxData;
  3544  0296  0020               	movlb	0	; select bank0
  3545  0297  0829               	movf	_rxData,w	;volatile
  3546  0298  00AF               	movwf	??_main
  3547  0299  082F               	movf	??_main,w
  3548  029A  0021               	movlb	1	; select bank1
  3549  029B  00CF               	movwf	main@rx_ew^(0+128)	;volatile
  3550  029C                     l2118:
  3551                           
  3552                           ;main.c: 201:                         ewpos++;
  3553  029C  3001               	movlw	1
  3554  029D  0020               	movlb	0	; select bank0
  3555  029E  00AF               	movwf	??_main
  3556  029F  082F               	movf	??_main,w
  3557  02A0  0021               	movlb	1	; select bank1
  3558  02A1  07DA               	addwf	main@ewpos^(0+128),f	;volatile
  3559  02A2  2AAB               	goto	l353
  3560  02A3                     l2120:
  3561  02A3  0021               	movlb	1	; select bank1
  3562  02A4  085A               	movf	main@ewpos^(0+128),w	;volatile
  3563  02A5  1903               	btfsc	3,2
  3564  02A6  2AA8               	goto	u1341
  3565  02A7  2AA9               	goto	u1340
  3566  02A8                     u1341:
  3567  02A8  2AAB               	goto	l353
  3568  02A9                     u1340:
  3569  02A9                     l2122:
  3570                           
  3571                           ;main.c: 204:                     ew_go=0;
  3572  02A9  01D6               	clrf	main@ew_go^(0+128)	;volatile
  3573                           
  3574                           ;main.c: 205:                     ewpos=0;
  3575  02AA  01DA               	clrf	main@ewpos^(0+128)	;volatile
  3576  02AB                     l353:	
  3577                           ;main.c: 207:             }
  3578                           
  3579                           
  3580                           ;main.c: 208:             uartFlag = 0;
  3581  02AB  0020               	movlb	0	; select bank0
  3582  02AC  01AB               	clrf	_uartFlag	;volatile
  3583  02AD  28CF               	goto	l1990
  3584  02AE  3180  282D         	ljmp	start
  3585  02B0                     __end_of_main:
  3586                           
  3587                           	psect	text1
  3588  03B9                     __ptext1:	
  3589 ;; *************** function _SYSTEM_Initialize *****************
  3590 ;; Defined at:
  3591 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3592 ;; Parameters:    Size  Location     Type
  3593 ;;		None
  3594 ;; Auto vars:     Size  Location     Type
  3595 ;;		None
  3596 ;; Return value:  Size  Location     Type
  3597 ;;                  1    wreg      void 
  3598 ;; Registers used:
  3599 ;;		wreg, status,2, status,0, pclath, cstack
  3600 ;; Tracked objects:
  3601 ;;		On entry : 0/0
  3602 ;;		On exit  : 0/0
  3603 ;;		Unchanged: 0/0
  3604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3606 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3608 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3609 ;;Total ram usage:        0 bytes
  3610 ;; Hardware stack levels used: 1
  3611 ;; Hardware stack levels required when called: 6
  3612 ;; This function calls:
  3613 ;;		_EUSART_Initialize
  3614 ;;		_OSCILLATOR_Initialize
  3615 ;;		_PIN_MANAGER_Initialize
  3616 ;;		_PMD_Initialize
  3617 ;;		_WDT_Initialize
  3618 ;; This function is called by:
  3619 ;;		_main
  3620 ;; This function uses a non-reentrant model
  3621 ;;
  3622                           
  3623                           
  3624                           ;psect for function _SYSTEM_Initialize
  3625  03B9                     _SYSTEM_Initialize:
  3626  03B9                     l1910:	
  3627                           ;incstack = 0
  3628                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3629                           
  3630                           
  3631                           ;mcc_generated_files/mcc.c: 53:     PMD_Initialize();
  3632  03B9  3183  23D2  3183   	fcall	_PMD_Initialize
  3633  03BC                     l1912:
  3634                           
  3635                           ;mcc_generated_files/mcc.c: 54:     PIN_MANAGER_Initialize();
  3636  03BC  3183  2352  3183   	fcall	_PIN_MANAGER_Initialize
  3637  03BF                     l1914:
  3638                           
  3639                           ;mcc_generated_files/mcc.c: 55:     OSCILLATOR_Initialize();
  3640  03BF  3183  23C9  3183   	fcall	_OSCILLATOR_Initialize
  3641  03C2                     l1916:
  3642                           
  3643                           ;mcc_generated_files/mcc.c: 56:     WDT_Initialize();
  3644  03C2  3184  2405  3183   	fcall	_WDT_Initialize
  3645  03C5                     l1918:
  3646                           
  3647                           ;mcc_generated_files/mcc.c: 57:     EUSART_Initialize();
  3648  03C5  3182  22B0  3183   	fcall	_EUSART_Initialize
  3649  03C8                     l241:
  3650  03C8  0008               	return
  3651  03C9                     __end_of_SYSTEM_Initialize:
  3652                           
  3653                           	psect	text2
  3654  0405                     __ptext2:	
  3655 ;; *************** function _WDT_Initialize *****************
  3656 ;; Defined at:
  3657 ;;		line 74 in file "mcc_generated_files/mcc.c"
  3658 ;; Parameters:    Size  Location     Type
  3659 ;;		None
  3660 ;; Auto vars:     Size  Location     Type
  3661 ;;		None
  3662 ;; Return value:  Size  Location     Type
  3663 ;;                  1    wreg      void 
  3664 ;; Registers used:
  3665 ;;		wreg
  3666 ;; Tracked objects:
  3667 ;;		On entry : 0/0
  3668 ;;		On exit  : 0/0
  3669 ;;		Unchanged: 0/0
  3670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3675 ;;Total ram usage:        0 bytes
  3676 ;; Hardware stack levels used: 1
  3677 ;; Hardware stack levels required when called: 4
  3678 ;; This function calls:
  3679 ;;		Nothing
  3680 ;; This function is called by:
  3681 ;;		_SYSTEM_Initialize
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           
  3686                           ;psect for function _WDT_Initialize
  3687  0405                     _WDT_Initialize:
  3688  0405                     l1890:	
  3689                           ;incstack = 0
  3690                           ; Regs used in _WDT_Initialize: [wreg]
  3691                           
  3692                           
  3693                           ;mcc_generated_files/mcc.c: 77:     WDTCON = 0x16;
  3694  0405  3016               	movlw	22
  3695  0406  0021               	movlb	1	; select bank1
  3696  0407  0097               	movwf	23	;volatile
  3697  0408                     l247:
  3698  0408  0008               	return
  3699  0409                     __end_of_WDT_Initialize:
  3700                           
  3701                           	psect	text3
  3702  03D2                     __ptext3:	
  3703 ;; *************** function _PMD_Initialize *****************
  3704 ;; Defined at:
  3705 ;;		line 80 in file "mcc_generated_files/mcc.c"
  3706 ;; Parameters:    Size  Location     Type
  3707 ;;		None
  3708 ;; Auto vars:     Size  Location     Type
  3709 ;;		None
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		status,2
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3723 ;;Total ram usage:        0 bytes
  3724 ;; Hardware stack levels used: 1
  3725 ;; Hardware stack levels required when called: 4
  3726 ;; This function calls:
  3727 ;;		Nothing
  3728 ;; This function is called by:
  3729 ;;		_SYSTEM_Initialize
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           
  3734                           ;psect for function _PMD_Initialize
  3735  03D2                     _PMD_Initialize:
  3736  03D2                     l1880:	
  3737                           ;incstack = 0
  3738                           ; Regs used in _PMD_Initialize: [status,2]
  3739                           
  3740                           
  3741                           ;mcc_generated_files/mcc.c: 83:     PMD0 = 0x00;
  3742  03D2  0032               	movlb	18	; select bank18
  3743  03D3  0191               	clrf	17	;volatile
  3744                           
  3745                           ;mcc_generated_files/mcc.c: 85:     PMD1 = 0x00;
  3746  03D4  0192               	clrf	18	;volatile
  3747                           
  3748                           ;mcc_generated_files/mcc.c: 87:     PMD2 = 0x00;
  3749  03D5  0193               	clrf	19	;volatile
  3750                           
  3751                           ;mcc_generated_files/mcc.c: 89:     PMD3 = 0x00;
  3752  03D6  0194               	clrf	20	;volatile
  3753                           
  3754                           ;mcc_generated_files/mcc.c: 91:     PMD4 = 0x00;
  3755  03D7  0195               	clrf	21	;volatile
  3756                           
  3757                           ;mcc_generated_files/mcc.c: 93:     PMD5 = 0x00;
  3758  03D8  0196               	clrf	22	;volatile
  3759  03D9                     l250:
  3760  03D9  0008               	return
  3761  03DA                     __end_of_PMD_Initialize:
  3762                           
  3763                           	psect	text4
  3764  0352                     __ptext4:	
  3765 ;; *************** function _PIN_MANAGER_Initialize *****************
  3766 ;; Defined at:
  3767 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3785 ;;Total ram usage:        0 bytes
  3786 ;; Hardware stack levels used: 1
  3787 ;; Hardware stack levels required when called: 4
  3788 ;; This function calls:
  3789 ;;		Nothing
  3790 ;; This function is called by:
  3791 ;;		_SYSTEM_Initialize
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           
  3795                           
  3796                           ;psect for function _PIN_MANAGER_Initialize
  3797  0352                     _PIN_MANAGER_Initialize:
  3798  0352                     l1858:	
  3799                           ;incstack = 0
  3800                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3801                           
  3802                           
  3803                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3804  0352  0022               	movlb	2	; select bank2
  3805  0353  018C               	clrf	12	;volatile
  3806                           
  3807                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3808  0354  018E               	clrf	14	;volatile
  3809  0355                     l1860:
  3810                           
  3811                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x04;
  3812  0355  3004               	movlw	4
  3813  0356  0021               	movlb	1	; select bank1
  3814  0357  008C               	movwf	12	;volatile
  3815  0358                     l1862:
  3816                           
  3817                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x27;
  3818  0358  3027               	movlw	39
  3819  0359  008E               	movwf	14	;volatile
  3820  035A                     l1864:
  3821                           
  3822                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x0F;
  3823  035A  300F               	movlw	15
  3824  035B  0023               	movlb	3	; select bank3
  3825  035C  008E               	movwf	14	;volatile
  3826  035D                     l1866:
  3827                           
  3828                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x04;
  3829  035D  3004               	movlw	4
  3830  035E  008C               	movwf	12	;volatile
  3831                           
  3832                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3833  035F  0024               	movlb	4	; select bank4
  3834  0360  018C               	clrf	12	;volatile
  3835                           
  3836                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3837  0361  018E               	clrf	14	;volatile
  3838                           
  3839                           ;mcc_generated_files/pin_manager.c: 84:     ODCONA = 0x00;
  3840  0362  0025               	movlb	5	; select bank5
  3841  0363  018C               	clrf	12	;volatile
  3842                           
  3843                           ;mcc_generated_files/pin_manager.c: 85:     ODCONC = 0x00;
  3844  0364  018E               	clrf	14	;volatile
  3845  0365                     l1868:
  3846                           
  3847                           ;mcc_generated_files/pin_manager.c: 90:     SLRCONA = 0x37;
  3848  0365  3037               	movlw	55
  3849  0366  0026               	movlb	6	; select bank6
  3850  0367  008C               	movwf	12	;volatile
  3851  0368                     l1870:
  3852                           
  3853                           ;mcc_generated_files/pin_manager.c: 91:     SLRCONC = 0x3F;
  3854  0368  303F               	movlw	63
  3855  0369  008E               	movwf	14	;volatile
  3856  036A                     l1872:
  3857                           
  3858                           ;mcc_generated_files/pin_manager.c: 96:     INLVLA = 0x3F;
  3859  036A  303F               	movlw	63
  3860  036B  0027               	movlb	7	; select bank7
  3861  036C  008C               	movwf	12	;volatile
  3862  036D                     l1874:
  3863                           
  3864                           ;mcc_generated_files/pin_manager.c: 97:     INLVLC = 0x3F;
  3865  036D  303F               	movlw	63
  3866  036E  008E               	movwf	14	;volatile
  3867  036F                     l1876:
  3868                           
  3869                           ;mcc_generated_files/pin_manager.c: 106:     RXPPS = 0x15;
  3870  036F  3015               	movlw	21
  3871  0370  003C               	movlb	28	; select bank28
  3872  0371  00A4               	movwf	36	;volatile
  3873  0372                     l1878:
  3874                           
  3875                           ;mcc_generated_files/pin_manager.c: 107:     RC4PPS = 0x14;
  3876  0372  3014               	movlw	20
  3877  0373  003D               	movlb	29	; select bank29
  3878  0374  00A4               	movwf	36	;volatile
  3879  0375                     l193:
  3880  0375  0008               	return
  3881  0376                     __end_of_PIN_MANAGER_Initialize:
  3882                           
  3883                           	psect	text5
  3884  03C9                     __ptext5:	
  3885 ;; *************** function _OSCILLATOR_Initialize *****************
  3886 ;; Defined at:
  3887 ;;		line 60 in file "mcc_generated_files/mcc.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  1    wreg      void 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3905 ;;Total ram usage:        0 bytes
  3906 ;; Hardware stack levels used: 1
  3907 ;; Hardware stack levels required when called: 4
  3908 ;; This function calls:
  3909 ;;		Nothing
  3910 ;; This function is called by:
  3911 ;;		_SYSTEM_Initialize
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           
  3916                           ;psect for function _OSCILLATOR_Initialize
  3917  03C9                     _OSCILLATOR_Initialize:
  3918  03C9                     l1882:	
  3919                           ;incstack = 0
  3920                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3921                           
  3922                           
  3923                           ;mcc_generated_files/mcc.c: 63:     OSCCON1 = 0x62;
  3924  03C9  3062               	movlw	98
  3925  03CA  0032               	movlb	18	; select bank18
  3926  03CB  0099               	movwf	25	;volatile
  3927  03CC                     l1884:
  3928                           
  3929                           ;mcc_generated_files/mcc.c: 65:     OSCCON3 = 0x00;
  3930  03CC  019B               	clrf	27	;volatile
  3931  03CD                     l1886:
  3932                           
  3933                           ;mcc_generated_files/mcc.c: 67:     OSCEN = 0x00;
  3934  03CD  019D               	clrf	29	;volatile
  3935                           
  3936                           ;mcc_generated_files/mcc.c: 69:     OSCFRQ = 0x03;
  3937  03CE  3003               	movlw	3
  3938  03CF  009F               	movwf	31	;volatile
  3939  03D0                     l1888:
  3940                           
  3941                           ;mcc_generated_files/mcc.c: 71:     OSCTUNE = 0x00;
  3942  03D0  019E               	clrf	30	;volatile
  3943  03D1                     l244:
  3944  03D1  0008               	return
  3945  03D2                     __end_of_OSCILLATOR_Initialize:
  3946                           
  3947                           	psect	text6
  3948  02B0                     __ptext6:	
  3949 ;; *************** function _EUSART_Initialize *****************
  3950 ;; Defined at:
  3951 ;;		line 88 in file "mcc_generated_files/eusart.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, status,2, status,0, pclath, cstack
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3967 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;Total ram usage:        1 bytes
  3970 ;; Hardware stack levels used: 1
  3971 ;; Hardware stack levels required when called: 5
  3972 ;; This function calls:
  3973 ;;		_EUSART_SetErrorHandler
  3974 ;;		_EUSART_SetFramingErrorHandler
  3975 ;;		_EUSART_SetOverrunErrorHandler
  3976 ;;		_EUSART_SetRxInterruptHandler
  3977 ;;		_EUSART_SetTxInterruptHandler
  3978 ;; This function is called by:
  3979 ;;		_SYSTEM_Initialize
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function _EUSART_Initialize
  3985  02B0                     _EUSART_Initialize:
  3986  02B0                     l1826:	
  3987                           ;incstack = 0
  3988                           ; Regs used in _EUSART_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3989                           
  3990                           
  3991                           ;mcc_generated_files/eusart.c: 91:     PIE1bits.RCIE = 0;
  3992  02B0  0021               	movlb	1	; select bank1
  3993  02B1  1291               	bcf	17,5	;volatile
  3994  02B2                     l1828:
  3995                           
  3996                           ;mcc_generated_files/eusart.c: 92:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  3997  02B2  30EF               	movlw	low _EUSART_Receive_ISR
  3998  02B3  00F9               	movwf	EUSART_SetRxInterruptHandler@interruptHandler
  3999  02B4  3002               	movlw	high _EUSART_Receive_ISR
  4000  02B5  00FA               	movwf	EUSART_SetRxInterruptHandler@interruptHandler+1
  4001  02B6  3183  23ED  3182   	fcall	_EUSART_SetRxInterruptHandler
  4002  02B9                     l1830:
  4003                           
  4004                           ;mcc_generated_files/eusart.c: 93:     PIE1bits.TXIE = 0;
  4005  02B9  0021               	movlb	1	; select bank1
  4006  02BA  1211               	bcf	17,4	;volatile
  4007                           
  4008                           ;mcc_generated_files/eusart.c: 94:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  4009  02BB  3076               	movlw	low _EUSART_Transmit_ISR
  4010  02BC  00F9               	movwf	EUSART_SetTxInterruptHandler@interruptHandler
  4011  02BD  3003               	movlw	high _EUSART_Transmit_ISR
  4012  02BE  00FA               	movwf	EUSART_SetTxInterruptHandler@interruptHandler+1
  4013  02BF  3183  23E7  3182   	fcall	_EUSART_SetTxInterruptHandler
  4014  02C2                     l1832:
  4015                           
  4016                           ;mcc_generated_files/eusart.c: 98:     BAUD1CON = 0x08;
  4017  02C2  3008               	movlw	8
  4018  02C3  0023               	movlb	3	; select bank3
  4019  02C4  009F               	movwf	31	;volatile
  4020  02C5                     l1834:
  4021                           
  4022                           ;mcc_generated_files/eusart.c: 101:     RC1STA = 0x90;
  4023  02C5  3090               	movlw	144
  4024  02C6  009D               	movwf	29	;volatile
  4025  02C7                     l1836:
  4026                           
  4027                           ;mcc_generated_files/eusart.c: 104:     TX1STA = 0x24;
  4028  02C7  3024               	movlw	36
  4029  02C8  009E               	movwf	30	;volatile
  4030  02C9                     l1838:
  4031                           
  4032                           ;mcc_generated_files/eusart.c: 107:     SP1BRGL = 0x19;
  4033  02C9  3019               	movlw	25
  4034  02CA  009B               	movwf	27	;volatile
  4035  02CB                     l1840:
  4036                           
  4037                           ;mcc_generated_files/eusart.c: 110:     SP1BRGH = 0x00;
  4038  02CB  019C               	clrf	28	;volatile
  4039  02CC                     l1842:
  4040                           
  4041                           ;mcc_generated_files/eusart.c: 113:     EUSART_SetFramingErrorHandler(EUSART_DefaultFram
      +                          ingErrorHandler);
  4042  02CC  3011               	movlw	low _EUSART_DefaultFramingErrorHandler
  4043  02CD  00F9               	movwf	EUSART_SetFramingErrorHandler@interruptHandler
  4044  02CE  3004               	movlw	high _EUSART_DefaultFramingErrorHandler
  4045  02CF  00FA               	movwf	EUSART_SetFramingErrorHandler@interruptHandler+1
  4046  02D0  3183  23F9  3182   	fcall	_EUSART_SetFramingErrorHandler
  4047  02D3                     l1844:
  4048                           
  4049                           ;mcc_generated_files/eusart.c: 114:     EUSART_SetOverrunErrorHandler(EUSART_DefaultOver
      +                          runErrorHandler);
  4050  02D3  3009               	movlw	low _EUSART_DefaultOverrunErrorHandler
  4051  02D4  00F9               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler
  4052  02D5  3004               	movlw	high _EUSART_DefaultOverrunErrorHandler
  4053  02D6  00FA               	movwf	EUSART_SetOverrunErrorHandler@interruptHandler+1
  4054  02D7  3183  23F3  3182   	fcall	_EUSART_SetOverrunErrorHandler
  4055  02DA                     l1846:
  4056                           
  4057                           ;mcc_generated_files/eusart.c: 115:     EUSART_SetErrorHandler(EUSART_DefaultErrorHandle
      +                          r);
  4058  02DA  300D               	movlw	low _EUSART_DefaultErrorHandler
  4059  02DB  00F9               	movwf	EUSART_SetErrorHandler@interruptHandler
  4060  02DC  3004               	movlw	high _EUSART_DefaultErrorHandler
  4061  02DD  00FA               	movwf	EUSART_SetErrorHandler@interruptHandler+1
  4062  02DE  3183  23FF  3182   	fcall	_EUSART_SetErrorHandler
  4063                           
  4064                           ;mcc_generated_files/eusart.c: 117:     eusartRxLastError.status = 0;
  4065  02E1  0020               	movlb	0	; select bank0
  4066  02E2  01A8               	clrf	_eusartRxLastError	;volatile
  4067                           
  4068                           ;mcc_generated_files/eusart.c: 120:     eusartTxHead = 0;
  4069  02E3  01F6               	clrf	_eusartTxHead	;volatile
  4070                           
  4071                           ;mcc_generated_files/eusart.c: 121:     eusartTxTail = 0;
  4072  02E4  01F5               	clrf	_eusartTxTail	;volatile
  4073  02E5                     l1848:
  4074                           
  4075                           ;mcc_generated_files/eusart.c: 122:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  4076  02E5  3008               	movlw	8
  4077  02E6  00FB               	movwf	??_EUSART_Initialize
  4078  02E7  087B               	movf	??_EUSART_Initialize,w
  4079  02E8  00AE               	movwf	_eusartTxBufferRemaining	;volatile
  4080  02E9                     l1850:
  4081                           
  4082                           ;mcc_generated_files/eusart.c: 124:     eusartRxHead = 0;
  4083  02E9  01F4               	clrf	_eusartRxHead	;volatile
  4084  02EA                     l1852:
  4085                           
  4086                           ;mcc_generated_files/eusart.c: 125:     eusartRxTail = 0;
  4087  02EA  01F3               	clrf	_eusartRxTail	;volatile
  4088  02EB                     l1854:
  4089                           
  4090                           ;mcc_generated_files/eusart.c: 126:     eusartRxCount = 0;
  4091  02EB  01F0               	clrf	_eusartRxCount	;volatile
  4092  02EC                     l1856:
  4093                           
  4094                           ;mcc_generated_files/eusart.c: 129:     PIE1bits.RCIE = 1;
  4095  02EC  0021               	movlb	1	; select bank1
  4096  02ED  1691               	bsf	17,5	;volatile
  4097  02EE                     l83:
  4098  02EE  0008               	return
  4099  02EF                     __end_of_EUSART_Initialize:
  4100                           
  4101                           	psect	text7
  4102  03E7                     __ptext7:	
  4103 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  4104 ;; Defined at:
  4105 ;;		line 292 in file "mcc_generated_files/eusart.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4108 ;;		 -> EUSART_Transmit_ISR(1), 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;		None
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  1    wreg      void 
  4113 ;; Registers used:
  4114 ;;		wreg
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4120 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4123 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4124 ;;Total ram usage:        2 bytes
  4125 ;; Hardware stack levels used: 1
  4126 ;; Hardware stack levels required when called: 4
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_EUSART_Initialize
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           
  4135                           ;psect for function _EUSART_SetTxInterruptHandler
  4136  03E7                     _EUSART_SetTxInterruptHandler:
  4137  03E7                     l1818:	
  4138                           ;incstack = 0
  4139                           ; Regs used in _EUSART_SetTxInterruptHandler: [wreg]
  4140                           
  4141                           
  4142                           ;mcc_generated_files/eusart.c: 293:     EUSART_TxDefaultInterruptHandler = interruptHand
      +                          ler;
  4143  03E7  087A               	movf	EUSART_SetTxInterruptHandler@interruptHandler+1,w
  4144  03E8  0020               	movlb	0	; select bank0
  4145  03E9  00AD               	movwf	_EUSART_TxDefaultInterruptHandler+1
  4146  03EA  0879               	movf	EUSART_SetTxInterruptHandler@interruptHandler,w
  4147  03EB  00AC               	movwf	_EUSART_TxDefaultInterruptHandler
  4148  03EC                     l155:
  4149  03EC  0008               	return
  4150  03ED                     __end_of_EUSART_SetTxInterruptHandler:
  4151                           
  4152                           	psect	text8
  4153  03ED                     __ptext8:	
  4154 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  4155 ;; Defined at:
  4156 ;;		line 296 in file "mcc_generated_files/eusart.c"
  4157 ;; Parameters:    Size  Location     Type
  4158 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4159 ;;		 -> EUSART_Receive_ISR(1), 
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4175 ;;Total ram usage:        2 bytes
  4176 ;; Hardware stack levels used: 1
  4177 ;; Hardware stack levels required when called: 4
  4178 ;; This function calls:
  4179 ;;		Nothing
  4180 ;; This function is called by:
  4181 ;;		_EUSART_Initialize
  4182 ;; This function uses a non-reentrant model
  4183 ;;
  4184                           
  4185                           
  4186                           ;psect for function _EUSART_SetRxInterruptHandler
  4187  03ED                     _EUSART_SetRxInterruptHandler:
  4188  03ED                     l1816:	
  4189                           ;incstack = 0
  4190                           ; Regs used in _EUSART_SetRxInterruptHandler: [wreg]
  4191                           
  4192                           
  4193                           ;mcc_generated_files/eusart.c: 297:     EUSART_RxDefaultInterruptHandler = interruptHand
      +                          ler;
  4194  03ED  087A               	movf	EUSART_SetRxInterruptHandler@interruptHandler+1,w
  4195  03EE  0021               	movlb	1	; select bank1
  4196  03EF  00E8               	movwf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128)
  4197  03F0  0879               	movf	EUSART_SetRxInterruptHandler@interruptHandler,w
  4198  03F1  00E7               	movwf	_EUSART_RxDefaultInterruptHandler^(0+128)
  4199  03F2                     l158:
  4200  03F2  0008               	return
  4201  03F3                     __end_of_EUSART_SetRxInterruptHandler:
  4202                           
  4203                           	psect	text9
  4204  03F3                     __ptext9:	
  4205 ;; *************** function _EUSART_SetOverrunErrorHandler *****************
  4206 ;; Defined at:
  4207 ;;		line 284 in file "mcc_generated_files/eusart.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4210 ;;		 -> EUSART_DefaultOverrunErrorHandler(1), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;		None
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4222 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4225 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4226 ;;Total ram usage:        2 bytes
  4227 ;; Hardware stack levels used: 1
  4228 ;; Hardware stack levels required when called: 4
  4229 ;; This function calls:
  4230 ;;		Nothing
  4231 ;; This function is called by:
  4232 ;;		_EUSART_Initialize
  4233 ;; This function uses a non-reentrant model
  4234 ;;
  4235                           
  4236                           
  4237                           ;psect for function _EUSART_SetOverrunErrorHandler
  4238  03F3                     _EUSART_SetOverrunErrorHandler:
  4239  03F3                     l1822:	
  4240                           ;incstack = 0
  4241                           ; Regs used in _EUSART_SetOverrunErrorHandler: [wreg]
  4242                           
  4243                           
  4244                           ;mcc_generated_files/eusart.c: 285:     EUSART_OverrunErrorHandler = interruptHandler;
  4245  03F3  087A               	movf	EUSART_SetOverrunErrorHandler@interruptHandler+1,w
  4246  03F4  0021               	movlb	1	; select bank1
  4247  03F5  00E4               	movwf	(_EUSART_OverrunErrorHandler+1)^(0+128)
  4248  03F6  0879               	movf	EUSART_SetOverrunErrorHandler@interruptHandler,w
  4249  03F7  00E3               	movwf	_EUSART_OverrunErrorHandler^(0+128)
  4250  03F8                     l149:
  4251  03F8  0008               	return
  4252  03F9                     __end_of_EUSART_SetOverrunErrorHandler:
  4253                           
  4254                           	psect	text10
  4255  03F9                     __ptext10:	
  4256 ;; *************** function _EUSART_SetFramingErrorHandler *****************
  4257 ;; Defined at:
  4258 ;;		line 280 in file "mcc_generated_files/eusart.c"
  4259 ;; Parameters:    Size  Location     Type
  4260 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4261 ;;		 -> EUSART_DefaultFramingErrorHandler(1), 
  4262 ;; Auto vars:     Size  Location     Type
  4263 ;;		None
  4264 ;; Return value:  Size  Location     Type
  4265 ;;                  1    wreg      void 
  4266 ;; Registers used:
  4267 ;;		wreg
  4268 ;; Tracked objects:
  4269 ;;		On entry : 0/0
  4270 ;;		On exit  : 0/0
  4271 ;;		Unchanged: 0/0
  4272 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4273 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4276 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4277 ;;Total ram usage:        2 bytes
  4278 ;; Hardware stack levels used: 1
  4279 ;; Hardware stack levels required when called: 4
  4280 ;; This function calls:
  4281 ;;		Nothing
  4282 ;; This function is called by:
  4283 ;;		_EUSART_Initialize
  4284 ;; This function uses a non-reentrant model
  4285 ;;
  4286                           
  4287                           
  4288                           ;psect for function _EUSART_SetFramingErrorHandler
  4289  03F9                     _EUSART_SetFramingErrorHandler:
  4290  03F9                     l1820:	
  4291                           ;incstack = 0
  4292                           ; Regs used in _EUSART_SetFramingErrorHandler: [wreg]
  4293                           
  4294                           
  4295                           ;mcc_generated_files/eusart.c: 281:     EUSART_FramingErrorHandler = interruptHandler;
  4296  03F9  087A               	movf	EUSART_SetFramingErrorHandler@interruptHandler+1,w
  4297  03FA  0021               	movlb	1	; select bank1
  4298  03FB  00E6               	movwf	(_EUSART_FramingErrorHandler+1)^(0+128)
  4299  03FC  0879               	movf	EUSART_SetFramingErrorHandler@interruptHandler,w
  4300  03FD  00E5               	movwf	_EUSART_FramingErrorHandler^(0+128)
  4301  03FE                     l146:
  4302  03FE  0008               	return
  4303  03FF                     __end_of_EUSART_SetFramingErrorHandler:
  4304                           
  4305                           	psect	text11
  4306  03FF                     __ptext11:	
  4307 ;; *************** function _EUSART_SetErrorHandler *****************
  4308 ;; Defined at:
  4309 ;;		line 288 in file "mcc_generated_files/eusart.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  interruptHan    2    1[COMMON] PTR FTN()void 
  4312 ;;		 -> EUSART_DefaultErrorHandler(1), 
  4313 ;; Auto vars:     Size  Location     Type
  4314 ;;		None
  4315 ;; Return value:  Size  Location     Type
  4316 ;;                  1    wreg      void 
  4317 ;; Registers used:
  4318 ;;		wreg
  4319 ;; Tracked objects:
  4320 ;;		On entry : 0/0
  4321 ;;		On exit  : 0/0
  4322 ;;		Unchanged: 0/0
  4323 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4324 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4325 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4327 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4328 ;;Total ram usage:        2 bytes
  4329 ;; Hardware stack levels used: 1
  4330 ;; Hardware stack levels required when called: 4
  4331 ;; This function calls:
  4332 ;;		Nothing
  4333 ;; This function is called by:
  4334 ;;		_EUSART_Initialize
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           
  4338                           
  4339                           ;psect for function _EUSART_SetErrorHandler
  4340  03FF                     _EUSART_SetErrorHandler:
  4341  03FF                     l1824:	
  4342                           ;incstack = 0
  4343                           ; Regs used in _EUSART_SetErrorHandler: [wreg]
  4344                           
  4345                           
  4346                           ;mcc_generated_files/eusart.c: 289:     EUSART_ErrorHandler = interruptHandler;
  4347  03FF  087A               	movf	EUSART_SetErrorHandler@interruptHandler+1,w
  4348  0400  0021               	movlb	1	; select bank1
  4349  0401  00E2               	movwf	(_EUSART_ErrorHandler+1)^(0+128)
  4350  0402  0879               	movf	EUSART_SetErrorHandler@interruptHandler,w
  4351  0403  00E1               	movwf	_EUSART_ErrorHandler^(0+128)
  4352  0404                     l152:
  4353  0404  0008               	return
  4354  0405                     __end_of_EUSART_SetErrorHandler:
  4355                           
  4356                           	psect	text12
  4357  0328                     __ptext12:	
  4358 ;; *************** function _EUSART_Write *****************
  4359 ;; Defined at:
  4360 ;;		line 173 in file "mcc_generated_files/eusart.c"
  4361 ;; Parameters:    Size  Location     Type
  4362 ;;  txData          1    wreg     unsigned char 
  4363 ;; Auto vars:     Size  Location     Type
  4364 ;;  txData          1    2[COMMON] unsigned char 
  4365 ;; Return value:  Size  Location     Type
  4366 ;;                  1    wreg      void 
  4367 ;; Registers used:
  4368 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4369 ;; Tracked objects:
  4370 ;;		On entry : 0/0
  4371 ;;		On exit  : 0/0
  4372 ;;		Unchanged: 0/0
  4373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4374 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4376 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4377 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4378 ;;Total ram usage:        2 bytes
  4379 ;; Hardware stack levels used: 1
  4380 ;; Hardware stack levels required when called: 4
  4381 ;; This function calls:
  4382 ;;		Nothing
  4383 ;; This function is called by:
  4384 ;;		_main
  4385 ;;		_putch
  4386 ;; This function uses a non-reentrant model
  4387 ;;
  4388                           
  4389                           
  4390                           ;psect for function _EUSART_Write
  4391  0328                     _EUSART_Write:
  4392                           
  4393                           ;incstack = 0
  4394                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
  4395                           ;EUSART_Write@txData stored from wreg
  4396  0328  00FA               	movwf	EUSART_Write@txData
  4397  0329                     l1892:
  4398  0329                     l1894:	
  4399                           ;mcc_generated_files/eusart.c: 173: void EUSART_Write(uint8_t txData);mcc_generated_file
      +                          s/eusart.c: 174: {;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemai
      +                          ning)
  4400                           
  4401                           
  4402                           ;mcc_generated_files/eusart.c: 175:     while(0 == eusartTxBufferRemaining)
  4403  0329  0020               	movlb	0	; select bank0
  4404  032A  082E               	movf	_eusartTxBufferRemaining,w	;volatile
  4405  032B  1903               	btfsc	3,2
  4406  032C  2B2E               	goto	u991
  4407  032D  2B2F               	goto	u990
  4408  032E                     u991:
  4409  032E  2B29               	goto	l1894
  4410  032F                     u990:
  4411  032F                     l107:
  4412                           
  4413                           ;mcc_generated_files/eusart.c: 179:     if(0 == PIE1bits.TXIE)
  4414  032F  0021               	movlb	1	; select bank1
  4415  0330  1A11               	btfsc	17,4	;volatile
  4416  0331  2B33               	goto	u1001
  4417  0332  2B34               	goto	u1000
  4418  0333                     u1001:
  4419  0333  2B38               	goto	l108
  4420  0334                     u1000:
  4421  0334                     l1896:
  4422                           
  4423                           ;mcc_generated_files/eusart.c: 180:     {;mcc_generated_files/eusart.c: 181:         TX1
      +                          REG = txData;
  4424  0334  087A               	movf	EUSART_Write@txData,w
  4425  0335  0023               	movlb	3	; select bank3
  4426  0336  009A               	movwf	26	;volatile
  4427                           
  4428                           ;mcc_generated_files/eusart.c: 182:     }
  4429  0337  2B4F               	goto	l1908
  4430  0338                     l108:	
  4431                           ;mcc_generated_files/eusart.c: 183:     else
  4432                           
  4433                           
  4434                           ;mcc_generated_files/eusart.c: 184:     {;mcc_generated_files/eusart.c: 185:         PIE
      +                          1bits.TXIE = 0;
  4435  0338  1211               	bcf	17,4	;volatile
  4436  0339                     l1898:
  4437                           
  4438                           ;mcc_generated_files/eusart.c: 186:         eusartTxBuffer[eusartTxHead++] = txData;
  4439  0339  087A               	movf	EUSART_Write@txData,w
  4440  033A  00F9               	movwf	??_EUSART_Write
  4441  033B  0876               	movf	_eusartTxHead,w
  4442  033C  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4443  033D  0086               	movwf	6
  4444  033E  0187               	clrf	7
  4445  033F  0879               	movf	??_EUSART_Write,w
  4446  0340  0081               	movwf	1
  4447  0341                     l1900:
  4448  0341  3001               	movlw	1
  4449  0342  00F9               	movwf	??_EUSART_Write
  4450  0343  0879               	movf	??_EUSART_Write,w
  4451  0344  07F6               	addwf	_eusartTxHead,f	;volatile
  4452  0345                     l1902:
  4453                           
  4454                           ;mcc_generated_files/eusart.c: 187:         if(sizeof(eusartTxBuffer) <= eusartTxHead)
  4455  0345  3008               	movlw	8
  4456  0346  0276               	subwf	_eusartTxHead,w	;volatile
  4457  0347  1C03               	skipc
  4458  0348  2B4A               	goto	u1011
  4459  0349  2B4B               	goto	u1010
  4460  034A                     u1011:
  4461  034A  2B4C               	goto	l1906
  4462  034B                     u1010:
  4463  034B                     l1904:
  4464                           
  4465                           ;mcc_generated_files/eusart.c: 188:         {;mcc_generated_files/eusart.c: 189:        
      +                               eusartTxHead = 0;
  4466  034B  01F6               	clrf	_eusartTxHead	;volatile
  4467  034C                     l1906:
  4468                           
  4469                           ;mcc_generated_files/eusart.c: 191:         eusartTxBufferRemaining--;
  4470  034C  3001               	movlw	1
  4471  034D  0020               	movlb	0	; select bank0
  4472  034E  02AE               	subwf	_eusartTxBufferRemaining,f	;volatile
  4473  034F                     l1908:
  4474                           
  4475                           ;mcc_generated_files/eusart.c: 193:     PIE1bits.TXIE = 1;
  4476  034F  0021               	movlb	1	; select bank1
  4477  0350  1611               	bsf	17,4	;volatile
  4478  0351                     l111:
  4479  0351  0008               	return
  4480  0352                     __end_of_EUSART_Write:
  4481                           
  4482                           	psect	intentry
  4483  0004                     __pintentry:	
  4484 ;; *************** function _INTERRUPT_InterruptManager *****************
  4485 ;; Defined at:
  4486 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  4487 ;; Parameters:    Size  Location     Type
  4488 ;;		None
  4489 ;; Auto vars:     Size  Location     Type
  4490 ;;		None
  4491 ;; Return value:  Size  Location     Type
  4492 ;;                  1    wreg      void 
  4493 ;; Registers used:
  4494 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4495 ;; Tracked objects:
  4496 ;;		On entry : 0/0
  4497 ;;		On exit  : 0/0
  4498 ;;		Unchanged: 0/0
  4499 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4504 ;;Total ram usage:        0 bytes
  4505 ;; Hardware stack levels used: 1
  4506 ;; Hardware stack levels required when called: 3
  4507 ;; This function calls:
  4508 ;;		Absolute function
  4509 ;;		_EUSART_Receive_ISR
  4510 ;;		_EUSART_Transmit_ISR
  4511 ;; This function is called by:
  4512 ;;		Interrupt level 1
  4513 ;; This function uses a non-reentrant model
  4514 ;;
  4515                           
  4516  0004                     _INTERRUPT_InterruptManager:
  4517                           
  4518                           ;incstack = 0
  4519  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  4520                           
  4521                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4522  0005  3180               	pagesel	$
  4523  0006                     i1l1578:
  4524                           
  4525                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.PEIE == 1)
  4526  0006  1F0B               	btfss	11,6	;volatile
  4527  0007  2809               	goto	u61_21
  4528  0008  280A               	goto	u61_20
  4529  0009                     u61_21:
  4530  0009  282B               	goto	i1l279
  4531  000A                     u61_20:
  4532  000A                     i1l1580:
  4533                           
  4534                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         if(PIE1bits.TXIE == 1 && PIR1bits.TXIF == 1)
  4535  000A  0021               	movlb	1	; select bank1
  4536  000B  1E11               	btfss	17,4	;volatile
  4537  000C  280E               	goto	u62_21
  4538  000D  280F               	goto	u62_20
  4539  000E                     u62_21:
  4540  000E  281A               	goto	i1l274
  4541  000F                     u62_20:
  4542  000F                     i1l1582:
  4543  000F  0020               	movlb	0	; select bank0
  4544  0010  1E11               	btfss	17,4	;volatile
  4545  0011  2813               	goto	u63_21
  4546  0012  2814               	goto	u63_20
  4547  0013                     u63_21:
  4548  0013  281A               	goto	i1l274
  4549  0014                     u63_20:
  4550  0014                     i1l1584:
  4551                           
  4552                           ;mcc_generated_files/interrupt_manager.c: 58:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 59:             EUSART_TxDefaultInterruptHandler();
  4553  0014  082D               	movf	_EUSART_TxDefaultInterruptHandler+1,w
  4554  0015  008A               	movwf	10
  4555  0016  082C               	movf	_EUSART_TxDefaultInterruptHandler,w
  4556  0017  000A               	callw
  4557  0018  3180               	pagesel	$
  4558                           
  4559                           ;mcc_generated_files/interrupt_manager.c: 60:         }
  4560  0019  282B               	goto	i1l279
  4561  001A                     i1l274:	
  4562                           ;mcc_generated_files/interrupt_manager.c: 61:         else if(PIE1bits.RCIE == 1 && PIR1
      +                          bits.RCIF == 1)
  4563                           
  4564  001A  0021               	movlb	1	; select bank1
  4565  001B  1E91               	btfss	17,5	;volatile
  4566  001C  281E               	goto	u64_21
  4567  001D  281F               	goto	u64_20
  4568  001E                     u64_21:
  4569  001E  282B               	goto	i1l275
  4570  001F                     u64_20:
  4571  001F                     i1l1586:
  4572  001F  0020               	movlb	0	; select bank0
  4573  0020  1E91               	btfss	17,5	;volatile
  4574  0021  2823               	goto	u65_21
  4575  0022  2824               	goto	u65_20
  4576  0023                     u65_21:
  4577  0023  282B               	goto	i1l275
  4578  0024                     u65_20:
  4579  0024                     i1l1588:
  4580                           
  4581                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             EUSART_RxDefaultInterruptHandler();
  4582  0024  0021               	movlb	1	; select bank1
  4583  0025  0868               	movf	(_EUSART_RxDefaultInterruptHandler+1)^(0+128),w
  4584  0026  008A               	movwf	10
  4585  0027  0867               	movf	_EUSART_RxDefaultInterruptHandler^(0+128),w
  4586  0028  000A               	callw
  4587  0029  3180               	pagesel	$
  4588                           
  4589                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  4590  002A  282B               	goto	i1l279
  4591  002B                     i1l275:
  4592  002B                     i1l279:	
  4593                           ;mcc_generated_files/interrupt_manager.c: 69:     }
  4594                           
  4595  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  4596  002C  0009               	retfie
  4597  002D                     __end_of_INTERRUPT_InterruptManager:
  4598                           
  4599                           	psect	text14
  4600  0376                     __ptext14:	
  4601 ;; *************** function _EUSART_Transmit_ISR *****************
  4602 ;; Defined at:
  4603 ;;		line 206 in file "mcc_generated_files/eusart.c"
  4604 ;; Parameters:    Size  Location     Type
  4605 ;;		None
  4606 ;; Auto vars:     Size  Location     Type
  4607 ;;		None
  4608 ;; Return value:  Size  Location     Type
  4609 ;;                  1    wreg      void 
  4610 ;; Registers used:
  4611 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4612 ;; Tracked objects:
  4613 ;;		On entry : 0/0
  4614 ;;		On exit  : 0/0
  4615 ;;		Unchanged: 0/0
  4616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4617 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4619 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4620 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4621 ;;Total ram usage:        1 bytes
  4622 ;; Hardware stack levels used: 1
  4623 ;; This function calls:
  4624 ;;		Nothing
  4625 ;; This function is called by:
  4626 ;;		_EUSART_Initialize
  4627 ;;		_INTERRUPT_InterruptManager
  4628 ;; This function uses a non-reentrant model
  4629 ;;
  4630                           
  4631                           
  4632                           ;psect for function _EUSART_Transmit_ISR
  4633  0376                     _EUSART_Transmit_ISR:
  4634  0376                     i1l1530:	
  4635                           ;incstack = 0
  4636                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
  4637                           
  4638                           
  4639                           ;mcc_generated_files/eusart.c: 210:     if(sizeof(eusartTxBuffer) > eusartTxBufferRemain
      +                          ing)
  4640  0376  3008               	movlw	8
  4641  0377  0020               	movlb	0	; select bank0
  4642  0378  022E               	subwf	_eusartTxBufferRemaining,w	;volatile
  4643  0379  1803               	skipnc
  4644  037A  2B7C               	goto	u56_21
  4645  037B  2B7D               	goto	u56_20
  4646  037C                     u56_21:
  4647  037C  2B95               	goto	i1l120
  4648  037D                     u56_20:
  4649  037D                     i1l1532:
  4650                           
  4651                           ;mcc_generated_files/eusart.c: 211:     {;mcc_generated_files/eusart.c: 212:         TX1
      +                          REG = eusartTxBuffer[eusartTxTail++];
  4652  037D  0875               	movf	_eusartTxTail,w
  4653  037E  3E20               	addlw	(low (_eusartTxBuffer| 0))& (0+255)
  4654  037F  0086               	movwf	6
  4655  0380  0187               	clrf	7
  4656  0381  0801               	movf	1,w
  4657  0382  0023               	movlb	3	; select bank3
  4658  0383  009A               	movwf	26	;volatile
  4659  0384                     i1l1534:
  4660  0384  3001               	movlw	1
  4661  0385  00F8               	movwf	??_EUSART_Transmit_ISR
  4662  0386  0878               	movf	??_EUSART_Transmit_ISR,w
  4663  0387  07F5               	addwf	_eusartTxTail,f	;volatile
  4664  0388                     i1l1536:
  4665                           
  4666                           ;mcc_generated_files/eusart.c: 213:         if(sizeof(eusartTxBuffer) <= eusartTxTail)
  4667  0388  3008               	movlw	8
  4668  0389  0275               	subwf	_eusartTxTail,w	;volatile
  4669  038A  1C03               	skipc
  4670  038B  2B8D               	goto	u57_21
  4671  038C  2B8E               	goto	u57_20
  4672  038D                     u57_21:
  4673  038D  2B8F               	goto	i1l1540
  4674  038E                     u57_20:
  4675  038E                     i1l1538:
  4676                           
  4677                           ;mcc_generated_files/eusart.c: 214:         {;mcc_generated_files/eusart.c: 215:        
      +                               eusartTxTail = 0;
  4678  038E  01F5               	clrf	_eusartTxTail	;volatile
  4679  038F                     i1l1540:
  4680                           
  4681                           ;mcc_generated_files/eusart.c: 217:         eusartTxBufferRemaining++;
  4682  038F  3001               	movlw	1
  4683  0390  00F8               	movwf	??_EUSART_Transmit_ISR
  4684  0391  0878               	movf	??_EUSART_Transmit_ISR,w
  4685  0392  0020               	movlb	0	; select bank0
  4686  0393  07AE               	addwf	_eusartTxBufferRemaining,f	;volatile
  4687                           
  4688                           ;mcc_generated_files/eusart.c: 218:     }
  4689  0394  2B97               	goto	i1l123
  4690  0395                     i1l120:	
  4691                           ;mcc_generated_files/eusart.c: 219:     else
  4692                           
  4693                           
  4694                           ;mcc_generated_files/eusart.c: 220:     {;mcc_generated_files/eusart.c: 221:         PIE
      +                          1bits.TXIE = 0;
  4695  0395  0021               	movlb	1	; select bank1
  4696  0396  1211               	bcf	17,4	;volatile
  4697  0397                     i1l123:
  4698  0397  0008               	return
  4699  0398                     __end_of_EUSART_Transmit_ISR:
  4700                           
  4701                           	psect	text15
  4702  02EF                     __ptext15:	
  4703 ;; *************** function _EUSART_Receive_ISR *****************
  4704 ;; Defined at:
  4705 ;;		line 225 in file "mcc_generated_files/eusart.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4719 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4720 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4722 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used: 1
  4725 ;; Hardware stack levels required when called: 2
  4726 ;; This function calls:
  4727 ;;		Absolute function
  4728 ;;		_EUSART_DefaultErrorHandler
  4729 ;;		_EUSART_DefaultFramingErrorHandler
  4730 ;;		_EUSART_DefaultOverrunErrorHandler
  4731 ;;		_EUSART_RxDataHandler
  4732 ;; This function is called by:
  4733 ;;		_EUSART_Initialize
  4734 ;;		_INTERRUPT_InterruptManager
  4735 ;; This function uses a non-reentrant model
  4736 ;;
  4737                           
  4738                           
  4739                           ;psect for function _EUSART_Receive_ISR
  4740  02EF                     _EUSART_Receive_ISR:
  4741  02EF                     i1l1542:	
  4742                           ;incstack = 0
  4743                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4744                           
  4745                           
  4746                           ;mcc_generated_files/eusart.c: 228:     eusartRxStatusBuffer[eusartRxHead].status = 0;
  4747  02EF  0874               	movf	_eusartRxHead,w	;volatile
  4748  02F0  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4749  02F1  0086               	movwf	6
  4750  02F2  0187               	clrf	7
  4751  02F3  0181               	clrf	1
  4752  02F4                     i1l1544:
  4753                           
  4754                           ;mcc_generated_files/eusart.c: 230:     if(RC1STAbits.FERR){
  4755  02F4  0023               	movlb	3	; select bank3
  4756  02F5  1D1D               	btfss	29,2	;volatile
  4757  02F6  2AF8               	goto	u58_21
  4758  02F7  2AF9               	goto	u58_20
  4759  02F8                     u58_21:
  4760  02F8  2B04               	goto	i1l1550
  4761  02F9                     u58_20:
  4762  02F9                     i1l1546:
  4763                           
  4764                           ;mcc_generated_files/eusart.c: 231:         eusartRxStatusBuffer[eusartRxHead].ferr = 1;
  4765  02F9  0874               	movf	_eusartRxHead,w	;volatile
  4766  02FA  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4767  02FB  0086               	movwf	6
  4768  02FC  0187               	clrf	7
  4769  02FD  1481               	bsf	1,1
  4770  02FE                     i1l1548:
  4771                           
  4772                           ;mcc_generated_files/eusart.c: 232:         EUSART_FramingErrorHandler();
  4773  02FE  0021               	movlb	1	; select bank1
  4774  02FF  0866               	movf	(_EUSART_FramingErrorHandler+1)^(0+128),w
  4775  0300  008A               	movwf	10
  4776  0301  0865               	movf	_EUSART_FramingErrorHandler^(0+128),w
  4777  0302  000A               	callw
  4778  0303  3182               	pagesel	$
  4779  0304                     i1l1550:
  4780                           
  4781                           ;mcc_generated_files/eusart.c: 235:     if(RC1STAbits.OERR){
  4782  0304  0023               	movlb	3	; select bank3
  4783  0305  1C9D               	btfss	29,1	;volatile
  4784  0306  2B08               	goto	u59_21
  4785  0307  2B09               	goto	u59_20
  4786  0308                     u59_21:
  4787  0308  2B14               	goto	i1l1556
  4788  0309                     u59_20:
  4789  0309                     i1l1552:
  4790                           
  4791                           ;mcc_generated_files/eusart.c: 236:         eusartRxStatusBuffer[eusartRxHead].oerr = 1;
  4792  0309  0874               	movf	_eusartRxHead,w	;volatile
  4793  030A  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4794  030B  0086               	movwf	6
  4795  030C  0187               	clrf	7
  4796  030D  1501               	bsf	1,2
  4797  030E                     i1l1554:
  4798                           
  4799                           ;mcc_generated_files/eusart.c: 237:         EUSART_OverrunErrorHandler();
  4800  030E  0021               	movlb	1	; select bank1
  4801  030F  0864               	movf	(_EUSART_OverrunErrorHandler+1)^(0+128),w
  4802  0310  008A               	movwf	10
  4803  0311  0863               	movf	_EUSART_OverrunErrorHandler^(0+128),w
  4804  0312  000A               	callw
  4805  0313  3182               	pagesel	$
  4806  0314                     i1l1556:
  4807                           
  4808                           ;mcc_generated_files/eusart.c: 240:     if(eusartRxStatusBuffer[eusartRxHead].status){
  4809  0314  0874               	movf	_eusartRxHead,w	;volatile
  4810  0315  3E71               	addlw	(low (_eusartRxStatusBuffer| 0))& (0+255)
  4811  0316  0086               	movwf	6
  4812  0317  0187               	clrf	7
  4813  0318  0801               	movf	1,w
  4814  0319  1903               	btfsc	3,2
  4815  031A  2B1C               	goto	u60_21
  4816  031B  2B1D               	goto	u60_20
  4817  031C                     u60_21:
  4818  031C  2B24               	goto	i1l1560
  4819  031D                     u60_20:
  4820  031D                     i1l1558:
  4821                           
  4822                           ;mcc_generated_files/eusart.c: 241:         EUSART_ErrorHandler();
  4823  031D  0021               	movlb	1	; select bank1
  4824  031E  0862               	movf	(_EUSART_ErrorHandler+1)^(0+128),w
  4825  031F  008A               	movwf	10
  4826  0320  0861               	movf	_EUSART_ErrorHandler^(0+128),w
  4827  0321  000A               	callw
  4828  0322  3182               	pagesel	$
  4829                           
  4830                           ;mcc_generated_files/eusart.c: 242:     } else {
  4831  0323  2B27               	goto	i1l130
  4832  0324                     i1l1560:
  4833                           
  4834                           ;mcc_generated_files/eusart.c: 243:         EUSART_RxDataHandler();
  4835  0324  3183  2398  3182   	fcall	_EUSART_RxDataHandler
  4836  0327                     i1l130:
  4837  0327  0008               	return
  4838  0328                     __end_of_EUSART_Receive_ISR:
  4839                           
  4840                           	psect	text16
  4841  0409                     __ptext16:	
  4842 ;; *************** function _EUSART_DefaultOverrunErrorHandler *****************
  4843 ;; Defined at:
  4844 ;;		line 268 in file "mcc_generated_files/eusart.c"
  4845 ;; Parameters:    Size  Location     Type
  4846 ;;		None
  4847 ;; Auto vars:     Size  Location     Type
  4848 ;;		None
  4849 ;; Return value:  Size  Location     Type
  4850 ;;                  1    wreg      void 
  4851 ;; Registers used:
  4852 ;;		None
  4853 ;; Tracked objects:
  4854 ;;		On entry : 0/0
  4855 ;;		On exit  : 0/0
  4856 ;;		Unchanged: 0/0
  4857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4862 ;;Total ram usage:        0 bytes
  4863 ;; Hardware stack levels used: 1
  4864 ;; This function calls:
  4865 ;;		Nothing
  4866 ;; This function is called by:
  4867 ;;		_EUSART_Initialize
  4868 ;;		_EUSART_Receive_ISR
  4869 ;; This function uses a non-reentrant model
  4870 ;;
  4871                           
  4872                           
  4873                           ;psect for function _EUSART_DefaultOverrunErrorHandler
  4874  0409                     _EUSART_DefaultOverrunErrorHandler:
  4875  0409                     i1l1452:	
  4876                           ;incstack = 0
  4877                           ; Regs used in _EUSART_DefaultOverrunErrorHandler: []
  4878                           
  4879                           
  4880                           ;mcc_generated_files/eusart.c: 271:     RC1STAbits.CREN = 0;
  4881  0409  0023               	movlb	3	; select bank3
  4882  040A  121D               	bcf	29,4	;volatile
  4883                           
  4884                           ;mcc_generated_files/eusart.c: 272:     RC1STAbits.CREN = 1;
  4885  040B  161D               	bsf	29,4	;volatile
  4886  040C                     i1l140:
  4887  040C  0008               	return
  4888  040D                     __end_of_EUSART_DefaultOverrunErrorHandler:
  4889                           
  4890                           	psect	text17
  4891  0411                     __ptext17:	
  4892 ;; *************** function _EUSART_DefaultFramingErrorHandler *****************
  4893 ;; Defined at:
  4894 ;;		line 266 in file "mcc_generated_files/eusart.c"
  4895 ;; Parameters:    Size  Location     Type
  4896 ;;		None
  4897 ;; Auto vars:     Size  Location     Type
  4898 ;;		None
  4899 ;; Return value:  Size  Location     Type
  4900 ;;                  1    wreg      void 
  4901 ;; Registers used:
  4902 ;;		None
  4903 ;; Tracked objects:
  4904 ;;		On entry : 0/0
  4905 ;;		On exit  : 0/0
  4906 ;;		Unchanged: 0/0
  4907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4908 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4909 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4910 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4911 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4912 ;;Total ram usage:        0 bytes
  4913 ;; Hardware stack levels used: 1
  4914 ;; This function calls:
  4915 ;;		Nothing
  4916 ;; This function is called by:
  4917 ;;		_EUSART_Initialize
  4918 ;;		_EUSART_Receive_ISR
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function _EUSART_DefaultFramingErrorHandler
  4924  0411                     _EUSART_DefaultFramingErrorHandler:
  4925  0411                     i1l137:	
  4926                           ;incstack = 0
  4927                           ; Regs used in _EUSART_DefaultFramingErrorHandler: []
  4928                           
  4929  0411  0008               	return
  4930  0412                     __end_of_EUSART_DefaultFramingErrorHandler:
  4931                           
  4932                           	psect	text18
  4933  040D                     __ptext18:	
  4934 ;; *************** function _EUSART_DefaultErrorHandler *****************
  4935 ;; Defined at:
  4936 ;;		line 276 in file "mcc_generated_files/eusart.c"
  4937 ;; Parameters:    Size  Location     Type
  4938 ;;		None
  4939 ;; Auto vars:     Size  Location     Type
  4940 ;;		None
  4941 ;; Return value:  Size  Location     Type
  4942 ;;                  1    wreg      void 
  4943 ;; Registers used:
  4944 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4945 ;; Tracked objects:
  4946 ;;		On entry : 0/0
  4947 ;;		On exit  : 0/0
  4948 ;;		Unchanged: 0/0
  4949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4954 ;;Total ram usage:        0 bytes
  4955 ;; Hardware stack levels used: 1
  4956 ;; Hardware stack levels required when called: 1
  4957 ;; This function calls:
  4958 ;;		_EUSART_RxDataHandler
  4959 ;; This function is called by:
  4960 ;;		_EUSART_Initialize
  4961 ;;		_EUSART_Receive_ISR
  4962 ;; This function uses a non-reentrant model
  4963 ;;
  4964                           
  4965                           
  4966                           ;psect for function _EUSART_DefaultErrorHandler
  4967  040D                     _EUSART_DefaultErrorHandler:
  4968  040D                     i1l1454:	
  4969                           ;incstack = 0
  4970                           ; Regs used in _EUSART_DefaultErrorHandler: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  4971                           
  4972                           
  4973                           ;mcc_generated_files/eusart.c: 277:     EUSART_RxDataHandler();
  4974  040D  3183  2398  3184   	fcall	_EUSART_RxDataHandler
  4975  0410                     i1l143:
  4976  0410  0008               	return
  4977  0411                     __end_of_EUSART_DefaultErrorHandler:
  4978                           
  4979                           	psect	text19
  4980  0398                     __ptext19:	
  4981 ;; *************** function _EUSART_RxDataHandler *****************
  4982 ;; Defined at:
  4983 ;;		line 251 in file "mcc_generated_files/eusart.c"
  4984 ;; Parameters:    Size  Location     Type
  4985 ;;		None
  4986 ;; Auto vars:     Size  Location     Type
  4987 ;;		None
  4988 ;; Return value:  Size  Location     Type
  4989 ;;                  1    wreg      void 
  4990 ;; Registers used:
  4991 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  4992 ;; Tracked objects:
  4993 ;;		On entry : 0/0
  4994 ;;		On exit  : 0/0
  4995 ;;		Unchanged: 0/0
  4996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4998 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4999 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5000 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5001 ;;Total ram usage:        1 bytes
  5002 ;; Hardware stack levels used: 1
  5003 ;; This function calls:
  5004 ;;		Nothing
  5005 ;; This function is called by:
  5006 ;;		_EUSART_Receive_ISR
  5007 ;;		_EUSART_DefaultErrorHandler
  5008 ;; This function uses a non-reentrant model
  5009 ;;
  5010                           
  5011                           
  5012                           ;psect for function _EUSART_RxDataHandler
  5013  0398                     _EUSART_RxDataHandler:
  5014  0398                     i1l1408:	
  5015                           ;incstack = 0
  5016                           ; Regs used in _EUSART_RxDataHandler: [wreg+fsr1l+fsr1h+status,2+status,0]
  5017                           
  5018                           
  5019                           ;mcc_generated_files/eusart.c: 254:         rxData = eusartRxBuffer[0];
  5020  0398  0872               	movf	_eusartRxBuffer,w	;volatile
  5021  0399  00F8               	movwf	??_EUSART_RxDataHandler
  5022  039A  0878               	movf	??_EUSART_RxDataHandler,w
  5023  039B  0020               	movlb	0	; select bank0
  5024  039C  00A9               	movwf	_rxData	;volatile
  5025                           
  5026                           ;mcc_generated_files/eusart.c: 255:         uartFlag=1;
  5027  039D  3001               	movlw	1
  5028  039E  00F8               	movwf	??_EUSART_RxDataHandler
  5029  039F  0878               	movf	??_EUSART_RxDataHandler,w
  5030  03A0  00AB               	movwf	_uartFlag	;volatile
  5031  03A1                     i1l1410:
  5032                           
  5033                           ;mcc_generated_files/eusart.c: 258:     eusartRxBuffer[eusartRxHead++] = RC1REG;
  5034  03A1  0023               	movlb	3	; select bank3
  5035  03A2  0819               	movf	25,w	;volatile
  5036  03A3  00F8               	movwf	??_EUSART_RxDataHandler
  5037  03A4  0874               	movf	_eusartRxHead,w
  5038  03A5  3E72               	addlw	(low (_eusartRxBuffer| 0))& (0+255)
  5039  03A6  0086               	movwf	6
  5040  03A7  0187               	clrf	7
  5041  03A8  0878               	movf	??_EUSART_RxDataHandler,w
  5042  03A9  0081               	movwf	1
  5043  03AA                     i1l1412:
  5044  03AA  3001               	movlw	1
  5045  03AB  00F8               	movwf	??_EUSART_RxDataHandler
  5046  03AC  0878               	movf	??_EUSART_RxDataHandler,w
  5047  03AD  07F4               	addwf	_eusartRxHead,f	;volatile
  5048  03AE                     i1l1414:
  5049                           
  5050                           ;mcc_generated_files/eusart.c: 259:     if(sizeof(eusartRxBuffer) <= eusartRxHead)
  5051  03AE  0874               	movf	_eusartRxHead,w	;volatile
  5052  03AF  1903               	btfsc	3,2
  5053  03B0  2BB2               	goto	u50_21
  5054  03B1  2BB3               	goto	u50_20
  5055  03B2                     u50_21:
  5056  03B2  2BB4               	goto	i1l1418
  5057  03B3                     u50_20:
  5058  03B3                     i1l1416:
  5059                           
  5060                           ;mcc_generated_files/eusart.c: 260:     {;mcc_generated_files/eusart.c: 261:         eus
      +                          artRxHead = 0;
  5061  03B3  01F4               	clrf	_eusartRxHead	;volatile
  5062  03B4                     i1l1418:
  5063                           
  5064                           ;mcc_generated_files/eusart.c: 263:     eusartRxCount++;
  5065  03B4  3001               	movlw	1
  5066  03B5  00F8               	movwf	??_EUSART_RxDataHandler
  5067  03B6  0878               	movf	??_EUSART_RxDataHandler,w
  5068  03B7  07F0               	addwf	_eusartRxCount,f	;volatile
  5069  03B8                     i1l134:
  5070  03B8  0008               	return
  5071  03B9                     __end_of_EUSART_RxDataHandler:
  5072  007E                     btemp	set	126	;btemp
  5073  007E                     int$flags	set	126
  5074  007E                     wtemp0	set	126
  5075                           
  5076                           	psect	config
  5077                           
  5078                           ;Config register CONFIG1 @ 0x8007
  5079                           ;	FEXTOSC External Oscillator mode Selection bits
  5080                           ;	FEXTOSC = OFF, Oscillator not enabled
  5081                           ;	Power-up default value for COSC bits
  5082                           ;	RSTOSC = HFINT1, HFINTOSC (1MHz)
  5083                           ;	Clock Out Enable bit
  5084                           ;	CLKOUTEN = OFF, CLKOUT function is disabled; I/O or oscillator function on OSC2
  5085                           ;	Clock Switch Enable bit
  5086                           ;	CSWEN = ON, Writing to NOSC and NDIV is allowed
  5087                           ;	Fail-Safe Clock Monitor Enable
  5088                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
  5089  8007                     	org	32775
  5090  8007  3FEC               	dw	16364
  5091                           
  5092                           ;Config register CONFIG2 @ 0x8008
  5093                           ;	Master Clear Enable bit
  5094                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR; Weak pull-up enabled
  5095                           ;	Power-up Timer Enable bit
  5096                           ;	PWRTE = OFF, PWRT disabled
  5097                           ;	Watchdog Timer Enable bits
  5098                           ;	WDTE = OFF, WDT disabled; SWDTEN is ignored
  5099                           ;	Low-power BOR enable bit
  5100                           ;	LPBOREN = OFF, ULPBOR disabled
  5101                           ;	Brown-out Reset Enable bits
  5102                           ;	BOREN = ON, Brown-out Reset enabled, SBOREN bit ignored
  5103                           ;	Brown-out Reset Voltage selection bit
  5104                           ;	BORV = LOW, Brown-out voltage (Vbor) set to 2.45V
  5105                           ;	PPSLOCK bit One-Way Set Enable bit
  5106                           ;	PPS1WAY = ON, The PPSLOCK bit can be cleared and set only once; PPS registers remain l
      +                          ocked after one clear/set cycle
  5107                           ;	Stack Overflow/Underflow Reset Enable bit
  5108                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
  5109                           ;	Debugger enable bit
  5110                           ;	DEBUG = OFF, Background debugger disabled
  5111  8008                     	org	32776
  5112  8008  3FF3               	dw	16371
  5113                           
  5114                           ;Config register CONFIG3 @ 0x8009
  5115                           ;	User NVM self-write protection bits
  5116                           ;	WRT = OFF, Write protection off
  5117                           ;	Low Voltage Programming Enable bit
  5118                           ;	LVP = ON, Low Voltage programming enabled. MCLR/VPP pin function is MCLR. MCLRE config
      +                          uration bit is ignored.
  5119  8009                     	org	32777
  5120  8009  3FFF               	dw	16383
  5121                           
  5122                           ;Config register CONFIG4 @ 0x800A
  5123                           ;	User NVM Program Memory Code Protection bit
  5124                           ;	CP = OFF, User NVM code protection disabled
  5125                           ;	Data NVM Memory Code Protection bit
  5126                           ;	CPD = OFF, Data NVM code protection disabled
  5127  800A                     	org	32778
  5128  800A  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    7
    Data        0
    BSS         20
    Persistent  43
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      4      12
    BANK0            80      2      17
    BANK1            80     65      73
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           48      0       0

Pointer List with Targets:

    EUSART_SetRxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Receive_ISR(), 

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Receive_ISR(), 

    EUSART_SetTxInterruptHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_Transmit_ISR(), 

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_Transmit_ISR(), 

    EUSART_SetErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultErrorHandler(), 

    EUSART_SetOverrunErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultOverrunErrorHandler(), 

    EUSART_SetFramingErrorHandler@interruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART_DefaultFramingErrorHandler(), 

    EUSART_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultErrorHandler(), 

    EUSART_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultOverrunErrorHandler(), 

    EUSART_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), EUSART_DefaultFramingErrorHandler(), 


Critical Paths under _main in COMMON

    _SYSTEM_Initialize->_EUSART_Initialize
    _EUSART_Initialize->_EUSART_SetErrorHandler
    _EUSART_Initialize->_EUSART_SetFramingErrorHandler
    _EUSART_Initialize->_EUSART_SetOverrunErrorHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_EUSART_Transmit_ISR
    _EUSART_Receive_ISR->_EUSART_RxDataHandler
    _EUSART_DefaultErrorHandler->_EUSART_RxDataHandler

Critical Paths under _main in BANK0

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                67    67      0    2653
                                              0 BANK0      2     2      0
                                              0 BANK1     65    65      0
                       _EUSART_Write
                  _SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     605
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _PMD_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PMD_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0     605
                                              3 COMMON     1     1      0
             _EUSART_SetErrorHandler
      _EUSART_SetFramingErrorHandler
      _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetOverrunErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetFramingErrorHandler                        2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetErrorHandler                               2     0      2     121
                                              1 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (1) _EUSART_Write                                         2     2      0      62
                                              1 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _INTERRUPT_InterruptManager                           0     0      0       0
                   Absolute function *
                 _EUSART_Receive_ISR *
                _EUSART_Transmit_ISR *
 ---------------------------------------------------------------------------------
 (5) _EUSART_Transmit_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (5) _EUSART_Receive_ISR                                   0     0      0       0
                   Absolute function *
         _EUSART_DefaultErrorHandler *
  _EUSART_DefaultFramingErrorHandler *
  _EUSART_DefaultOverrunErrorHandler *
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultOverrunErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultFramingErrorHandler                    0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _EUSART_DefaultErrorHandler                           0     0      0       0
               _EUSART_RxDataHandler
 ---------------------------------------------------------------------------------
 (6) _EUSART_RxDataHandler                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EUSART_Write
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetErrorHandler
       _EUSART_SetFramingErrorHandler
       _EUSART_SetOverrunErrorHandler
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PMD_Initialize
     _WDT_Initialize

 _INTERRUPT_InterruptManager (ROOT)
   Absolute function(Fake) *
   _EUSART_Receive_ISR *
     Absolute function(Fake) *
     _EUSART_DefaultErrorHandler *
       _EUSART_RxDataHandler
     _EUSART_DefaultFramingErrorHandler *
     _EUSART_DefaultOverrunErrorHandler *
     _EUSART_RxDataHandler *
   _EUSART_Transmit_ISR *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      4       C       2       85.7%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2      11       5       21.2%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     41      49       7       91.2%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0      66      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              30      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0      66      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Mar  4 21:44:50 2022

                ?_EUSART_SetRxInterruptHandler 0079                                             l83 02EE  
                                          l111 0351                                            l107 032F  
                                          l108 0338                                            l152 0404  
                                          l241 03C8                                            l146 03FE  
                                          l250 03D9                                            l155 03EC  
                                          l244 03D1                                            l149 03F8  
                                          l158 03F2                                            l247 0408  
                                          l193 0375                                            l353 02AB  
                                          u990 032F                                            u991 032E  
                       ??_EUSART_RxDataHandler 0078                 ?_EUSART_SetFramingErrorHandler 0079  
                      __size_of_PMD_Initialize 0008                                            wreg 0009  
                                         l2000 00EB                                           l2010 0115  
                                         l2002 00F9                                           l2100 0263  
                                         l2020 012B                                           l2012 0116  
                                         l2004 0103                                           l2102 026A  
                                         l2110 0283                                           l2030 0149  
                                         l2022 0131                                           l2006 0108  
                                         l2014 0118                                           l2120 02A3  
                                         l2112 0288                                           l2104 0275  
                                         l2040 0181                                           l2032 014F  
                                         l2024 0137                                           l2016 011E  
                                         l2008 010F                                           l2122 02A9  
                                         l2114 028F                                           l2106 027B  
                                         l2042 0185                                           l2034 0158  
                                         l2026 013D                                           l2018 0125  
                                         l2116 0296                                           l2108 0281  
                                         l2060 01EA                                           l2044 018E  
                                         l2036 015D                                           l2028 0143  
                                         l2052 01B8                                           l2118 029C  
                                         l2070 0208                                           l2062 01F5  
                                         l2046 0193                                           l2038 016C  
                                         l2054 01D6                                           l2080 022D  
                                         l2072 020F                                           l2064 01FB  
                                         l2056 01DC                                           l2160 01C2  
                                         l2048 01A2                                           l2090 0248  
                                         l2074 0216                                           l2082 022F  
                                         l2066 0201                                           l2058 01E3  
                                         l2092 024F                                           l2084 0234  
                                         l2076 0221                                           l2068 0203  
                                         l2094 0255                                           l2086 023B  
                                         l2078 0227                                           l2088 0242  
                                         l2096 0257                                           l2098 025C  
                                         l1900 0341                                           l1820 03F9  
                                         l1902 0345                                           l1822 03F3  
                                         l1830 02B9                                           l1910 03B9  
                                         l1904 034B                                           l1824 03FF  
                                         l1816 03ED                                           l1840 02CB  
                                         l1832 02C2                                           l1912 03BC  
                                         l1906 034C                                           l1818 03E7  
                                         l1850 02E9                                           l1842 02CC  
                                         l1834 02C5                                           l1826 02B0  
                                         l1914 03BF                                           l1930 004E  
                                         l1922 0043                                           l1908 034F  
                                         l1852 02EA                                           l1844 02D3  
                                         l1836 02C7                                           l1828 02B2  
                                         l1860 0355                                           l1916 03C2  
                                         l1940 006C                                           l1932 0054  
                                         l1924 0046                                           l1854 02EB  
                                         l1846 02DA                                           l1838 02C9  
                                         l1870 0368                                           l1862 0358  
                                         l1918 03C5                                           l1950 0071  
                                         l1942 006D                                           l1934 005A  
                                         l1926 0047                                           l1856 02EC  
                                         l1848 02E5                                           l1872 036A  
                                         l1864 035A                                           l1880 03D2  
                                         l1960 0076                                           l1952 0072  
                                         l1944 006E                                           l1936 0060  
                                         l1928 0048                                           l1882 03C9  
                                         l1874 036D                                           l1866 035D  
                                         l1858 0352                                           l1890 0405  
                                         l1970 0082                                           l1962 0077  
                                         l1954 0073                                           l1946 006F  
                                         l1938 0066                                           l1892 0329  
                                         l1884 03CC                                           l1876 036F  
                                         l1868 0365                                           l1980 00A3  
                                         l1972 0086                                           l1964 0078  
                                         l1956 0074                                           l1948 0070  
                                         l1894 0329                                           l1886 03CD  
                                         l1878 0372                                           l1990 00CF  
                                         l1982 00B2                                           l1974 0095  
                                         l1966 0079                                           l1958 0075  
                                         l1896 0334                                           l1888 03D0  
                                         l1992 00D5                                           l1984 00B6  
                                         l1976 0099                                           l1968 007C  
                                         l1898 0339                                           l1994 00DB  
                                         l1986 00BC                                           l1978 009F  
                                         l1996 00DF                                           l1988 00C0  
                                         l1998 00E4                                    main@latSize 00DB  
                                         u1000 0334                                           u1001 0333  
                                         u1010 034B                                           u1011 034A  
                                         u1100 010F                                           u1020 0095  
                                         u1101 010E                                           u1021 0094  
                                         u1110 011E                                           u1030 00B2  
                                         u1111 011D                                           u1031 00B1  
                                         u1200 020F                                           u1120 0125  
                                         u1040 00CF                                           u1201 020E  
                                         u1121 0124                                           u1041 00CE  
                                         u1025 0091                                           u1210 0216  
                                         u1130 016C                                           u1050 00D5  
                                         u1211 0215                                           u1131 016B  
                                         u1051 00D4                                           u1035 00AE  
                                         u1300 0281                                           u1220 022D  
                                         u1140 01A2                                           u1060 00DB  
                                         u1301 0280                                           u1221 022C  
                                         u1141 01A1                                           u1061 00DA  
                                         u1045 00CB                                           u1310 0288  
                                         u1230 0234                                           u1150 01DC  
                                         u1070 00E4                                           u1311 0287  
                                         u1231 0233                                           u1151 01DB  
                                         u1135 0168                                           u1071 00E3  
                                         u1320 028F                                           u1240 023B  
                                         u1160 01E3                                           u1080 00EB  
                                         u1321 028E                                           u1241 023A  
                                         u1161 01E2                                           u1145 019E  
                                         u1081 00EA                                           u1330 0296  
                                         u1250 0242                                           u1170 01EA  
                                         u1090 00F9                                           u1331 0295  
                                         u1251 0241                                           u1171 01E9  
                                         u1091 00F8                                           u1340 02A9  
                                         u1260 0255                                           u1180 0201  
                                         u1341 02A8                                           u1261 0254  
                                         u1181 0200                                           _LATA 010C  
                                         u1270 025C                                           u1190 0208  
                                         u1271 025B                                           u1191 0207  
                                         _LATC 010E                                           u1280 0263  
                                         u1281 0262                                           u1290 026A  
                                         u1291 0269                                           _PMD0 0911  
                                         _PMD1 0912                                           _PMD2 0913  
                                         _PMD3 0914                                           _PMD4 0915  
                                         _PMD5 0916                                           _WPUA 020C  
                                         _WPUC 020E                                    main@long_go 00D4  
                                  main@longpos 00DF                                           _main 0043  
                                         fsr0h 0005                                           fsr1h 0007  
                                         indf0 0000                                           fsr0l 0004  
                                         indf1 0001                                           fsr1l 0006  
                                         btemp 007E                                    main@time_go 00D2  
                                  main@timepos 00DD                                           start 002D  
                                  main@rx_long 00B8                                    main@rx_time 00A6  
                                 main@header_g 03DA                                  ?_EUSART_Write 0078  
               __size_of_OSCILLATOR_Initialize 0009                  __end_of_OSCILLATOR_Initialize 03D2  
                                        ?_main 0078                                          i1l120 0395  
                                        i1l130 0327                                          i1l123 0397  
                                        i1l140 040C                                          i1l134 03B8  
                                        i1l143 0410                                          i1l137 0411  
                                        i1l274 001A                                          i1l275 002B  
                                        i1l279 002B                                          _OSCEN 091D  
                                        u50_20 03B3                                          u50_21 03B2  
                                        u60_20 031D                                          u60_21 031C  
                                        u61_20 000A                                          u61_21 0009  
                                        u62_20 000F                                          u62_21 000E  
                                        u63_20 0014                                          u63_21 0013  
                                        u56_20 037D                                          u64_20 001F  
                                        u56_21 037C                                          u64_21 001E  
                                        u57_20 038E                                          u65_20 0024  
                                        u57_21 038D                                          u65_21 0023  
                                        _TRISA 008C                                          _TRISC 008E  
                                        u58_20 02F9                                          u58_21 02F8  
                                        u59_20 0309                                          u59_21 0308  
                                        _RXPPS 0E24                                   main@longSize 00DC  
                               _WDT_Initialize 0405                                   main@timeSize 00D8  
                                        main@i 00C2                                          pclath 000A  
                                        status 0003                                          wtemp0 007E  
                              __initialization 002F                                   __end_of_main 02B0  
                               ??_EUSART_Write 0079                    ?_INTERRUPT_InterruptManager 0078  
               ??_EUSART_SetRxInterruptHandler 007B                                         ??_main 002F  
                       __end_of_WDT_Initialize 0409                                  main@gnggaSize 00D7  
    __end_of_EUSART_DefaultFramingErrorHandler 0412     __size_of_EUSART_DefaultFramingErrorHandler 0001  
          ??_EUSART_DefaultFramingErrorHandler 0078             ?_EUSART_DefaultFramingErrorHandler 0078  
            _EUSART_DefaultFramingErrorHandler 0411                     _EUSART_OverrunErrorHandler 00E3  
                                       _ANSELA 018C                                         _ANSELC 018E  
                                       _RC1REG 0199                                         _RC1STA 019D  
                                       _RC4PPS 0EA4                                         i1l1410 03A1  
                                       i1l1412 03AA                                         i1l1414 03AE  
                                       i1l1416 03B3                                         i1l1408 0398  
                                       _ODCONA 028C                                         i1l1418 03B4  
                                       i1l1530 0376                                         _ODCONC 028E  
                                       i1l1452 0409                                         i1l1540 038F  
                                       i1l1532 037D                                         i1l1454 040D  
                                       i1l1550 0304                                         i1l1542 02EF  
                                       i1l1534 0384                                         i1l1560 0324  
                                       i1l1552 0309                                         i1l1544 02F4  
                                       i1l1536 0388                                         i1l1554 030E  
                                       i1l1546 02F9                                         i1l1538 038E  
                                       i1l1556 0314                                         i1l1548 02FE  
                                       i1l1580 000A                                         i1l1558 031D  
                                       i1l1582 000F                                         i1l1584 0014  
                                       i1l1586 001F                                         i1l1578 0006  
                                       i1l1588 0024                                         _INLVLA 038C  
                                       _INLVLC 038E                                         _OSCFRQ 091F  
                                       _TX1REG 019A                                         _WDTCON 0097  
                                       _TX1STA 019E                            _EUSART_Transmit_ISR 0376  
                                       _rxData 0029                                 _PMD_Initialize 03D2  
                              ?_WDT_Initialize 0078                           ?_EUSART_Transmit_ISR 0078  
                            _SYSTEM_Initialize 03B9                        __end_of__initialization 003F  
                           ?_SYSTEM_Initialize 0078           __end_of_EUSART_SetTxInterruptHandler 03ED  
        __size_of_EUSART_SetTxInterruptHandler 0006                   _EUSART_SetTxInterruptHandler 03E7  
                               __pcstackCOMMON 0078                            ??_SYSTEM_Initialize 007C  
                       __end_of_PMD_Initialize 03DA                           _eusartRxStatusBuffer 0071  
              ??_EUSART_SetOverrunErrorHandler 007B                      __end_of_SYSTEM_Initialize 03C9  
                        ??_EUSART_Transmit_ISR 0078                                     __pbssBANK0 0020  
                         __end_of_EUSART_Write 0352                    __size_of_EUSART_Receive_ISR 0039  
                                   __pmaintext 0043                  ?_EUSART_SetTxInterruptHandler 0079  
             _EUSART_TxDefaultInterruptHandler 002C                                     __pintentry 0004  
                 ??_EUSART_DefaultErrorHandler 0079                                ?_PMD_Initialize 0078  
                                _eusartRxCount 0070                                        _SP1BRGH 019C  
                                      _SP1BRGL 019B                                        _OSCCON1 0919  
                                      _OSCCON3 091B                  __size_of_EUSART_RxDataHandler 0021  
                                      _OSCTUNE 091E                                        _SLRCONA 030C  
                                      _SLRCONC 030E                                     _dollarFlag 002A  
                     ??_EUSART_SetErrorHandler 007B            __size_of_EUSART_DefaultErrorHandler 0004  
                                      __ptext1 03B9                                        __ptext2 0405  
                                      __ptext3 03D2                                        __ptext4 0352  
                                      __ptext5 03C9                                        __ptext6 02B0  
                                      __ptext7 03E7                                        __ptext8 03ED  
                                      __ptext9 03F3                          _OSCILLATOR_Initialize 03C9  
                     ??_PIN_MANAGER_Initialize 0079                                     _parserFlag 0077  
                   __size_of_SYSTEM_Initialize 0010                                        clrloop0 03E2  
                         end_of_initialization 003F          __end_of_EUSART_SetOverrunErrorHandler 03F9  
       __size_of_EUSART_SetOverrunErrorHandler 0006                  _EUSART_SetOverrunErrorHandler 03F3  
                            _EUSART_Initialize 02B0                             ?_EUSART_Initialize 0078  
                          ??_EUSART_Initialize 007B                               ??_WDT_Initialize 0079  
               ??_EUSART_SetTxInterruptHandler 007B                          __size_of_EUSART_Write 002A  
              __size_of_EUSART_SetErrorHandler 0006                      __end_of_EUSART_Initialize 02EF  
                                   main@ewSize 00CD                                     main@lat_go 00D3  
                                   main@latpos 00DE                                     main@nsSize 00CC  
                                   main@rx_lat 00AF                                     main@rx_gps 00A0  
           __end_of_EUSART_DefaultErrorHandler 0411                     _EUSART_DefaultErrorHandler 040D  
                                 _EUSART_Write 0328                         ?_OSCILLATOR_Initialize 0078  
                          start_initialization 002F                __size_of_PIN_MANAGER_Initialize 0024  
 EUSART_SetRxInterruptHandler@interruptHandler 0079   EUSART_SetTxInterruptHandler@interruptHandler 0079  
               ?_EUSART_SetOverrunErrorHandler 0079                     _EUSART_FramingErrorHandler 00E5  
                             ??_PMD_Initialize 0079                         _EUSART_SetErrorHandler 03FF  
                  __end_of_EUSART_Transmit_ISR 0398                                    __pbssCOMMON 0070  
                                    ___latbits 0002                                  __pcstackBANK0 002F  
                                __pcstackBANK1 00A0                     __end_of_EUSART_Receive_ISR 0328  
                   __size_of_EUSART_Initialize 003F               _EUSART_RxDefaultInterruptHandler 00E7  
                                    __pnvBANK0 002C                                      __pnvBANK1 00E1  
                 __end_of_EUSART_RxDataHandler 03B9                         _PIN_MANAGER_Initialize 0352  
                                 _eusartRxHead 0074                                   _eusartTxHead 0076  
                                 _eusartRxTail 0073                                   _eusartTxTail 0075  
                 ??_INTERRUPT_InterruptManager 0079                        _eusartTxBufferRemaining 002E  
                                     _BAUD1CON 019F                                 _eusartRxBuffer 0072  
                               _eusartTxBuffer 0020         EUSART_SetErrorHandler@interruptHandler 0079  
                                    clear_ram0 03E1                                       _PIE1bits 0091  
                            _eusartRxLastError 0028            __size_of_INTERRUPT_InterruptManager 0029  
                                     _PIR1bits 0011                ??_EUSART_SetFramingErrorHandler 007B  
    __end_of_EUSART_DefaultOverrunErrorHandler 040D     __size_of_EUSART_DefaultOverrunErrorHandler 0004  
          ??_EUSART_DefaultOverrunErrorHandler 0078             ?_EUSART_DefaultOverrunErrorHandler 0078  
            _EUSART_DefaultOverrunErrorHandler 0409                                      main@i_430 00C6  
                                    main@i_431 00C8                                      main@i_432 00CA  
                                    main@i_429 00C4                                      main@ew_go 00D6  
                                    main@ewpos 00DA                                      main@ns_go 00D5  
                                    main@nspos 00D9                                      main@rx_ew 00CF  
                                    main@rx_ns 00CE                        ??_OSCILLATOR_Initialize 0079  
                          _EUSART_ErrorHandler 00E1                    ?_EUSART_DefaultErrorHandler 0078  
                         _EUSART_RxDataHandler 0398                                       __ptext10 03F9  
                                     __ptext11 03FF                                       __ptext12 0328  
                                     __ptext14 0376                                       __ptext15 02EF  
                                     __ptext16 0409                                       __ptext17 0411  
                                     __ptext18 040D                                       __ptext19 0398  
                         __end_ofmain@header_g 03E1                                  __size_of_main 026D  
                      ?_EUSART_SetErrorHandler 0079                                     _RC1STAbits 019D  
                                     _uartFlag 002B  EUSART_SetOverrunErrorHandler@interruptHandler 0079  
                                     int$flags 007E             __end_of_INTERRUPT_InterruptManager 002D  
                   _INTERRUPT_InterruptManager 0004                                       main@g_ok 00D1  
        __end_of_EUSART_SetFramingErrorHandler 03FF         __size_of_EUSART_SetFramingErrorHandler 0006  
                _EUSART_SetFramingErrorHandler 03F9                                       main@cpos 00D0  
                                     main@fpos 00E0                                     _INTCONbits 000B  
                        ?_EUSART_RxDataHandler 0078                        __size_of_WDT_Initialize 0004  
                                     intlevel1 0000                        ?_PIN_MANAGER_Initialize 0078  
               __end_of_EUSART_SetErrorHandler 0405           __end_of_EUSART_SetRxInterruptHandler 03F3  
        __size_of_EUSART_SetRxInterruptHandler 0006                   _EUSART_SetRxInterruptHandler 03ED  
                           _EUSART_Receive_ISR 02EF  EUSART_SetFramingErrorHandler@interruptHandler 0079  
                                __pstringtext1 03DA                            ?_EUSART_Receive_ISR 0078  
                                   _TX1STAbits 019E                             EUSART_Write@txData 007A  
                 __size_of_EUSART_Transmit_ISR 0022                 __end_of_PIN_MANAGER_Initialize 0376  
                         ??_EUSART_Receive_ISR 0079  
